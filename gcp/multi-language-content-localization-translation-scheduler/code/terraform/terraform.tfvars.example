# Example Terraform Variables for Multi-Language Content Localization Pipeline
# Copy this file to terraform.tfvars and customize for your environment

# ===========================
# REQUIRED VARIABLES
# ===========================

# Your Google Cloud Project ID
project_id = "your-project-id-here"

# Google Cloud region for resource deployment
region = "us-central1"

# Environment name for resource labeling
environment = "dev"

# ===========================
# CLOUD FUNCTION CONFIGURATION
# ===========================

# Maximum number of function instances for auto-scaling
function_max_instances = 10

# Minimum number of function instances to keep warm (0 for cost optimization)
function_min_instances = 0

# Function memory allocation (128M, 256M, 512M, 1G, 2G, 4G, 8G)
function_memory = "512M"

# Function CPU allocation
function_cpu = "1"

# Function timeout in seconds (60-540)
function_timeout_seconds = 540

# Logging level for the function (DEBUG, INFO, WARNING, ERROR, CRITICAL)
log_level = "INFO"

# ===========================
# TRANSLATION CONFIGURATION
# ===========================

# Custom target languages (ISO 639-1 codes)
# Leave empty to use default languages: ["es", "fr", "de", "it", "pt", "ja", "zh"]
custom_target_languages = []

# Translation model to use ("nmt" for Neural Machine Translation, "base" for older model)
translation_model = "nmt"

# Supported file types for translation
supported_file_types = [".txt", ".md", ".html", ".json", ".csv"]

# ===========================
# SCHEDULER CONFIGURATION
# ===========================

# Cron schedule for batch translation processing (default: daily at 2 AM UTC)
batch_schedule = "0 2 * * *"

# Time zone for scheduled jobs
time_zone = "UTC"

# Maximum concurrent translations during batch processing
batch_processing_concurrency = 5

# ===========================
# STORAGE CONFIGURATION
# ===========================

# File prefix filter for automatic translation triggers (empty for all files)
source_file_prefix = ""

# Age in days after which objects move to Coldline storage class
storage_lifecycle_age_coldline = 90

# Age in days after which objects are deleted (0 to disable deletion)
storage_lifecycle_age_delete = 365

# Allow Terraform to destroy storage buckets with content (use with caution)
force_destroy = false

# Enable Autoclass for automatic storage class transitions
enable_autoclass = false

# Enable Requestor Pays billing for storage buckets
enable_requestor_pays = false

# ===========================
# SECURITY CONFIGURATION
# ===========================

# Enable uniform bucket-level access for enhanced security
enable_uniform_bucket_access = true

# Prevent public access to storage buckets
enable_public_access_prevention = true

# VPC Connector for Cloud Functions (optional, for enhanced security)
# Format: "projects/PROJECT_ID/locations/REGION/connectors/CONNECTOR_NAME"
# vpc_connector = null

# Customer-managed encryption key for bucket encryption (optional)
# bucket_encryption_key = null

# ===========================
# MONITORING AND ALERTING
# ===========================

# Enable creation of Cloud Monitoring dashboard
enable_monitoring_dashboard = true

# Enable alerting for translation pipeline errors
enable_alerting = false

# List of notification channel IDs for alerts (requires enable_alerting = true)
alert_notification_channels = []

# ===========================
# PUB/SUB CONFIGURATION
# ===========================

# Number of days to retain Pub/Sub messages (1-31)
pubsub_message_retention_days = 7

# ===========================
# ADVANCED FEATURES
# ===========================

# Enable custom glossary for consistent translation of specific terms
enable_translation_glossary = false

# Source language for translation glossary (ISO 639-1 code)
glossary_source_language = "en"

# Enable automatic content classification before translation
enable_content_classification = false

# Enable translation quality scoring and validation
enable_quality_scoring = false

# Enable human review workflow for high-priority content
enable_human_review_workflow = false

# ===========================
# RESOURCE TAGGING
# ===========================

# Additional labels to apply to all resources
additional_labels = {
  # team        = "content-team"
  # cost_center = "marketing"
  # owner       = "content-ops"
}

# ===========================
# EXAMPLES FOR DIFFERENT ENVIRONMENTS
# ===========================

# Development Environment Example:
# environment = "dev"
# function_max_instances = 5
# force_destroy = true
# enable_monitoring_dashboard = true
# storage_lifecycle_age_delete = 30

# Staging Environment Example:
# environment = "staging"
# function_max_instances = 15
# enable_alerting = true
# custom_target_languages = ["es", "fr", "de"]
# batch_schedule = "0 1 * * *"  # 1 AM UTC

# Production Environment Example:
# environment = "prod"
# function_max_instances = 50
# function_min_instances = 2
# enable_alerting = true
# enable_monitoring_dashboard = true
# vpc_connector = "projects/my-project/locations/us-central1/connectors/translation-vpc"
# bucket_encryption_key = "projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-key"
# storage_lifecycle_age_delete = 0  # Never delete in production