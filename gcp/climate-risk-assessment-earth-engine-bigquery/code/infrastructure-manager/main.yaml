# Infrastructure Manager Configuration for Climate Risk Assessment with Earth Engine and BigQuery
# This configuration deploys the complete infrastructure needed for climate risk assessment
# using Google Earth Engine for satellite data processing and BigQuery for geospatial analytics

# Input variables for customization
variables:
  # Project configuration
  project_id:
    type: string
    description: "Google Cloud project ID where resources will be created"
    default: "climate-risk-assessment"
  
  region:
    type: string
    description: "Primary region for resource deployment"
    default: "us-central1"
  
  zone:
    type: string
    description: "Primary zone for compute resources"
    default: "us-central1-a"
  
  # Resource naming
  resource_suffix:
    type: string
    description: "Suffix for resource naming to ensure uniqueness"
    default: "dev"
  
  # BigQuery configuration
  dataset_location:
    type: string
    description: "Location for BigQuery dataset"
    default: "US"
  
  # Cloud Functions configuration
  function_memory:
    type: string
    description: "Memory allocation for Cloud Functions"
    default: "2048MB"
  
  function_timeout:
    type: string
    description: "Timeout for Cloud Functions"
    default: "540s"
  
  # Storage configuration
  storage_class:
    type: string
    description: "Storage class for Cloud Storage bucket"
    default: "STANDARD"

# Resource definitions
resources:
  # Enable required APIs
  - name: earthengine-api
    type: gcp-types/serviceusage-v1:projects.services
    properties:
      name: projects/${project_id}/services/earthengine.googleapis.com
      project: ${project_id}
    metadata:
      dependsOn: []

  - name: bigquery-api
    type: gcp-types/serviceusage-v1:projects.services
    properties:
      name: projects/${project_id}/services/bigquery.googleapis.com
      project: ${project_id}
    metadata:
      dependsOn: []

  - name: cloudfunctions-api
    type: gcp-types/serviceusage-v1:projects.services
    properties:
      name: projects/${project_id}/services/cloudfunctions.googleapis.com
      project: ${project_id}
    metadata:
      dependsOn: []

  - name: monitoring-api
    type: gcp-types/serviceusage-v1:projects.services
    properties:
      name: projects/${project_id}/services/monitoring.googleapis.com
      project: ${project_id}
    metadata:
      dependsOn: []

  - name: storage-api
    type: gcp-types/serviceusage-v1:projects.services
    properties:
      name: projects/${project_id}/services/storage.googleapis.com
      project: ${project_id}
    metadata:
      dependsOn: []

  - name: cloudbuild-api
    type: gcp-types/serviceusage-v1:projects.services
    properties:
      name: projects/${project_id}/services/cloudbuild.googleapis.com
      project: ${project_id}
    metadata:
      dependsOn: []

  # Service account for Cloud Functions
  - name: climate-functions-sa
    type: gcp-types/iam-v1:projects.serviceAccounts
    properties:
      accountId: climate-functions-${resource_suffix}
      displayName: "Climate Risk Assessment Functions Service Account"
      description: "Service account for Earth Engine and BigQuery data processing functions"
      project: ${project_id}
    metadata:
      dependsOn: [earthengine-api, bigquery-api, cloudfunctions-api]

  # IAM roles for the service account
  - name: climate-functions-sa-earthengine-role
    type: gcp-types/cloudresourcemanager-v1:projects.iamPolicyMemberBinding
    properties:
      project: ${project_id}
      role: roles/earthengine.viewer
      member: serviceAccount:$(ref.climate-functions-sa.email)
    metadata:
      dependsOn: [climate-functions-sa]

  - name: climate-functions-sa-bigquery-role
    type: gcp-types/cloudresourcemanager-v1:projects.iamPolicyMemberBinding
    properties:
      project: ${project_id}
      role: roles/bigquery.dataEditor
      member: serviceAccount:$(ref.climate-functions-sa.email)
    metadata:
      dependsOn: [climate-functions-sa]

  - name: climate-functions-sa-storage-role
    type: gcp-types/cloudresourcemanager-v1:projects.iamPolicyMemberBinding
    properties:
      project: ${project_id}
      role: roles/storage.objectAdmin
      member: serviceAccount:$(ref.climate-functions-sa.email)
    metadata:
      dependsOn: [climate-functions-sa]

  - name: climate-functions-sa-monitoring-role
    type: gcp-types/cloudresourcemanager-v1:projects.iamPolicyMemberBinding
    properties:
      project: ${project_id}
      role: roles/monitoring.metricWriter
      member: serviceAccount:$(ref.climate-functions-sa.email)
    metadata:
      dependsOn: [climate-functions-sa]

  # Cloud Storage bucket for intermediate data and function source code
  - name: climate-data-bucket
    type: gcp-types/storage-v1:buckets
    properties:
      name: climate-data-${project_id}-${resource_suffix}
      project: ${project_id}
      location: ${region}
      storageClass: ${storage_class}
      uniformBucketLevelAccess:
        enabled: true
      publicAccessPrevention: enforced
      versioning:
        enabled: true
      lifecycle:
        rule:
          - condition:
              age: 30
            action:
              type: Delete
      labels:
        purpose: climate-risk-assessment
        environment: ${resource_suffix}
    metadata:
      dependsOn: [storage-api]

  # Cloud Storage bucket for Cloud Functions source code
  - name: climate-functions-source-bucket
    type: gcp-types/storage-v1:buckets
    properties:
      name: climate-functions-source-${project_id}-${resource_suffix}
      project: ${project_id}
      location: ${region}
      storageClass: ${storage_class}
      uniformBucketLevelAccess:
        enabled: true
      publicAccessPrevention: enforced
      versioning:
        enabled: true
      labels:
        purpose: climate-functions-source
        environment: ${resource_suffix}
    metadata:
      dependsOn: [storage-api]

  # BigQuery dataset for climate data
  - name: climate-risk-dataset
    type: gcp-types/bigquery-v2:datasets
    properties:
      datasetId: climate_risk_${resource_suffix}
      projectId: ${project_id}
      location: ${dataset_location}
      description: "Climate risk assessment data from Earth Engine and satellite imagery"
      friendlyName: "Climate Risk Assessment Dataset"
      labels:
        purpose: climate-risk-assessment
        environment: ${resource_suffix}
      access:
        - role: OWNER
          userByEmail: $(ref.climate-functions-sa.email)
        - role: READER
          specialGroup: projectReaders
        - role: WRITER
          specialGroup: projectWriters
    metadata:
      dependsOn: [bigquery-api, climate-functions-sa]

  # BigQuery table for climate indicators
  - name: climate-indicators-table
    type: gcp-types/bigquery-v2:tables
    properties:
      datasetId: $(ref.climate-risk-dataset.datasetId)
      projectId: ${project_id}
      tableId: climate_indicators
      description: "Raw climate indicator data from Earth Engine processing"
      friendlyName: "Climate Indicators"
      labels:
        purpose: climate-indicators
        environment: ${resource_suffix}
      schema:
        fields:
          - name: longitude
            type: FLOAT
            mode: REQUIRED
            description: "Longitude coordinate of the sample point"
          - name: latitude
            type: FLOAT
            mode: REQUIRED
            description: "Latitude coordinate of the sample point"
          - name: location
            type: GEOGRAPHY
            mode: REQUIRED
            description: "Geographic point location"
          - name: avg_day_temp_c
            type: FLOAT
            mode: NULLABLE
            description: "Average daytime temperature in Celsius"
          - name: avg_night_temp_c
            type: FLOAT
            mode: NULLABLE
            description: "Average nighttime temperature in Celsius"
          - name: total_precipitation_mm
            type: FLOAT
            mode: NULLABLE
            description: "Total precipitation in millimeters"
          - name: avg_ndvi
            type: FLOAT
            mode: NULLABLE
            description: "Average Normalized Difference Vegetation Index"
          - name: avg_evi
            type: FLOAT
            mode: NULLABLE
            description: "Average Enhanced Vegetation Index"
          - name: analysis_date
            type: TIMESTAMP
            mode: REQUIRED
            description: "Timestamp when the analysis was performed"
          - name: analysis_period_start
            type: DATE
            mode: REQUIRED
            description: "Start date of the analysis period"
          - name: analysis_period_end
            type: DATE
            mode: REQUIRED
            description: "End date of the analysis period"
      timePartitioning:
        type: DAY
        field: analysis_date
      clustering:
        fields: ["analysis_period_start", "analysis_period_end"]
    metadata:
      dependsOn: [climate-risk-dataset]

  # BigQuery table for climate extremes
  - name: climate-extremes-table
    type: gcp-types/bigquery-v2:tables
    properties:
      datasetId: $(ref.climate-risk-dataset.datasetId)
      projectId: ${project_id}
      tableId: climate_extremes
      description: "Climate extreme events and risk indicators"
      friendlyName: "Climate Extremes"
      labels:
        purpose: climate-extremes
        environment: ${resource_suffix}
      schema:
        fields:
          - name: location
            type: GEOGRAPHY
            mode: REQUIRED
            description: "Geographic location of the extreme event"
          - name: region_name
            type: STRING
            mode: NULLABLE
            description: "Human-readable region name"
          - name: extreme_heat_days
            type: INTEGER
            mode: NULLABLE
            description: "Number of extreme heat days"
          - name: extreme_cold_days
            type: INTEGER
            mode: NULLABLE
            description: "Number of extreme cold days"
          - name: drought_severity_index
            type: FLOAT
            mode: NULLABLE
            description: "Drought severity index (0-1 scale)"
          - name: flood_risk_score
            type: FLOAT
            mode: NULLABLE
            description: "Flood risk score (0-100 scale)"
          - name: temperature_trend_slope
            type: FLOAT
            mode: NULLABLE
            description: "Temperature trend slope (°C per year)"
          - name: precipitation_trend_slope
            type: FLOAT
            mode: NULLABLE
            description: "Precipitation trend slope (mm per year)"
          - name: vegetation_stress_indicator
            type: FLOAT
            mode: NULLABLE
            description: "Vegetation stress indicator (0-1 scale)"
          - name: risk_level
            type: STRING
            mode: REQUIRED
            description: "Risk level classification (LOW, MEDIUM, HIGH)"
          - name: confidence_score
            type: FLOAT
            mode: NULLABLE
            description: "Confidence score for the risk assessment (0-1 scale)"
          - name: last_updated
            type: TIMESTAMP
            mode: REQUIRED
            description: "Timestamp of last update"
          - name: data_source
            type: STRING
            mode: NULLABLE
            description: "Source of the climate data"
      timePartitioning:
        type: DAY
        field: last_updated
      clustering:
        fields: ["risk_level", "region_name"]
    metadata:
      dependsOn: [climate-risk-dataset]

  # BigQuery table for risk assessments
  - name: risk-assessments-table
    type: gcp-types/bigquery-v2:tables
    properties:
      datasetId: $(ref.climate-risk-dataset.datasetId)
      projectId: ${project_id}
      tableId: risk_assessments
      description: "Comprehensive climate risk assessments and recommendations"
      friendlyName: "Risk Assessments"
      labels:
        purpose: risk-assessments
        environment: ${resource_suffix}
      schema:
        fields:
          - name: assessment_id
            type: STRING
            mode: REQUIRED
            description: "Unique identifier for the assessment"
          - name: location
            type: GEOGRAPHY
            mode: REQUIRED
            description: "Geographic location of the assessment"
          - name: assessment_date
            type: TIMESTAMP
            mode: REQUIRED
            description: "Date and time of the assessment"
          - name: overall_risk_score
            type: FLOAT
            mode: NULLABLE
            description: "Overall risk score (0-100 scale)"
          - name: heat_risk_component
            type: FLOAT
            mode: NULLABLE
            description: "Heat risk component score"
          - name: drought_risk_component
            type: FLOAT
            mode: NULLABLE
            description: "Drought risk component score"
          - name: flood_risk_component
            type: FLOAT
            mode: NULLABLE
            description: "Flood risk component score"
          - name: ecosystem_risk_component
            type: FLOAT
            mode: NULLABLE
            description: "Ecosystem risk component score"
          - name: adaptation_priority
            type: STRING
            mode: NULLABLE
            description: "Adaptation priority level"
          - name: recommended_actions
            type: STRING
            mode: REPEATED
            description: "Array of recommended adaptation actions"
          - name: confidence_interval_lower
            type: FLOAT
            mode: NULLABLE
            description: "Lower bound of confidence interval"
          - name: confidence_interval_upper
            type: FLOAT
            mode: NULLABLE
            description: "Upper bound of confidence interval"
      timePartitioning:
        type: DAY
        field: assessment_date
      clustering:
        fields: ["adaptation_priority"]
    metadata:
      dependsOn: [climate-risk-dataset]

  # BigQuery view for climate risk analysis
  - name: climate-risk-analysis-view
    type: gcp-types/bigquery-v2:tables
    properties:
      datasetId: $(ref.climate-risk-dataset.datasetId)
      projectId: ${project_id}
      tableId: climate_risk_analysis
      description: "Analytical view for climate risk assessment"
      friendlyName: "Climate Risk Analysis View"
      labels:
        purpose: climate-risk-analysis
        environment: ${resource_suffix}
      view:
        query: |
          WITH climate_stats AS (
            SELECT 
              location,
              AVG(avg_day_temp_c) as mean_temp,
              STDDEV(avg_day_temp_c) as temp_variability,
              SUM(total_precipitation_mm) as total_precip,
              AVG(avg_ndvi) as mean_vegetation_health,
              COUNT(*) as data_points,
              -- Temperature extremes (above 35°C or below -10°C)
              COUNTIF(avg_day_temp_c > 35) as extreme_heat_days,
              COUNTIF(avg_day_temp_c < -10) as extreme_cold_days,
              -- Drought indicator (low precipitation + low vegetation)
              COUNTIF(total_precipitation_mm < 10 AND avg_ndvi < 0.3) as drought_indicators,
              -- Calculate geographic centroid for regional analysis
              ST_CENTROID(ST_UNION_AGG(location)) as region_center
            FROM `${project_id}.climate_risk_${resource_suffix}.climate_indicators`
            WHERE avg_day_temp_c IS NOT NULL 
              AND total_precipitation_mm IS NOT NULL
              AND avg_ndvi IS NOT NULL
            GROUP BY location
          ),
          risk_scoring AS (
            SELECT *,
              -- Composite risk score (0-100 scale)
              LEAST(100, GREATEST(0, 
                (extreme_heat_days * 2.5) + 
                (drought_indicators * 3.0) + 
                (extreme_cold_days * 1.5) +
                (ABS(temp_variability - 10) * 2.0)
              )) as composite_risk_score,
              -- Risk categorization
              CASE 
                WHEN (extreme_heat_days + drought_indicators) > 20 THEN 'HIGH'
                WHEN (extreme_heat_days + drought_indicators) > 10 THEN 'MEDIUM'
                ELSE 'LOW'
              END as risk_category
            FROM climate_stats
          )
          SELECT 
            location,
            region_center,
            mean_temp,
            temp_variability,
            total_precip,
            mean_vegetation_health,
            extreme_heat_days,
            extreme_cold_days,
            drought_indicators,
            composite_risk_score,
            risk_category,
            -- Confidence based on data completeness
            ROUND((data_points / 1460.0) * 100, 1) as data_confidence_pct
          FROM risk_scoring
          ORDER BY composite_risk_score DESC
        useLegacySql: false
    metadata:
      dependsOn: [climate-indicators-table]

  # BigQuery view for dashboard summary
  - name: risk-dashboard-summary-view
    type: gcp-types/bigquery-v2:tables
    properties:
      datasetId: $(ref.climate-risk-dataset.datasetId)
      projectId: ${project_id}
      tableId: risk_dashboard_summary
      description: "Summary view for climate risk dashboards"
      friendlyName: "Risk Dashboard Summary"
      labels:
        purpose: dashboard-summary
        environment: ${resource_suffix}
      view:
        query: |
          WITH temporal_trends AS (
            SELECT 
              DATE_TRUNC(DATE(analysis_date), MONTH) as analysis_month,
              AVG(avg_day_temp_c) as monthly_avg_temp,
              SUM(total_precipitation_mm) as monthly_total_precip,
              AVG(avg_ndvi) as monthly_avg_vegetation,
              COUNT(*) as monthly_observations
            FROM `${project_id}.climate_risk_${resource_suffix}.climate_indicators`
            WHERE analysis_date >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 3 YEAR)
            GROUP BY analysis_month
          ),
          spatial_risk_summary AS (
            SELECT 
              risk_category,
              COUNT(*) as location_count,
              AVG(composite_risk_score) as avg_risk_score,
              MIN(composite_risk_score) as min_risk_score,
              MAX(composite_risk_score) as max_risk_score,
              -- Create geographic bounds for each risk category
              ST_ENVELOPE(ST_UNION_AGG(location)) as risk_region_bounds
            FROM `${project_id}.climate_risk_${resource_suffix}.climate_risk_analysis`
            GROUP BY risk_category
          )
          SELECT 
            'TEMPORAL_TRENDS' as summary_type,
            analysis_month as period,
            monthly_avg_temp as temperature_c,
            monthly_total_precip as precipitation_mm,
            monthly_avg_vegetation as vegetation_index,
            monthly_observations as data_points,
            CAST(NULL AS STRING) as risk_category,
            CAST(NULL AS INT64) as location_count,
            CAST(NULL AS STRING) as risk_bounds
          FROM temporal_trends
          UNION ALL
          SELECT 
            'SPATIAL_RISK' as summary_type,
            CAST(NULL AS DATE) as period,
            CAST(NULL AS FLOAT64) as temperature_c,
            CAST(NULL AS FLOAT64) as precipitation_mm,
            CAST(NULL AS FLOAT64) as vegetation_index,
            CAST(NULL AS INT64) as data_points,
            risk_category,
            location_count,
            ST_ASGEOJSON(risk_region_bounds) as risk_bounds
          FROM spatial_risk_summary
          ORDER BY summary_type, period DESC, avg_risk_score DESC
        useLegacySql: false
    metadata:
      dependsOn: [climate-risk-analysis-view]

  # Cloud Function for climate data processing
  - name: climate-processor-function
    type: gcp-types/cloudfunctions-v1:projects.locations.functions
    properties:
      location: projects/${project_id}/locations/${region}
      function: climate-processor-${resource_suffix}
      sourceArchiveUrl: gs://$(ref.climate-functions-source-bucket.name)/climate-processor-source.zip
      entryPoint: process_climate_data
      runtime: python311
      timeout: ${function_timeout}
      availableMemoryMb: 2048
      serviceAccountEmail: $(ref.climate-functions-sa.email)
      httpsTrigger: {}
      environmentVariables:
        PROJECT_ID: ${project_id}
        DATASET_ID: climate_risk_${resource_suffix}
        REGION: ${region}
        STORAGE_BUCKET: $(ref.climate-data-bucket.name)
      labels:
        purpose: climate-data-processing
        environment: ${resource_suffix}
    metadata:
      dependsOn: [climate-functions-sa, climate-risk-dataset, climate-data-bucket, climate-functions-source-bucket]

  # Cloud Function for climate monitoring
  - name: climate-monitor-function
    type: gcp-types/cloudfunctions-v1:projects.locations.functions
    properties:
      location: projects/${project_id}/locations/${region}
      function: climate-monitor-${resource_suffix}
      sourceArchiveUrl: gs://$(ref.climate-functions-source-bucket.name)/climate-monitor-source.zip
      entryPoint: monitor_climate_risks
      runtime: python311
      timeout: 300s
      availableMemoryMb: 1024
      serviceAccountEmail: $(ref.climate-functions-sa.email)
      httpsTrigger: {}
      environmentVariables:
        PROJECT_ID: ${project_id}
        DATASET_ID: climate_risk_${resource_suffix}
        REGION: ${region}
      labels:
        purpose: climate-monitoring
        environment: ${resource_suffix}
    metadata:
      dependsOn: [climate-functions-sa, climate-risk-dataset, climate-functions-source-bucket]

  # Cloud Scheduler job for automated monitoring
  - name: climate-monitoring-scheduler
    type: gcp-types/cloudscheduler-v1:projects.locations.jobs
    properties:
      parent: projects/${project_id}/locations/${region}
      name: climate-monitoring-${resource_suffix}
      description: "Automated climate risk monitoring job"
      schedule: "0 6 * * *"  # Run daily at 6 AM
      timeZone: "America/New_York"
      httpTarget:
        uri: $(ref.climate-monitor-function.httpsTrigger.url)
        httpMethod: POST
        headers:
          Content-Type: application/json
        body: |
          {
            "dataset_id": "climate_risk_${resource_suffix}",
            "automated": true
          }
      retryConfig:
        retryCount: 3
        maxRetryDuration: 300s
      labels:
        purpose: climate-monitoring
        environment: ${resource_suffix}
    metadata:
      dependsOn: [climate-monitor-function]

  # Cloud Monitoring alert policy for high climate risk
  - name: high-climate-risk-alert
    type: gcp-types/monitoring-v1:projects.alertPolicies
    properties:
      project: projects/${project_id}
      displayName: "High Climate Risk Alert - ${resource_suffix}"
      documentation:
        content: "Alert triggered when climate risk assessment identifies high-risk conditions"
        mimeType: "text/markdown"
      conditions:
        - displayName: "High Risk Percentage Threshold"
          conditionThreshold:
            filter: 'metric.type="custom.googleapis.com/climate_risk/high_risk_percentage"'
            comparison: COMPARISON_GREATER_THAN
            thresholdValue: 25.0
            duration: 300s
            aggregations:
              - alignmentPeriod: 300s
                perSeriesAligner: ALIGN_MEAN
                crossSeriesReducer: REDUCE_MEAN
      combiner: OR
      enabled: true
      notificationChannels: []
      alertStrategy:
        autoClose: 86400s  # 24 hours
      labels:
        purpose: climate-risk-monitoring
        environment: ${resource_suffix}
    metadata:
      dependsOn: [monitoring-api]

# Outputs for integration and verification
outputs:
  - name: project_id
    value: ${project_id}
    description: "Google Cloud project ID"

  - name: region
    value: ${region}
    description: "Primary deployment region"

  - name: dataset_id
    value: $(ref.climate-risk-dataset.datasetId)
    description: "BigQuery dataset ID for climate data"

  - name: climate_data_bucket
    value: $(ref.climate-data-bucket.name)
    description: "Cloud Storage bucket for climate data"

  - name: climate_processor_function_url
    value: $(ref.climate-processor-function.httpsTrigger.url)
    description: "HTTP trigger URL for climate data processing function"

  - name: climate_monitor_function_url
    value: $(ref.climate-monitor-function.httpsTrigger.url)
    description: "HTTP trigger URL for climate monitoring function"

  - name: service_account_email
    value: $(ref.climate-functions-sa.email)
    description: "Service account email for climate functions"

  - name: climate_indicators_table
    value: ${project_id}.$(ref.climate-risk-dataset.datasetId).climate_indicators
    description: "Full table ID for climate indicators"

  - name: risk_analysis_view
    value: ${project_id}.$(ref.climate-risk-dataset.datasetId).climate_risk_analysis
    description: "Full view ID for climate risk analysis"

  - name: scheduler_job_name
    value: $(ref.climate-monitoring-scheduler.name)
    description: "Cloud Scheduler job name for automated monitoring"

  - name: alert_policy_name
    value: $(ref.high-climate-risk-alert.name)
    description: "Cloud Monitoring alert policy for high climate risk"

# Metadata for Infrastructure Manager
metadata:
  version: "1.0"
  description: "Climate Risk Assessment Infrastructure with Earth Engine and BigQuery"
  labels:
    purpose: climate-risk-assessment
    provider: gcp
    iac-tool: infrastructure-manager
  annotations:
    recipe-id: c4f8e2a9
    recipe-version: "1.0"
    generated-by: infrastructure-manager-generator
    last-updated: "2025-01-12"