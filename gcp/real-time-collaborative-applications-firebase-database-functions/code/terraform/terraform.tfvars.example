# Example Terraform variables file for Real-Time Collaborative Applications
# Copy this file to terraform.tfvars and customize for your environment

# =======================================
# REQUIRED VARIABLES
# =======================================

# Your Google Cloud Project ID
project_id = "my-collaborative-app-project"

# =======================================
# BASIC CONFIGURATION
# =======================================

# Google Cloud region for resources
region = "us-central1"

# Prefix for all resource names (must start with letter, lowercase only)
resource_prefix = "collab-app"

# Environment identifier
environment = "dev"

# Display name for the Firebase project
firebase_project_display_name = "My Collaborative Document Editor"

# =======================================
# FIREBASE CONFIGURATION
# =======================================

# Region for Firebase Realtime Database
# Supported regions: us-central1, europe-west1, asia-southeast1
database_region = "us-central1"

# Instance ID for Firebase Realtime Database
database_instance_id = "default"

# Authentication providers to enable
# Options: "email", "google.com", "facebook.com", "twitter.com", "github.com"
auth_providers = ["email", "google.com"]

# Firebase Hosting site ID (defaults to project_id if not specified)
# hosting_site_id = "my-custom-site-id"

# =======================================
# CLOUD FUNCTIONS CONFIGURATION
# =======================================

# Node.js runtime version for Cloud Functions
# Options: "nodejs16", "nodejs18", "nodejs20"
nodejs_runtime = "nodejs18"

# Memory allocation for Cloud Functions in MB
# Range: 128-8192
function_memory = 256

# Timeout for Cloud Functions in seconds
# Range: 1-540
function_timeout = 60

# Optional: Custom GCS bucket name for function source code
# If not specified, a unique name will be generated
# functions_source_bucket = "my-functions-source-bucket"

# =======================================
# SECURITY CONFIGURATION
# =======================================

# CORS allowed origins for API access
# Use ["*"] for development, specific domains for production
cors_allowed_origins = ["*"]

# Enable comprehensive audit logging
enable_audit_logs = true

# =======================================
# STORAGE CONFIGURATION
# =======================================

# Storage class for GCS buckets
# Options: "STANDARD", "NEARLINE", "COLDLINE", "ARCHIVE"
storage_class = "STANDARD"

# =======================================
# RESOURCE LABELS
# =======================================

# Labels to apply to all resources for organization and billing
labels = {
  application = "collaborative-editor"
  team        = "development"
  managed-by  = "terraform"
  cost-center = "engineering"
  environment = "development"
}

# =======================================
# PRODUCTION CONFIGURATION EXAMPLES
# =======================================

# Uncomment and customize for production deployment:

# Production environment settings
# environment = "prod"
# resource_prefix = "collab-prod"
# firebase_project_display_name = "Collaborative Editor - Production"

# Production security settings
# cors_allowed_origins = ["https://yourdomain.com", "https://www.yourdomain.com"]
# enable_audit_logs = true

# Production performance settings
# function_memory = 512
# function_timeout = 120
# nodejs_runtime = "nodejs20"

# Production labels
# labels = {
#   application = "collaborative-editor"
#   environment = "production"
#   team        = "platform"
#   managed-by  = "terraform"
#   cost-center = "product"
#   compliance  = "required"
# }

# =======================================
# DEVELOPMENT CONFIGURATION EXAMPLES
# =======================================

# Development environment with minimal resources
# environment = "dev"
# function_memory = 128
# function_timeout = 30
# storage_class = "STANDARD"

# Development with external OAuth (requires setup in Google Console)
# auth_providers = ["email", "google.com"]

# =======================================
# MULTI-REGION CONFIGURATION EXAMPLES
# =======================================

# Europe region configuration
# region = "europe-west1"
# database_region = "europe-west1"

# Asia region configuration
# region = "asia-southeast1"
# database_region = "asia-southeast1"

# =======================================
# ADVANCED CONFIGURATION NOTES
# =======================================

# Note: For Google OAuth authentication in production:
# 1. Configure OAuth consent screen in Google Cloud Console
# 2. Create OAuth 2.0 client IDs for web application
# 3. Add authorized domains to Firebase Authentication settings
# 4. Update OAuth client configuration in main.tf

# Note: For custom domains with Firebase Hosting:
# 1. Add custom domain in Firebase Console
# 2. Configure DNS records as instructed
# 3. Update CORS origins to include custom domain

# Note: For enhanced monitoring and alerting:
# 1. Set up notification channels in Google Cloud Console
# 2. Configure additional alerting policies as needed
# 3. Integrate with external monitoring services if required