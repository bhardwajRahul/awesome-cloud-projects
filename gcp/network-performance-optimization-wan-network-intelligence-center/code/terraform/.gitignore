# ==============================================================================
# TERRAFORM .GITIGNORE
# ==============================================================================
# This file specifies patterns for files that should not be committed to
# version control when working with Terraform for network optimization.
# ==============================================================================

# ------------------------------------------------------------------------------
# TERRAFORM STATE FILES
# ------------------------------------------------------------------------------
# State files contain sensitive information and should never be committed
*.tfstate
*.tfstate.*
*.tfstate.backup

# State lock files
.terraform.lock.hcl
.terraform.tfstate.lock.info

# ------------------------------------------------------------------------------
# TERRAFORM WORKING DIRECTORIES
# ------------------------------------------------------------------------------
# Terraform working directory and cached providers
.terraform/
.terraform.d/

# ------------------------------------------------------------------------------
# TERRAFORM VARIABLE FILES
# ------------------------------------------------------------------------------
# Variable files often contain sensitive configuration
terraform.tfvars
terraform.tfvars.json
*.auto.tfvars
*.auto.tfvars.json

# Terraform plan files (may contain sensitive data)
*.tfplan
*.tfplan.*

# ------------------------------------------------------------------------------
# CLOUD PROVIDER CREDENTIALS
# ------------------------------------------------------------------------------
# Google Cloud service account keys
*.json
*-service-account.json
*-sa-key.json
service-account-key.json
gcp-key.json

# AWS credentials
.aws/
aws-credentials.json

# Azure credentials
.azure/
azure-credentials.json

# ------------------------------------------------------------------------------
# TEMPORARY AND BUILD FILES
# ------------------------------------------------------------------------------
# Temporary files
*.tmp
*.temp
*~
.DS_Store
Thumbs.db

# Log files
*.log
*.logs
terraform.log

# Editor and IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# ------------------------------------------------------------------------------
# FUNCTION SOURCE CODE PACKAGES
# ------------------------------------------------------------------------------
# Generated function deployment packages
*.zip
function-source.zip
network_optimization_function.zip
deployment-package.zip

# Python compiled files
__pycache__/
*.py[cod]
*$py.class
*.pyc
*.pyo

# Virtual environments
venv/
env/
.env/
.venv/

# ------------------------------------------------------------------------------
# CONFIGURATION AND SECRETS
# ------------------------------------------------------------------------------
# Environment configuration files
.env
.env.local
.env.development
.env.test
.env.production

# Secret files
secrets.yaml
secrets.json
.secrets/

# Configuration files with sensitive data
config.json
config.yaml
local.tfvars

# ------------------------------------------------------------------------------
# OUTPUT AND GENERATED FILES
# ------------------------------------------------------------------------------
# Terraform output files
terraform-output.json
outputs.json

# Generated documentation
docs/generated/
*.md.backup

# Crash logs
crash.log
crash.*.log

# ------------------------------------------------------------------------------
# BACKUP FILES
# ------------------------------------------------------------------------------
# Backup files
*.bak
*.backup
*.orig

# Git merge files
*.BACKUP.*
*.BASE.*
*.LOCAL.*
*.REMOTE.*
*_BACKUP_*
*_BASE_*
*_LOCAL_*
*_REMOTE_*

# ------------------------------------------------------------------------------
# OPERATING SYSTEM FILES
# ------------------------------------------------------------------------------
# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~
.nfs*

# ------------------------------------------------------------------------------
# CLOUD SHELL AND DEVELOPMENT TOOLS
# ------------------------------------------------------------------------------
# Cloud Shell files
.cloudshell/
.theia/

# Jupyter notebooks
.ipynb_checkpoints/
*.ipynb

# ------------------------------------------------------------------------------
# TESTING AND COVERAGE FILES
# ------------------------------------------------------------------------------
# Testing files
.coverage
.pytest_cache/
.tox/
.nox/
htmlcov/
coverage.xml
*.cover
.hypothesis/

# ------------------------------------------------------------------------------
# KUBERNETES AND CONTAINER FILES
# ------------------------------------------------------------------------------
# Kubernetes config
kubeconfig
*.kubeconfig

# Docker files
.dockerignore
Dockerfile.backup

# ------------------------------------------------------------------------------
# MONITORING AND OBSERVABILITY
# ------------------------------------------------------------------------------
# Monitoring configuration backups
monitoring-config.backup
alerting-policies.backup

# Performance testing results
performance-results/
load-test-results/

# ------------------------------------------------------------------------------
# CUSTOM APPLICATION FILES
# ------------------------------------------------------------------------------
# Custom network optimization data
network-data/
optimization-logs/
performance-metrics/

# Exported configurations
exported-configs/
backup-configs/

# ------------------------------------------------------------------------------
# DEPENDENCY AND PACKAGE MANAGEMENT
# ------------------------------------------------------------------------------
# Python dependencies
pip-log.txt
pip-delete-this-directory.txt
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Node.js dependencies (if using any Node.js tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# ------------------------------------------------------------------------------
# TERRAFORM SPECIFIC PATTERNS
# ------------------------------------------------------------------------------
# Override files
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you wish to add to version control
# !example_override.tf

# Ignore CLI configuration files
.terraformrc
terraform.rc

# ------------------------------------------------------------------------------
# NETWORK OPTIMIZATION SPECIFIC FILES
# ------------------------------------------------------------------------------
# Network performance data
network-metrics.json
connectivity-test-results.json
optimization-history.json

# Generated network configurations
generated-configs/
network-policies.backup

# Performance analysis reports
reports/
analytics/

# ==============================================================================
# PATTERNS TO INCLUDE (NEGATED PATTERNS)
# ==============================================================================
# Include example and template files
!terraform.tfvars.example
!*.example
!*.template
!README.md
!docs/

# Include necessary configuration templates
!function_code/
!scripts/

# ==============================================================================
# NOTES
# ==============================================================================
"""
Security Best Practices:

1. Never commit state files - they contain sensitive resource information
2. Always use .gitignore patterns for credential files
3. Use environment variables or secure secret management for sensitive values
4. Regularly audit your repository for accidentally committed secrets
5. Consider using git-secrets or similar tools to prevent secret commits

Terraform Best Practices:

1. Use remote state backends (GCS, S3, etc.) instead of local state
2. Implement state locking to prevent concurrent modifications
3. Use consistent naming conventions for all files
4. Keep variable files separate from code for different environments
5. Regularly update .gitignore as your infrastructure evolves

Maintenance:

1. Review and update this .gitignore file periodically
2. Add new patterns as you introduce new tools or services
3. Test .gitignore patterns before committing to ensure they work correctly
4. Document any custom patterns specific to your organization
"""