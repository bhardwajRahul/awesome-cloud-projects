# ==============================================================================
# CLOUD FUNCTION REQUIREMENTS
# ==============================================================================
# This file specifies the Python dependencies required for the network
# optimization Cloud Function, including Google Cloud client libraries
# and supporting packages for network analysis and automation.
# ==============================================================================

# Google Cloud Core Libraries
# ==============================================================================

# Cloud Functions Framework for Python
functions-framework==3.5.0

# Google Cloud Monitoring for metrics analysis and alerting
google-cloud-monitoring==2.21.0

# Google Cloud Network Management for Network Intelligence Center
google-cloud-network-management==1.5.1

# Google Cloud Pub/Sub for event-driven messaging
google-cloud-pubsub==2.21.1

# Google Cloud Compute for instance and network management
google-cloud-compute==1.18.0

# Google Cloud Logging for centralized log management
google-cloud-logging==3.10.0

# Google Cloud Storage for data storage and retrieval
google-cloud-storage==2.10.0

# Google Cloud Core for common functionality
google-cloud-core==2.4.1

# Data Processing and Analysis Libraries
# ==============================================================================

# JSON processing and data manipulation
# (Built-in Python modules - no external dependencies needed)

# Date and time handling
# (Built-in Python modules - no external dependencies needed)

# Mathematical operations for performance calculations
numpy==1.24.3

# Data structures for metrics processing
pandas==2.0.3

# HTTP and API Communication Libraries
# ==============================================================================

# HTTP requests for external API calls
requests==2.31.0

# URL parsing and handling
urllib3==2.0.4

# Utility and Helper Libraries
# ==============================================================================

# Type hints and annotations support
typing-extensions==4.7.1

# Data classes for structured data handling
# (Built-in Python 3.7+ - no external dependencies needed)

# Regular expressions for data parsing
# (Built-in Python modules - no external dependencies needed)

# Base64 encoding/decoding for message processing
# (Built-in Python modules - no external dependencies needed)

# Performance and Monitoring Libraries
# ==============================================================================

# Memory profiling for function optimization
memory-profiler==0.61.0

# Time measurement utilities
# (Built-in Python modules - no external dependencies needed)

# Security and Authentication Libraries
# ==============================================================================

# Google Authentication Library
google-auth==2.23.0

# Google Auth HTTP Transport
google-auth-httplib2==0.2.0

# OAuth2 client library
google-auth-oauthlib==1.0.0

# Development and Testing Libraries (Optional - Comment out for production)
# ==============================================================================

# Unit testing framework
# pytest==7.4.0

# Mock objects for testing
# pytest-mock==3.11.1

# Coverage reporting
# coverage==7.3.0

# Code formatting and linting
# black==23.7.0
# flake8==6.0.0

# Documentation Libraries
# ==============================================================================

# Documentation generation (optional)
# sphinx==7.1.2

# Network and Protocol Libraries
# ==============================================================================

# DNS resolution utilities
# (Built-in Python modules - no external dependencies needed)

# Socket programming for network operations
# (Built-in Python modules - no external dependencies needed)

# JSON Web Token handling (if needed for authentication)
PyJWT==2.8.0

# Configuration and Environment Libraries
# ==============================================================================

# Environment variable handling
# (Built-in Python modules - no external dependencies needed)

# Configuration file parsing
configparser==6.0.0

# Error Handling and Logging Enhancement
# ==============================================================================

# Structured logging
structlog==23.1.0

# Advanced exception handling
# (Built-in Python modules enhanced with custom handlers)

# Performance Optimization Libraries
# ==============================================================================

# Asynchronous I/O support (for concurrent operations)
asyncio-mqtt==0.16.1

# Connection pooling for improved performance
# (Included with google-cloud libraries)

# Caching mechanisms for frequently accessed data
cachetools==5.3.1

# Serialization Libraries
# ==============================================================================

# Protocol Buffers for efficient data serialization
protobuf==4.24.0

# MessagePack for compact data serialization
msgpack==1.0.5

# Monitoring and Observability Libraries
# ==============================================================================

# OpenTelemetry for distributed tracing (optional)
# opentelemetry-api==1.19.0
# opentelemetry-sdk==1.19.0
# opentelemetry-exporter-gcp-trace==1.6.0

# Prometheus client for custom metrics (optional)
# prometheus-client==0.17.1

# Data Validation Libraries
# ==============================================================================

# Schema validation for incoming data
jsonschema==4.19.0

# Data validation and settings management
pydantic==2.2.1

# Cryptography and Security Libraries
# ==============================================================================

# Cryptographic operations
cryptography==41.0.4

# Secure hash algorithms
# (Built-in Python modules - hashlib)

# Network Protocol Libraries
# ==============================================================================

# ICMP ping functionality for connectivity testing
# (Would require additional system permissions - using subprocess instead)

# TCP/UDP socket operations
# (Built-in Python modules - socket)

# HTTP/HTTPS client operations
# (Covered by requests library)

# Machine Learning Libraries (Optional for Advanced Analytics)
# ==============================================================================

# Scikit-learn for performance trend analysis
# scikit-learn==1.3.0

# TensorFlow for predictive optimization (advanced use cases)
# tensorflow==2.13.0

# Version Compatibility Notes
# ==============================================================================
"""
Python Version Compatibility:
- Minimum Python version: 3.8
- Recommended Python version: 3.11 (for Cloud Functions Gen2)
- Maximum Python version: 3.11 (Cloud Functions limitation)

Library Version Selection Criteria:
- Stability: Using stable, well-tested versions
- Security: Latest versions with security patches
- Compatibility: Versions compatible with Google Cloud Functions Gen2
- Performance: Optimized versions for serverless environments

Update Schedule:
- Security updates: Apply immediately
- Minor version updates: Monthly review
- Major version updates: Quarterly review with testing

Dependencies Size Optimization:
- Total package size should be under 100MB for optimal cold start performance
- Consider using --no-deps flag for packages with heavy dependencies
- Use .gcloudignore to exclude unnecessary files

Memory Usage Considerations:
- google-cloud libraries: ~50-100MB memory footprint
- pandas/numpy: ~30-50MB memory footprint
- Other libraries: ~10-20MB combined
- Total estimated memory usage: ~100-200MB

Cold Start Optimization:
- Import only necessary modules
- Use lazy loading for heavy libraries
- Consider global variable initialization for reused objects
- Minimize file I/O during initialization
"""