# Infrastructure Manager Configuration for Multi-Environment Development Isolation
# This configuration creates secure, isolated development environments using:
# - VPC Service Controls for security perimeters
# - Cloud Workstations for managed development environments
# - Cloud Filestore for shared storage
# - Identity-Aware Proxy for secure access

apiVersion: blueprints.cloud.google.com/v1alpha1
kind: Blueprint
metadata:
  name: multi-env-dev-isolation
  annotations:
    config.kubernetes.io/local-config: "true"

# Blueprint specification defining the complete infrastructure
spec:
  # Organization and project configuration
  organization_id: ${organization_id}
  billing_account: ${billing_account}
  
  # Region and zone configuration for resource deployment
  region: ${region}
  zone: ${zone}
  
  # Unique suffix for resource naming to avoid conflicts
  random_suffix: ${random_suffix}

---
# Access Context Manager Policy for VPC Service Controls
apiVersion: accesscontextmanager.cnrm.cloud.google.com/v1beta1
kind: AccessContextManagerAccessPolicy
metadata:
  name: multi-env-security-policy
  annotations:
    cnrm.cloud.google.com/organization-id: ${organization_id}
spec:
  parent: organizations/${organization_id}
  title: "Multi-Environment Security Policy"

---
# Access Level for Internal Users
apiVersion: accesscontextmanager.cnrm.cloud.google.com/v1beta1
kind: AccessContextManagerAccessLevel
metadata:
  name: internal-users-access-level
spec:
  parent: accessPolicies/multi-env-security-policy
  title: "Internal Users Access Level"
  basic:
    conditions:
    - members:
      - user:dev-team@yourdomain.com
      - user:admin@yourdomain.com

---
# Development Environment Project
apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
kind: Project
metadata:
  name: dev-environment-project
  annotations:
    cnrm.cloud.google.com/auto-create-network: "false"
spec:
  name: "Development Environment"
  projectId: secure-dev-environments-dev-${random_suffix}
  organizationRef:
    external: organizations/${organization_id}
  billingAccountRef:
    external: ${billing_account}

---
# Testing Environment Project
apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
kind: Project
metadata:
  name: test-environment-project
  annotations:
    cnrm.cloud.google.com/auto-create-network: "false"
spec:
  name: "Testing Environment"
  projectId: secure-dev-environments-test-${random_suffix}
  organizationRef:
    external: organizations/${organization_id}
  billingAccountRef:
    external: ${billing_account}

---
# Production Environment Project
apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
kind: Project
metadata:
  name: prod-environment-project
  annotations:
    cnrm.cloud.google.com/auto-create-network: "false"
spec:
  name: "Production Environment"
  projectId: secure-dev-environments-prod-${random_suffix}
  organizationRef:
    external: organizations/${organization_id}
  billingAccountRef:
    external: ${billing_account}

---
# Enable APIs for Development Project
apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
kind: Service
metadata:
  name: dev-apis
  namespace: dev-environment-project
spec:
  projectRef:
    name: dev-environment-project
  services:
  - compute.googleapis.com
  - workstations.googleapis.com
  - file.googleapis.com
  - iap.googleapis.com
  - accesscontextmanager.googleapis.com
  - sourcerepo.googleapis.com

---
# Enable APIs for Testing Project
apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
kind: Service
metadata:
  name: test-apis
  namespace: test-environment-project
spec:
  projectRef:
    name: test-environment-project
  services:
  - compute.googleapis.com
  - workstations.googleapis.com
  - file.googleapis.com
  - iap.googleapis.com
  - accesscontextmanager.googleapis.com
  - sourcerepo.googleapis.com

---
# Enable APIs for Production Project
apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
kind: Service
metadata:
  name: prod-apis
  namespace: prod-environment-project
spec:
  projectRef:
    name: prod-environment-project
  services:
  - compute.googleapis.com
  - workstations.googleapis.com
  - file.googleapis.com
  - iap.googleapis.com
  - accesscontextmanager.googleapis.com
  - sourcerepo.googleapis.com

---
# Development VPC Network
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata:
  name: dev-vpc
  namespace: dev-environment-project
spec:
  name: dev-vpc
  autoCreateSubnetworks: false
  routingMode: REGIONAL
  description: "VPC network for development environment"

---
# Development Subnet
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: dev-subnet
  namespace: dev-environment-project
spec:
  name: dev-subnet
  region: ${region}
  ipCidrRange: "10.1.0.0/24"
  networkRef:
    name: dev-vpc
  privateIpGoogleAccess: true
  description: "Subnet for development environment workstations"

---
# Testing VPC Network
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata:
  name: test-vpc
  namespace: test-environment-project
spec:
  name: test-vpc
  autoCreateSubnetworks: false
  routingMode: REGIONAL
  description: "VPC network for testing environment"

---
# Testing Subnet
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: test-subnet
  namespace: test-environment-project
spec:
  name: test-subnet
  region: ${region}
  ipCidrRange: "10.2.0.0/24"
  networkRef:
    name: test-vpc
  privateIpGoogleAccess: true
  description: "Subnet for testing environment workstations"

---
# Production VPC Network
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeNetwork
metadata:
  name: prod-vpc
  namespace: prod-environment-project
spec:
  name: prod-vpc
  autoCreateSubnetworks: false
  routingMode: REGIONAL
  description: "VPC network for production environment"

---
# Production Subnet
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeSubnetwork
metadata:
  name: prod-subnet
  namespace: prod-environment-project
spec:
  name: prod-subnet
  region: ${region}
  ipCidrRange: "10.3.0.0/24"
  networkRef:
    name: prod-vpc
  privateIpGoogleAccess: true
  description: "Subnet for production environment workstations"

---
# VPC Service Controls - Development Perimeter
apiVersion: accesscontextmanager.cnrm.cloud.google.com/v1beta1
kind: AccessContextManagerServicePerimeter
metadata:
  name: dev-perimeter
spec:
  parent: accessPolicies/multi-env-security-policy
  title: "Development Environment Perimeter"
  perimeterType: PERIMETER_TYPE_REGULAR
  status:
    resources:
    - projects/secure-dev-environments-dev-${random_suffix}
    restrictedServices:
    - storage.googleapis.com
    - compute.googleapis.com
    - workstations.googleapis.com
    - file.googleapis.com
    accessLevels:
    - accessPolicies/multi-env-security-policy/accessLevels/internal-users-access-level

---
# VPC Service Controls - Testing Perimeter
apiVersion: accesscontextmanager.cnrm.cloud.google.com/v1beta1
kind: AccessContextManagerServicePerimeter
metadata:
  name: test-perimeter
spec:
  parent: accessPolicies/multi-env-security-policy
  title: "Testing Environment Perimeter"
  perimeterType: PERIMETER_TYPE_REGULAR
  status:
    resources:
    - projects/secure-dev-environments-test-${random_suffix}
    restrictedServices:
    - storage.googleapis.com
    - compute.googleapis.com
    - workstations.googleapis.com
    - file.googleapis.com
    accessLevels:
    - accessPolicies/multi-env-security-policy/accessLevels/internal-users-access-level

---
# VPC Service Controls - Production Perimeter
apiVersion: accesscontextmanager.cnrm.cloud.google.com/v1beta1
kind: AccessContextManagerServicePerimeter
metadata:
  name: prod-perimeter
spec:
  parent: accessPolicies/multi-env-security-policy
  title: "Production Environment Perimeter"
  perimeterType: PERIMETER_TYPE_REGULAR
  status:
    resources:
    - projects/secure-dev-environments-prod-${random_suffix}
    restrictedServices:
    - storage.googleapis.com
    - compute.googleapis.com
    - workstations.googleapis.com
    - file.googleapis.com
    accessLevels:
    - accessPolicies/multi-env-security-policy/accessLevels/internal-users-access-level

---
# Development Environment Cloud Filestore
apiVersion: filestore.cnrm.cloud.google.com/v1beta1
kind: FilestoreInstance
metadata:
  name: dev-filestore
  namespace: dev-environment-project
spec:
  location: ${zone}
  tier: BASIC_SSD
  fileShares:
  - name: dev_share
    capacityGb: 1024
  networks:
  - network: projects/secure-dev-environments-dev-${random_suffix}/global/networks/dev-vpc
    modes:
    - MODE_IPV4
    reservedIpRange: "10.1.1.0/29"
  description: "Shared storage for development environment"
  labels:
    environment: development
    purpose: shared-storage

---
# Testing Environment Cloud Filestore
apiVersion: filestore.cnrm.cloud.google.com/v1beta1
kind: FilestoreInstance
metadata:
  name: test-filestore
  namespace: test-environment-project
spec:
  location: ${zone}
  tier: BASIC_SSD
  fileShares:
  - name: test_share
    capacityGb: 1024
  networks:
  - network: projects/secure-dev-environments-test-${random_suffix}/global/networks/test-vpc
    modes:
    - MODE_IPV4
    reservedIpRange: "10.2.1.0/29"
  description: "Shared storage for testing environment"
  labels:
    environment: testing
    purpose: shared-storage

---
# Production Environment Cloud Filestore
apiVersion: filestore.cnrm.cloud.google.com/v1beta1
kind: FilestoreInstance
metadata:
  name: prod-filestore
  namespace: prod-environment-project
spec:
  location: ${zone}
  tier: BASIC_SSD
  fileShares:
  - name: prod_share
    capacityGb: 1024
  networks:
  - network: projects/secure-dev-environments-prod-${random_suffix}/global/networks/prod-vpc
    modes:
    - MODE_IPV4
    reservedIpRange: "10.3.1.0/29"
  description: "Shared storage for production environment"
  labels:
    environment: production
    purpose: shared-storage

---
# Development Source Repository
apiVersion: sourcerepo.cnrm.cloud.google.com/v1beta1
kind: SourceRepoRepository
metadata:
  name: dev-repo
  namespace: dev-environment-project
spec:
  name: dev-repo
  description: "Source repository for development environment"

---
# Testing Source Repository
apiVersion: sourcerepo.cnrm.cloud.google.com/v1beta1
kind: SourceRepoRepository
metadata:
  name: test-repo
  namespace: test-environment-project
spec:
  name: test-repo
  description: "Source repository for testing environment"

---
# Production Source Repository
apiVersion: sourcerepo.cnrm.cloud.google.com/v1beta1
kind: SourceRepoRepository
metadata:
  name: prod-repo
  namespace: prod-environment-project
spec:
  name: prod-repo
  description: "Source repository for production environment"

---
# Development Workstations Cluster
apiVersion: workstations.cnrm.cloud.google.com/v1beta1
kind: WorkstationsWorkstationCluster
metadata:
  name: dev-cluster
  namespace: dev-environment-project
spec:
  location: ${region}
  displayName: "Development Workstations Cluster"
  network: projects/secure-dev-environments-dev-${random_suffix}/global/networks/dev-vpc
  subnetwork: projects/secure-dev-environments-dev-${random_suffix}/regions/${region}/subnetworks/dev-subnet
  privateClusterConfig:
    enablePrivateEndpoint: true
    clusterHostname: "dev-cluster-${random_suffix}.${region}.workstations.googleusercontent.com"
  labels:
    environment: development
    purpose: workstations

---
# Testing Workstations Cluster
apiVersion: workstations.cnrm.cloud.google.com/v1beta1
kind: WorkstationsWorkstationCluster
metadata:
  name: test-cluster
  namespace: test-environment-project
spec:
  location: ${region}
  displayName: "Testing Workstations Cluster"
  network: projects/secure-dev-environments-test-${random_suffix}/global/networks/test-vpc
  subnetwork: projects/secure-dev-environments-test-${random_suffix}/regions/${region}/subnetworks/test-subnet
  privateClusterConfig:
    enablePrivateEndpoint: true
    clusterHostname: "test-cluster-${random_suffix}.${region}.workstations.googleusercontent.com"
  labels:
    environment: testing
    purpose: workstations

---
# Production Workstations Cluster
apiVersion: workstations.cnrm.cloud.google.com/v1beta1
kind: WorkstationsWorkstationCluster
metadata:
  name: prod-cluster
  namespace: prod-environment-project
spec:
  location: ${region}
  displayName: "Production Workstations Cluster"
  network: projects/secure-dev-environments-prod-${random_suffix}/global/networks/prod-vpc
  subnetwork: projects/secure-dev-environments-prod-${random_suffix}/regions/${region}/subnetworks/prod-subnet
  privateClusterConfig:
    enablePrivateEndpoint: true
    clusterHostname: "prod-cluster-${random_suffix}.${region}.workstations.googleusercontent.com"
  labels:
    environment: production
    purpose: workstations

---
# Development Workstation Configuration
apiVersion: workstations.cnrm.cloud.google.com/v1beta1
kind: WorkstationsWorkstationConfig
metadata:
  name: dev-workstation-config
  namespace: dev-environment-project
spec:
  location: ${region}
  workstationCluster: dev-cluster
  displayName: "Development Workstation Configuration"
  container:
    image: us-central1-docker.pkg.dev/cloud-workstations-images/predefined/code-oss:latest
    env:
      FILESTORE_IP: ${dev_filestore_ip}
      ENVIRONMENT: development
    runAsUser: 1000
  host:
    gceInstance:
      machineType: e2-standard-4
      bootDiskSizeGb: 50
      tags:
      - dev-workstation
      - secure-environment
      serviceAccount: workstation-sa@secure-dev-environments-dev-${random_suffix}.iam.gserviceaccount.com
      enableNestedVirtualization: false
  persistentDirectories:
  - gcePersistentDisk:
      sizeGb: 50
      fsType: ext4
      diskType: pd-standard
    mountPath: /home
  idleTimeout: 3600s
  runningTimeout: 43200s
  labels:
    environment: development
    purpose: code-development

---
# Testing Workstation Configuration
apiVersion: workstations.cnrm.cloud.google.com/v1beta1
kind: WorkstationsWorkstationConfig
metadata:
  name: test-workstation-config
  namespace: test-environment-project
spec:
  location: ${region}
  workstationCluster: test-cluster
  displayName: "Testing Workstation Configuration"
  container:
    image: us-central1-docker.pkg.dev/cloud-workstations-images/predefined/code-oss:latest
    env:
      FILESTORE_IP: ${test_filestore_ip}
      ENVIRONMENT: testing
    runAsUser: 1000
  host:
    gceInstance:
      machineType: e2-standard-4
      bootDiskSizeGb: 50
      tags:
      - test-workstation
      - secure-environment
      serviceAccount: workstation-sa@secure-dev-environments-test-${random_suffix}.iam.gserviceaccount.com
      enableNestedVirtualization: false
  persistentDirectories:
  - gcePersistentDisk:
      sizeGb: 50
      fsType: ext4
      diskType: pd-standard
    mountPath: /home
  idleTimeout: 3600s
  runningTimeout: 43200s
  labels:
    environment: testing
    purpose: testing-validation

---
# Production Workstation Configuration
apiVersion: workstations.cnrm.cloud.google.com/v1beta1
kind: WorkstationsWorkstationConfig
metadata:
  name: prod-workstation-config
  namespace: prod-environment-project
spec:
  location: ${region}
  workstationCluster: prod-cluster
  displayName: "Production Workstation Configuration"
  container:
    image: us-central1-docker.pkg.dev/cloud-workstations-images/predefined/code-oss:latest
    env:
      FILESTORE_IP: ${prod_filestore_ip}
      ENVIRONMENT: production
    runAsUser: 1000
  host:
    gceInstance:
      machineType: e2-standard-4
      bootDiskSizeGb: 50
      tags:
      - prod-workstation
      - secure-environment
      serviceAccount: workstation-sa@secure-dev-environments-prod-${random_suffix}.iam.gserviceaccount.com
      enableNestedVirtualization: false
  persistentDirectories:
  - gcePersistentDisk:
      sizeGb: 50
      fsType: ext4
      diskType: pd-standard
    mountPath: /home
  idleTimeout: 3600s
  runningTimeout: 43200s
  labels:
    environment: production
    purpose: production-support

---
# Development Workstation Service Account
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: dev-workstation-sa
  namespace: dev-environment-project
spec:
  accountId: workstation-sa
  displayName: "Development Workstation Service Account"
  description: "Service account for development workstations"

---
# Testing Workstation Service Account
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: test-workstation-sa
  namespace: test-environment-project
spec:
  accountId: workstation-sa
  displayName: "Testing Workstation Service Account"
  description: "Service account for testing workstations"

---
# Production Workstation Service Account
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: prod-workstation-sa
  namespace: prod-environment-project
spec:
  accountId: workstation-sa
  displayName: "Production Workstation Service Account"
  description: "Service account for production workstations"

---
# IAM Policy Binding for Development Team Access - Development Project
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: dev-team-access-dev
  namespace: dev-environment-project
spec:
  memberFrom:
    serviceAccountRef:
      name: dev-workstation-sa
  role: roles/workstations.user
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    name: dev-environment-project

---
# IAM Policy Binding for Development Team Access - Testing Project
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: dev-team-access-test
  namespace: test-environment-project
spec:
  memberFrom:
    serviceAccountRef:
      name: test-workstation-sa
  role: roles/workstations.user
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    name: test-environment-project

---
# IAM Policy Binding for Development Team Access - Production Project
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: dev-team-access-prod
  namespace: prod-environment-project
spec:
  memberFrom:
    serviceAccountRef:
      name: prod-workstation-sa
  role: roles/workstations.user
  resourceRef:
    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
    kind: Project
    name: prod-environment-project

---
# Firewall Rule for Development Environment - Allow SSH and HTTP
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeFirewall
metadata:
  name: dev-allow-workstation-access
  namespace: dev-environment-project
spec:
  name: dev-allow-workstation-access
  networkRef:
    name: dev-vpc
  priority: 1000
  direction: INGRESS
  allowed:
  - protocol: tcp
    ports:
    - "22"
    - "80"
    - "443"
    - "3000-9000"
  sourceRanges:
  - "10.1.0.0/24"
  targetTags:
  - dev-workstation
  description: "Allow workstation access in development environment"

---
# Firewall Rule for Testing Environment - Allow SSH and HTTP
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeFirewall
metadata:
  name: test-allow-workstation-access
  namespace: test-environment-project
spec:
  name: test-allow-workstation-access
  networkRef:
    name: test-vpc
  priority: 1000
  direction: INGRESS
  allowed:
  - protocol: tcp
    ports:
    - "22"
    - "80"
    - "443"
    - "3000-9000"
  sourceRanges:
  - "10.2.0.0/24"
  targetTags:
  - test-workstation
  description: "Allow workstation access in testing environment"

---
# Firewall Rule for Production Environment - Allow SSH and HTTP (restricted)
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeFirewall
metadata:
  name: prod-allow-workstation-access
  namespace: prod-environment-project
spec:
  name: prod-allow-workstation-access
  networkRef:
    name: prod-vpc
  priority: 1000
  direction: INGRESS
  allowed:
  - protocol: tcp
    ports:
    - "22"
    - "80"
    - "443"
  sourceRanges:
  - "10.3.0.0/24"
  targetTags:
  - prod-workstation
  description: "Allow limited workstation access in production environment"

---
# Cloud Router for Development Environment (for NAT Gateway)
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouter
metadata:
  name: dev-router
  namespace: dev-environment-project
spec:
  name: dev-router
  region: ${region}
  networkRef:
    name: dev-vpc
  description: "Router for development environment NAT gateway"

---
# Cloud NAT for Development Environment
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouterNAT
metadata:
  name: dev-nat
  namespace: dev-environment-project
spec:
  name: dev-nat
  region: ${region}
  routerRef:
    name: dev-router
  natIpAllocateOption: AUTO_ONLY
  sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
  logConfig:
    enable: true
    filter: ALL
  description: "NAT gateway for development environment outbound internet access"

---
# Cloud Router for Testing Environment
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouter
metadata:
  name: test-router
  namespace: test-environment-project
spec:
  name: test-router
  region: ${region}
  networkRef:
    name: test-vpc
  description: "Router for testing environment NAT gateway"

---
# Cloud NAT for Testing Environment
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouterNAT
metadata:
  name: test-nat
  namespace: test-environment-project
spec:
  name: test-nat
  region: ${region}
  routerRef:
    name: test-router
  natIpAllocateOption: AUTO_ONLY
  sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
  logConfig:
    enable: true
    filter: ALL
  description: "NAT gateway for testing environment outbound internet access"

---
# Cloud Router for Production Environment
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouter
metadata:
  name: prod-router
  namespace: prod-environment-project
spec:
  name: prod-router
  region: ${region}
  networkRef:
    name: prod-vpc
  description: "Router for production environment NAT gateway"

---
# Cloud NAT for Production Environment
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeRouterNAT
metadata:
  name: prod-nat
  namespace: prod-environment-project
spec:
  name: prod-nat
  region: ${region}
  routerRef:
    name: prod-router
  natIpAllocateOption: AUTO_ONLY
  sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
  logConfig:
    enable: true
    filter: ALL
  description: "NAT gateway for production environment outbound internet access"

---
# Sample Development Workstation
apiVersion: workstations.cnrm.cloud.google.com/v1beta1
kind: WorkstationsWorkstation
metadata:
  name: dev-workstation-1
  namespace: dev-environment-project
spec:
  location: ${region}
  workstationCluster: dev-cluster
  workstationConfig: dev-workstation-config
  displayName: "Development Workstation 1"
  env:
    PROJECT_ENV: development
    TEAM: dev-team
  labels:
    environment: development
    user: sample-developer

---
# Sample Testing Workstation
apiVersion: workstations.cnrm.cloud.google.com/v1beta1
kind: WorkstationsWorkstation
metadata:
  name: test-workstation-1
  namespace: test-environment-project
spec:
  location: ${region}
  workstationCluster: test-cluster
  workstationConfig: test-workstation-config
  displayName: "Testing Workstation 1"
  env:
    PROJECT_ENV: testing
    TEAM: qa-team
  labels:
    environment: testing
    user: sample-tester

---
# Sample Production Workstation
apiVersion: workstations.cnrm.cloud.google.com/v1beta1
kind: WorkstationsWorkstation
metadata:
  name: prod-workstation-1
  namespace: prod-environment-project
spec:
  location: ${region}
  workstationCluster: prod-cluster
  workstationConfig: prod-workstation-config
  displayName: "Production Workstation 1"
  env:
    PROJECT_ENV: production
    TEAM: ops-team
  labels:
    environment: production
    user: sample-operator