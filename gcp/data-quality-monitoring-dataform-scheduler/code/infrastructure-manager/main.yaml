# Google Cloud Infrastructure Manager Configuration
# Data Quality Monitoring with Dataform and Cloud Scheduler
# Recipe ID: f8a3b2c1

metadata:
  name: data-quality-monitoring-dataform-scheduler
  labels:
    recipe-id: f8a3b2c1
    category: analytics
    difficulty: "200"
    provider: gcp

# Input variables for customization
variables:
  # Project Configuration
  project_id:
    type: string
    description: "Google Cloud Project ID"
    
  region:
    type: string
    description: "Google Cloud region for resources"
    default: "us-central1"
    
  dataform_region:
    type: string
    description: "Region for Dataform repository"
    default: "us-central1"
    
  # Resource Naming
  dataset_name:
    type: string
    description: "BigQuery dataset name for sample data"
    default: "sample_ecommerce"
    
  repository_name:
    type: string
    description: "Dataform repository name"
    default: "data-quality-repo"
    
  workspace_name:
    type: string
    description: "Dataform workspace name"
    default: "quality-workspace"
    
  scheduler_job_name:
    type: string
    description: "Cloud Scheduler job name"
    default: "dataform-quality-job"
    
  # Monitoring Configuration
  notification_email:
    type: string
    description: "Email address for data quality alerts"
    
  # Scheduling Configuration
  schedule_expression:
    type: string
    description: "Cron expression for data quality checks"
    default: "0 */6 * * *"
    
  # Resource Tags
  environment:
    type: string
    description: "Environment label (dev, staging, prod)"
    default: "dev"

# Local values for computed configurations
locals:
  # Generate unique suffix for resources
  random_suffix: ${substr(sha256(var.project_id), 0, 6)}
  
  # Computed resource names
  dataset_id: "${var.dataset_name}_${local.random_suffix}"
  assertions_dataset_id: "dataform_assertions_${local.random_suffix}"
  scheduler_job_id: "${var.scheduler_job_name}_${local.random_suffix}"
  service_account_email: "dataform-scheduler-sa@${var.project_id}.iam.gserviceaccount.com"
  
  # Common labels
  common_labels:
    recipe-id: f8a3b2c1
    category: analytics
    environment: ${var.environment}
    managed-by: infrastructure-manager

# Google Cloud APIs that need to be enabled
resources:
  # Enable required Google Cloud APIs
  - name: dataform-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/${var.project_id}/services/dataform.googleapis.com
    metadata:
      dependsOn: []

  - name: scheduler-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/${var.project_id}/services/cloudscheduler.googleapis.com
    metadata:
      dependsOn: []

  - name: monitoring-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/${var.project_id}/services/monitoring.googleapis.com
    metadata:
      dependsOn: []

  - name: bigquery-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/${var.project_id}/services/bigquery.googleapis.com
    metadata:
      dependsOn: []

  - name: logging-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/${var.project_id}/services/logging.googleapis.com
    metadata:
      dependsOn: []

  # BigQuery dataset for sample data
  - name: sample-dataset
    type: gcp-types/bigquery-v2:datasets
    properties:
      datasetId: ${local.dataset_id}
      location: ${var.region}
      description: "Sample e-commerce dataset for data quality monitoring"
      labels: ${local.common_labels}
      access:
        - role: "OWNER"
          userByEmail: ${var.notification_email}
        - role: "READER"
          specialGroup: "projectReaders"
        - role: "WRITER"
          specialGroup: "projectWriters"
    metadata:
      dependsOn:
        - bigquery-api

  # BigQuery dataset for Dataform assertions
  - name: assertions-dataset
    type: gcp-types/bigquery-v2:datasets
    properties:
      datasetId: ${local.assertions_dataset_id}
      location: ${var.region}
      description: "Dataform assertions and data quality results"
      labels: ${local.common_labels}
      access:
        - role: "OWNER"
          userByEmail: ${var.notification_email}
        - role: "READER"
          specialGroup: "projectReaders"
        - role: "WRITER"
          specialGroup: "projectWriters"
    metadata:
      dependsOn:
        - bigquery-api

  # Sample customers table with intentional data quality issues
  - name: customers-table
    type: gcp-types/bigquery-v2:tables
    properties:
      datasetId: ${local.dataset_id}
      tableId: "customers"
      description: "Sample customers table with data quality issues for testing"
      labels: ${local.common_labels}
      schema:
        fields:
          - name: "customer_id"
            type: "INTEGER"
            mode: "REQUIRED"
          - name: "email"
            type: "STRING"
            mode: "NULLABLE"
          - name: "first_name"
            type: "STRING"
            mode: "NULLABLE"
          - name: "last_name"
            type: "STRING"
            mode: "NULLABLE"
          - name: "registration_date"
            type: "DATE"
            mode: "REQUIRED"
          - name: "city"
            type: "STRING"
            mode: "NULLABLE"
          - name: "state"
            type: "STRING"
            mode: "NULLABLE"
    metadata:
      dependsOn:
        - sample-dataset

  # Sample orders table with intentional data quality issues
  - name: orders-table
    type: gcp-types/bigquery-v2:tables
    properties:
      datasetId: ${local.dataset_id}
      tableId: "orders"
      description: "Sample orders table with data quality issues for testing"
      labels: ${local.common_labels}
      schema:
        fields:
          - name: "order_id"
            type: "INTEGER"
            mode: "REQUIRED"
          - name: "customer_id"
            type: "INTEGER"
            mode: "REQUIRED"
          - name: "order_date"
            type: "DATE"
            mode: "REQUIRED"
          - name: "total_amount"
            type: "FLOAT"
            mode: "NULLABLE"
          - name: "status"
            type: "STRING"
            mode: "REQUIRED"
    metadata:
      dependsOn:
        - sample-dataset

  # Service account for Cloud Scheduler to access Dataform
  - name: dataform-scheduler-service-account
    type: gcp-types/iam-v1:projects.serviceAccounts
    properties:
      accountId: "dataform-scheduler-sa"
      displayName: "Dataform Scheduler Service Account"
      description: "Service account for Cloud Scheduler to trigger Dataform workflows"
    metadata:
      dependsOn: []

  # IAM binding for Dataform Editor role
  - name: dataform-editor-binding
    type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
    properties:
      resource: ${var.project_id}
      role: "roles/dataform.editor"
      member: "serviceAccount:${local.service_account_email}"
    metadata:
      dependsOn:
        - dataform-scheduler-service-account

  # IAM binding for BigQuery Admin role
  - name: bigquery-admin-binding
    type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
    properties:
      resource: ${var.project_id}
      role: "roles/bigquery.admin"
      member: "serviceAccount:${local.service_account_email}"
    metadata:
      dependsOn:
        - dataform-scheduler-service-account

  # Dataform repository for data quality monitoring
  - name: dataform-repository
    type: gcp-types/dataform-v1beta1:projects.locations.repositories
    properties:
      parent: "projects/${var.project_id}/locations/${var.dataform_region}"
      repositoryId: ${var.repository_name}
      displayName: "Data Quality Monitoring Repository"
      description: "Repository containing data quality assertions and monitoring workflows"
      labels: ${local.common_labels}
      npmrcEnvironmentVariablesSecretVersion: ""
      workspaceCompilationOverrides:
        defaultDatabase: ${var.project_id}
        schemaNameSuffix: ""
        tablePrefix: ""
    metadata:
      dependsOn:
        - dataform-api

  # Dataform workspace for development
  - name: dataform-workspace
    type: gcp-types/dataform-v1beta1:projects.locations.repositories.workspaces
    properties:
      parent: "projects/${var.project_id}/locations/${var.dataform_region}/repositories/${var.repository_name}"
      workspaceId: ${var.workspace_name}
    metadata:
      dependsOn:
        - dataform-repository

  # Dataform release configuration
  - name: dataform-release-config
    type: gcp-types/dataform-v1beta1:projects.locations.repositories.releaseConfigs
    properties:
      parent: "projects/${var.project_id}/locations/${var.dataform_region}/repositories/${var.repository_name}"
      releaseConfigId: "quality-monitoring-release"
      gitCommitish: "main"
      codeCompilationConfig:
        defaultDatabase: ${var.project_id}
        defaultSchema: ${local.dataset_id}
        defaultLocation: ${var.region}
        assertionSchema: ${local.assertions_dataset_id}
        databaseSuffix: ""
        schemaNameSuffix: ""
        tablePrefix: ""
        vars:
          environment: ${var.environment}
    metadata:
      dependsOn:
        - dataform-workspace

  # Cloud Scheduler job for automated data quality checks
  - name: dataform-scheduler-job
    type: gcp-types/cloudscheduler-v1:projects.locations.jobs
    properties:
      parent: "projects/${var.project_id}/locations/${var.region}"
      name: "projects/${var.project_id}/locations/${var.region}/jobs/${local.scheduler_job_id}"
      description: "Automated data quality monitoring using Dataform"
      schedule: ${var.schedule_expression}
      timeZone: "UTC"
      httpTarget:
        uri: "https://dataform.googleapis.com/v1beta1/projects/${var.project_id}/locations/${var.dataform_region}/repositories/${var.repository_name}/workflowInvocations"
        httpMethod: "POST"
        headers:
          Content-Type: "application/json"
        body: |
          {
            "compilationResult": "projects/${var.project_id}/locations/${var.dataform_region}/repositories/${var.repository_name}/compilationResults/latest"
          }
        oidcToken:
          serviceAccountEmail: ${local.service_account_email}
          audience: "https://dataform.googleapis.com/"
      retryConfig:
        retryCount: 3
        maxRetryDuration: "300s"
        minBackoffDuration: "5s"
        maxBackoffDuration: "60s"
        maxDoublings: 3
    metadata:
      dependsOn:
        - scheduler-api
        - dataform-release-config
        - dataform-editor-binding

  # Log-based metric for data quality failures
  - name: data-quality-failures-metric
    type: gcp-types/logging-v2:projects.metrics
    properties:
      parent: "projects/${var.project_id}"
      metricId: "data_quality_failures"
      description: "Metric tracking data quality assertion failures"
      filter: |
        resource.type="bigquery_dataset" AND 
        (textPayload:"assertion" OR textPayload:"quality")
      labelExtractors:
        dataset_id: "EXTRACT(resource.labels.dataset_id)"
        table_name: "EXTRACT(textPayload)"
      valueExtractor: ""
      bucketOptions:
        exponentialBuckets:
          numFiniteBuckets: 64
          growthFactor: 2.0
          scale: 1.0
    metadata:
      dependsOn:
        - logging-api

  # Notification channel for email alerts
  - name: email-notification-channel
    type: gcp-types/monitoring-v1:projects.notificationChannels
    properties:
      parent: "projects/${var.project_id}"
      type: "email"
      displayName: "Data Quality Alerts"
      description: "Email notifications for data quality issues"
      labels:
        email_address: ${var.notification_email}
      enabled: true
      userLabels: ${local.common_labels}
    metadata:
      dependsOn:
        - monitoring-api

  # Alert policy for data quality monitoring
  - name: data-quality-alert-policy
    type: gcp-types/monitoring-v1:projects.alertPolicies
    properties:
      parent: "projects/${var.project_id}"
      displayName: "Data Quality Alert Policy"
      documentation:
        content: "Alert when data quality assertions fail or quality scores drop below acceptable thresholds"
        mimeType: "text/markdown"
      conditions:
        - displayName: "High Data Quality Failure Rate"
          conditionThreshold:
            filter: 'metric.type="logging.googleapis.com/user/data_quality_failures"'
            comparison: "COMPARISON_GREATER_THAN"
            thresholdValue: 5.0
            duration: "300s"
            aggregations:
              - alignmentPeriod: "300s"
                perSeriesAligner: "ALIGN_RATE"
                crossSeriesReducer: "REDUCE_SUM"
                groupByFields: []
            trigger:
              count: 1
      alertStrategy:
        autoClose: "1800s"
        notificationRateLimit:
          period: "300s"
      combiner: "OR"
      enabled: true
      notificationChannels:
        - ${email-notification-channel.name}
      userLabels: ${local.common_labels}
    metadata:
      dependsOn:
        - email-notification-channel
        - data-quality-failures-metric

# Output values for verification and integration
outputs:
  # Project Information
  project_id:
    description: "Google Cloud Project ID"
    value: ${var.project_id}
    
  region:
    description: "Deployment region"
    value: ${var.region}
    
  # BigQuery Resources
  sample_dataset_id:
    description: "BigQuery dataset ID for sample data"
    value: ${local.dataset_id}
    
  assertions_dataset_id:
    description: "BigQuery dataset ID for Dataform assertions"
    value: ${local.assertions_dataset_id}
    
  sample_dataset_url:
    description: "BigQuery console URL for sample dataset"
    value: "https://console.cloud.google.com/bigquery?project=${var.project_id}&ws=!1m5!1m4!4m3!1s${var.project_id}!2s${local.dataset_id}!3e1"
    
  # Dataform Resources
  dataform_repository_name:
    description: "Dataform repository name"
    value: ${var.repository_name}
    
  dataform_workspace_name:
    description: "Dataform workspace name"
    value: ${var.workspace_name}
    
  dataform_console_url:
    description: "Dataform console URL"
    value: "https://console.cloud.google.com/dataform/repositories/${var.repository_name}/workspaces/${var.workspace_name}?project=${var.project_id}&location=${var.dataform_region}"
    
  # Scheduler Resources
  scheduler_job_name:
    description: "Cloud Scheduler job name"
    value: ${local.scheduler_job_id}
    
  scheduler_console_url:
    description: "Cloud Scheduler console URL"
    value: "https://console.cloud.google.com/cloudscheduler/jobs?project=${var.project_id}&region=${var.region}"
    
  # Service Account
  service_account_email:
    description: "Service account email for Dataform Scheduler"
    value: ${local.service_account_email}
    
  # Monitoring Resources
  notification_channel_name:
    description: "Email notification channel name"
    value: ${email-notification-channel.name}
    
  alert_policy_name:
    description: "Data quality alert policy name"
    value: ${data-quality-alert-policy.name}
    
  monitoring_console_url:
    description: "Cloud Monitoring console URL"
    value: "https://console.cloud.google.com/monitoring/alerting/policies?project=${var.project_id}"
    
  # Sample Data Queries
  sample_queries:
    description: "Sample BigQuery queries for testing data quality"
    value: |
      -- Query sample customers data
      SELECT * FROM `${var.project_id}.${local.dataset_id}.customers` LIMIT 10;
      
      -- Query sample orders data  
      SELECT * FROM `${var.project_id}.${local.dataset_id}.orders` LIMIT 10;
      
      -- Check for data quality assertion results (after Dataform execution)
      SELECT * FROM `${var.project_id}.${local.assertions_dataset_id}.customers_have_valid_emails`;
      SELECT * FROM `${var.project_id}.${local.assertions_dataset_id}.orders_have_valid_amounts`;
      
      -- Query data quality summary (after Dataform execution)
      SELECT * FROM `${var.project_id}.${local.dataset_id}.data_quality_summary`
      ORDER BY quality_score_percent DESC;

# Infrastructure Manager configuration metadata
config:
  # Minimum required Google Cloud Provider version
  required_providers:
    google:
      source: "hashicorp/google"
      version: ">= 5.0.0"
      
  # Resource creation timeout
  timeouts:
    create: "30m"
    update: "20m"
    delete: "20m"
    
  # Dependencies and ordering
  depends_on:
    - "google_project_service.dataform-api"
    - "google_project_service.scheduler-api"
    - "google_project_service.monitoring-api"
    - "google_project_service.bigquery-api"
    - "google_project_service.logging-api"