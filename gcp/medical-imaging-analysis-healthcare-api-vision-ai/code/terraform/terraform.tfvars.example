# =============================================================================
# TERRAFORM CONFIGURATION EXAMPLE
# Copy this file to terraform.tfvars and customize for your environment
# =============================================================================

# =============================================================================
# REQUIRED VARIABLES
# =============================================================================

# Your Google Cloud Project ID
project_id = "your-medical-imaging-project-id"

# Google Cloud region (choose one close to your users)
region = "us-central1"  # Options: us-central1, us-east1, europe-west1, asia-east1, etc.

# Google Cloud zone (must be in the selected region)
zone = "us-central1-a"

# =============================================================================
# HEALTHCARE API CONFIGURATION
# =============================================================================

# Healthcare dataset identifier
dataset_id = "medical-imaging-dataset"

# DICOM store for medical images
dicom_store_id = "medical-dicom-store"

# FHIR store for analysis results
fhir_store_id = "medical-fhir-store"

# FHIR version (DSTU2, STU3, or R4)
fhir_version = "R4"

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Prefix for Cloud Storage bucket (will be suffixed with random string)
bucket_name_prefix = "medical-imaging-bucket"

# Storage location (US, EU, ASIA, or specific region)
bucket_location = "US"

# Storage class (STANDARD, NEARLINE, COLDLINE, ARCHIVE)
bucket_storage_class = "STANDARD"

# Enable versioning for data protection
enable_bucket_versioning = true

# Enable uniform bucket-level access for security
enable_uniform_bucket_level_access = true

# =============================================================================
# CLOUD FUNCTIONS CONFIGURATION
# =============================================================================

# Function name
function_name = "medical-image-processor"

# Memory allocation (128, 256, 512, 1024, 2048, 4096, 8192 MB)
function_memory = 512

# Function timeout (1-540 seconds)
function_timeout = 540

# Python runtime version
function_runtime = "python311"

# =============================================================================
# PUB/SUB CONFIGURATION
# =============================================================================

# Pub/Sub topic for image processing events
pubsub_topic_name = "medical-image-processing"

# Subscription name
pubsub_subscription_name = "medical-image-processor-sub"

# Acknowledgment deadline (10-600 seconds)
subscription_ack_deadline = 600

# =============================================================================
# SERVICE ACCOUNT CONFIGURATION
# =============================================================================

# Service account name (lowercase, numbers, hyphens only)
service_account_name = "medical-imaging-sa"

# Display name for the service account
service_account_display_name = "Medical Imaging Analysis Service Account"

# =============================================================================
# MONITORING AND ALERTING
# =============================================================================

# Enable monitoring and alerting
enable_monitoring = true

# Email address for alerts (optional)
alert_email = "admin@yourorganization.com"

# =============================================================================
# SECURITY AND COMPLIANCE
# =============================================================================

# Environment designation
environment = "dev"  # Options: dev, staging, prod

# Resource naming prefix
resource_prefix = "medical-imaging"

# =============================================================================
# RESOURCE LABELING
# =============================================================================

# Common labels applied to all resources
common_labels = {
  project     = "medical-imaging-analysis"
  environment = "dev"
  managed-by  = "terraform"
  use-case    = "healthcare-ai"
  department  = "radiology"
  compliance  = "hipaa"
}

# =============================================================================
# ADVANCED CONFIGURATION (OPTIONAL)
# =============================================================================

# List of required Google Cloud APIs (auto-enabled)
required_apis = [
  "healthcare.googleapis.com",
  "vision.googleapis.com",
  "cloudfunctions.googleapis.com",
  "storage.googleapis.com",
  "pubsub.googleapis.com",
  "cloudbuild.googleapis.com",
  "cloudresourcemanager.googleapis.com",
  "iam.googleapis.com",
  "logging.googleapis.com",
  "monitoring.googleapis.com"
]

# =============================================================================
# COST OPTIMIZATION SETTINGS
# =============================================================================

# These settings help optimize costs for different usage patterns

# For development/testing environments:
# - function_memory = 256
# - bucket_storage_class = "STANDARD"
# - enable_monitoring = true (for debugging)

# For production environments:
# - function_memory = 512 or higher
# - bucket_storage_class = "STANDARD" or "NEARLINE"
# - enable_monitoring = true
# - Set appropriate lifecycle policies

# For archival/compliance:
# - bucket_storage_class = "ARCHIVE"
# - Extended retention periods
# - Enhanced audit logging

# =============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# =============================================================================

# DEVELOPMENT ENVIRONMENT
# Uncomment and customize for development:
# environment = "dev"
# function_memory = 256
# enable_monitoring = true
# alert_email = "dev-team@yourorg.com"

# STAGING ENVIRONMENT
# Uncomment and customize for staging:
# environment = "staging"
# function_memory = 512
# enable_monitoring = true
# alert_email = "qa-team@yourorg.com"

# PRODUCTION ENVIRONMENT
# Uncomment and customize for production:
# environment = "prod"
# function_memory = 1024
# enable_monitoring = true
# alert_email = "ops-team@yourorg.com"
# bucket_storage_class = "STANDARD"

# =============================================================================
# COMPLIANCE NOTES
# =============================================================================

# HIPAA Compliance:
# - Ensure your Google Cloud project has a signed BAA
# - Use only supported regions for healthcare data
# - Enable audit logging and monitoring
# - Implement proper access controls

# Data Residency:
# - Choose regions that comply with your data residency requirements
# - US regions: us-central1, us-east1, us-west1, us-west2
# - EU regions: europe-west1, europe-west2, europe-west3
# - Asia regions: asia-east1, asia-northeast1, asia-southeast1

# Security Best Practices:
# - Use separate projects for dev/staging/prod
# - Implement least privilege access
# - Regular security reviews and audits
# - Enable all relevant security features