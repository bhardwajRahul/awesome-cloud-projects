# ==============================================================================
# TERRAFORM VARIABLES EXAMPLE FILE
# ==============================================================================
# Copy this file to terraform.tfvars and customize the values for your
# specific deployment. This file contains example values and explanations
# for all configurable variables in the disaster recovery infrastructure.
#
# Usage:
#   cp terraform.tfvars.example terraform.tfvars
#   # Edit terraform.tfvars with your specific values
#   terraform plan
#   terraform apply
# ==============================================================================

# ==============================================================================
# REQUIRED VARIABLES - MUST BE SET
# ==============================================================================

# Google Cloud Project ID where resources will be deployed
# This should be a valid, existing Google Cloud project with billing enabled
project_id = "your-project-id-here"

# Administrative password for AlloyDB databases
# SECURITY: Use a strong password and consider using Secret Manager in production
# Must be at least 8 characters long
db_admin_password = "YourSecurePasswordHere123!"

# ==============================================================================
# PROJECT AND ENVIRONMENT CONFIGURATION
# ==============================================================================

# Environment name for resource labeling and organization
# Choose from: development, staging, production, dr
environment = "production"

# ==============================================================================
# REGIONAL CONFIGURATION
# ==============================================================================

# Primary Google Cloud region for database deployments
# Common choices: us-central1, us-east1, us-west1, europe-west1, asia-southeast1
primary_region = "us-central1"

# Secondary Google Cloud region for disaster recovery deployments
# Should be in a different region than primary for true disaster recovery
secondary_region = "us-east1"

# Primary Google Cloud zone within the primary region
primary_zone = "us-central1-a"

# Secondary Google Cloud zone within the secondary region
secondary_zone = "us-east1-b"

# ==============================================================================
# NETWORKING CONFIGURATION
# ==============================================================================

# CIDR block for the primary region subnet
# Ensure these don't overlap with existing networks
primary_subnet_cidr = "10.0.0.0/24"

# CIDR block for the secondary region subnet
secondary_subnet_cidr = "10.1.0.0/24"

# Secondary IP ranges for services (used for AlloyDB and other services)
primary_secondary_cidr   = "10.0.1.0/24"
secondary_secondary_cidr = "10.1.1.0/24"

# ==============================================================================
# ALLOYDB CONFIGURATION
# ==============================================================================

# Base name for AlloyDB clusters (will be suffixed with primary/secondary)
cluster_name = "alloydb-dr"

# Administrative username for AlloyDB databases
db_admin_user = "alloydb-admin"

# Number of CPUs for AlloyDB primary instance
# Options: 2, 4, 8, 16, 32, 64, 96
# Recommendation: Start with 4 for testing, scale based on workload
alloydb_cpu_count = 4

# Number of CPUs for AlloyDB read pool instances
# Usually smaller than primary instance
alloydb_read_pool_cpu_count = 2

# Number of nodes in AlloyDB read pool
# More nodes provide higher read throughput
alloydb_read_pool_nodes = 2

# ==============================================================================
# CLOUD SPANNER CONFIGURATION
# ==============================================================================

# Cloud Spanner instance configuration
# Regional options: regional-us-central1, regional-us-east1, regional-europe-west1
# Multi-regional options: nam-eur-asia1, nam3, eur3, asia1
# Recommendation: Use multi-regional for global applications
spanner_config = "nam-eur-asia1"

# Processing units for Cloud Spanner instance
# Minimum 1000 for multi-regional, scales in increments of 1000
# Each 1000 units = roughly $3,600/month
spanner_processing_units = 2000

# Display name for the Cloud Spanner instance
spanner_display_name = "Disaster Recovery Spanner Instance"

# ==============================================================================
# STORAGE CONFIGURATION
# ==============================================================================

# Prefix for backup storage bucket names
# Must be globally unique - buckets will be suffixed with region and random ID
backup_bucket_prefix = "your-company-dr-backup"

# Number of days to retain backup files in storage
# Consider compliance requirements and cost optimization
backup_retention_days = 30

# ==============================================================================
# CLOUD FUNCTIONS CONFIGURATION
# ==============================================================================

# Memory allocation for Cloud Functions (in MB)
# Options: 128, 256, 512, 1024, 2048, 4096, 8192
function_memory_mb = 512

# Timeout for Cloud Functions execution (in seconds)
# Maximum 3600 seconds (1 hour)
function_timeout_seconds = 540

# Runtime for Cloud Functions
# Options: python311, python312, nodejs18, nodejs20, go119, go121, java17, java21
function_runtime = "python311"

# ==============================================================================
# CLOUD SCHEDULER CONFIGURATION
# ==============================================================================

# Cron schedule for automated backup operations
# Format: "minute hour day-of-month month day-of-week"
# Example: "0 */6 * * *" = every 6 hours
backup_schedule = "0 */6 * * *"

# Cron schedule for backup validation operations
# Run less frequently than backups
validation_schedule = "30 */12 * * *"

# Timezone for Cloud Scheduler jobs
# Options: UTC, America/New_York, America/Chicago, Europe/London, Asia/Tokyo
scheduler_timezone = "UTC"

# ==============================================================================
# MONITORING AND ALERTING CONFIGURATION
# ==============================================================================

# Enable comprehensive monitoring and alerting
enable_monitoring = true

# List of notification channel IDs for disaster recovery alerts
# Create these in Cloud Console first, then add IDs here
# alert_notification_channels = [
#   "projects/PROJECT_ID/notificationChannels/CHANNEL_ID"
# ]
alert_notification_channels = []

# Name for the monitoring dashboard
monitoring_dashboard_name = "Multi-Database Disaster Recovery Dashboard"

# ==============================================================================
# RESOURCE LABELING
# ==============================================================================

# Additional labels to apply to all resources
# Use for cost tracking, compliance, and organization
labels = {
  team         = "data-platform"
  cost_center  = "engineering"
  project      = "disaster-recovery"
  managed_by   = "terraform"
  compliance   = "required"
  backup_tier  = "critical"
}

# ==============================================================================
# SECURITY CONFIGURATION
# ==============================================================================

# Enable deletion protection for critical resources
# Recommended: true for production, false for development/testing
enable_deletion_protection = true

# Enable encryption at rest for all database resources
# Should always be true for production workloads
enable_encryption_at_rest = true

# Location for KMS key ring (if encryption is enabled)
# Options: global, us, europe, asia
kms_key_ring_location = "global"

# ==============================================================================
# DISASTER RECOVERY CONFIGURATION
# ==============================================================================

# Recovery Point Objective in minutes (how much data loss is acceptable)
# Lower values require more frequent backups and higher costs
rpo_minutes = 60

# Recovery Time Objective in minutes (how long recovery should take)
# Should align with business requirements and SLAs
rto_minutes = 30

# Enable automatic cross-region backup replication
# Recommended: true for production disaster recovery
enable_cross_region_backup = true

# Enable automatic backup verification and testing
# Recommended: true to ensure backups are valid
backup_verification_enabled = true

# ==============================================================================
# COST OPTIMIZATION CONFIGURATION
# ==============================================================================

# Enable automatic scaling for applicable resources
# Can reduce costs but may impact performance during scale events
enable_automatic_scaling = false

# Level of cost optimization
# Options: basic, standard, aggressive
# basic = prioritize performance, aggressive = prioritize cost savings
cost_optimization_level = "standard"

# ==============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# ==============================================================================

# DEVELOPMENT ENVIRONMENT EXAMPLE:
# environment = "development"
# primary_region = "us-central1"
# secondary_region = "us-central1"  # Same region for dev
# alloydb_cpu_count = 2
# spanner_processing_units = 1000
# enable_deletion_protection = false
# cost_optimization_level = "aggressive"
# rpo_minutes = 120
# rto_minutes = 60

# STAGING ENVIRONMENT EXAMPLE:
# environment = "staging"
# primary_region = "us-central1"
# secondary_region = "us-east1"
# alloydb_cpu_count = 4
# spanner_processing_units = 1000
# enable_deletion_protection = true
# cost_optimization_level = "standard"
# rpo_minutes = 60
# rto_minutes = 30

# PRODUCTION ENVIRONMENT EXAMPLE:
# environment = "production"
# primary_region = "us-central1"
# secondary_region = "us-east1"
# alloydb_cpu_count = 8
# spanner_processing_units = 3000
# enable_deletion_protection = true
# cost_optimization_level = "basic"
# rpo_minutes = 30
# rto_minutes = 15
# enable_monitoring = true
# backup_verification_enabled = true

# ==============================================================================
# ADVANCED CONFIGURATION OPTIONS
# ==============================================================================

# For high-traffic production environments, consider:
# alloydb_cpu_count = 16
# alloydb_read_pool_cpu_count = 8
# alloydb_read_pool_nodes = 4
# spanner_processing_units = 5000
# function_memory_mb = 1024
# function_timeout_seconds = 900

# For cost-optimized environments, consider:
# alloydb_cpu_count = 2
# alloydb_read_pool_cpu_count = 2
# alloydb_read_pool_nodes = 1
# spanner_processing_units = 1000
# function_memory_mb = 256
# enable_automatic_scaling = true
# cost_optimization_level = "aggressive"

# ==============================================================================
# SECURITY BEST PRACTICES
# ==============================================================================

# For enhanced security in production:
# 1. Use Secret Manager for db_admin_password:
#    gcloud secrets create alloydb-admin-password --data-file=-
#    
# 2. Enable customer-managed encryption keys (CMEK):
#    kms_key_ring_location = "us"
#    
# 3. Use VPC Service Controls:
#    Configure in Cloud Console for network perimeter security
#    
# 4. Set up private Google access:
#    Ensure subnets have private Google access enabled
#    
# 5. Configure firewall rules:
#    Restrict database access to specific source ranges

# ==============================================================================
# COST ESTIMATION GUIDELINES
# ==============================================================================

# Monthly cost estimates (USD, approximate):
# 
# Small Environment (dev/testing):
# - AlloyDB (2 CPU): ~$200-400/month
# - Spanner (1000 units): ~$300-600/month
# - Storage/Networking: ~$50-100/month
# - Total: ~$550-1,100/month
#
# Medium Environment (staging/small prod):
# - AlloyDB (4 CPU): ~$400-800/month
# - Spanner (2000 units): ~$600-1,200/month
# - Storage/Networking: ~$100-200/month
# - Total: ~$1,100-2,200/month
#
# Large Environment (production):
# - AlloyDB (8+ CPU): ~$800-1,600/month
# - Spanner (3000+ units): ~$900-1,800/month
# - Storage/Networking: ~$200-400/month
# - Total: ~$1,900-3,800/month
#
# Note: Actual costs depend on usage patterns, data volume, and region selection

# ==============================================================================
# VALIDATION AND TESTING
# ==============================================================================

# After deployment, validate with these commands:
# 
# gcloud alloydb clusters list --regions=us-central1,us-east1
# gcloud spanner instances describe INSTANCE_ID
# gsutil ls -p PROJECT_ID
# gcloud pubsub topics list
# gcloud monitoring dashboards list
#
# Test disaster recovery procedures:
# 1. Create test backup
# 2. Simulate failover scenario
# 3. Verify data consistency
# 4. Test application connectivity
# 5. Document results and improve procedures