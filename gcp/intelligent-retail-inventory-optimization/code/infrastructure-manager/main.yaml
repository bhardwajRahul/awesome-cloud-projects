# Infrastructure Manager Configuration for Intelligent Retail Inventory Optimization
# This configuration deploys a complete retail inventory optimization system using
# Google Cloud services including BigQuery, Vertex AI, Cloud Optimization AI,
# Fleet Engine, Cloud Run, and Cloud Storage.

apiVersion: blueprints.cloud.google.com/v1alpha1
kind: BlueprintMetadata
metadata:
  name: intelligent-retail-inventory-optimization
  annotations:
    config.kubernetes.io/local-config: "true"
spec:
  info:
    title: Intelligent Retail Inventory Optimization
    source:
      repo: https://github.com/GoogleCloudPlatform/cloud-foundation-fabric
      sourceType: git
    version: 1.0.0
    actuationTool:
      flavor: Terraform
      version: ">= 1.0"
    description:
      tagline: AI-powered retail inventory optimization with Fleet Engine and Cloud Optimization AI
      detailed: |
        This blueprint deploys an intelligent retail inventory management system that combines
        Google Cloud's Fleet Engine for delivery route optimization with Cloud Optimization AI
        for demand forecasting and stock placement decisions. The solution uses BigQuery for
        data analytics and Cloud Run for scalable microservices.

---

# Variables for customization
variables:
  project_id:
    description: "Google Cloud Project ID"
    type: string
    required: true
  
  region:
    description: "Primary region for resources"
    type: string
    default: "us-central1"
  
  zone:
    description: "Primary zone for zonal resources"
    type: string
    default: "us-central1-a"
  
  environment:
    description: "Environment name (dev, staging, prod)"
    type: string
    default: "dev"
    validation:
      condition: contains(["dev", "staging", "prod"], var.environment)
      error_message: "Environment must be dev, staging, or prod"
  
  random_suffix:
    description: "Random suffix for unique resource names"
    type: string
    default: "001"
  
  enable_apis:
    description: "Whether to enable required APIs"
    type: bool
    default: true

---

# Enable required Google Cloud APIs
resources:
  - name: enable-apis
    type: gcp-types/serviceusage-v1:services
    condition: var.enable_apis
    properties:
      name: projects/$(ref.project.projectId)/services/bigquery.googleapis.com
      
  - name: enable-vertex-ai-api
    type: gcp-types/serviceusage-v1:services
    condition: var.enable_apis
    properties:
      name: projects/$(ref.project.projectId)/services/aiplatform.googleapis.com
      
  - name: enable-optimization-api
    type: gcp-types/serviceusage-v1:services
    condition: var.enable_apis
    properties:
      name: projects/$(ref.project.projectId)/services/optimization.googleapis.com
      
  - name: enable-fleet-engine-api
    type: gcp-types/serviceusage-v1:services
    condition: var.enable_apis
    properties:
      name: projects/$(ref.project.projectId)/services/fleetengine.googleapis.com
      
  - name: enable-cloud-run-api
    type: gcp-types/serviceusage-v1:services
    condition: var.enable_apis
    properties:
      name: projects/$(ref.project.projectId)/services/run.googleapis.com
      
  - name: enable-storage-api
    type: gcp-types/serviceusage-v1:services
    condition: var.enable_apis
    properties:
      name: projects/$(ref.project.projectId)/services/storage.googleapis.com
      
  - name: enable-monitoring-api
    type: gcp-types/serviceusage-v1:services
    condition: var.enable_apis
    properties:
      name: projects/$(ref.project.projectId)/services/monitoring.googleapis.com
      
  - name: enable-cloudbuild-api
    type: gcp-types/serviceusage-v1:services
    condition: var.enable_apis
    properties:
      name: projects/$(ref.project.projectId)/services/cloudbuild.googleapis.com

  # Service Account for Inventory Optimization System
  - name: inventory-optimizer-service-account
    type: gcp-types/iam-v1:projects.serviceAccounts
    properties:
      accountId: inventory-optimizer-$(var.random_suffix)
      displayName: "Inventory Optimization Service Account"
      description: "Service account for retail inventory optimization system"
    metadata:
      dependsOn:
        - enable-apis

  # IAM bindings for service account
  - name: bigquery-admin-binding
    type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
    properties:
      resource: $(var.project_id)
      role: roles/bigquery.admin
      member: serviceAccount:$(ref.inventory-optimizer-service-account.email)

  - name: vertex-ai-user-binding
    type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
    properties:
      resource: $(var.project_id)
      role: roles/aiplatform.user
      member: serviceAccount:$(ref.inventory-optimizer-service-account.email)

  - name: optimization-admin-binding
    type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
    properties:
      resource: $(var.project_id)
      role: roles/optimization.admin
      member: serviceAccount:$(ref.inventory-optimizer-service-account.email)

  - name: fleet-engine-admin-binding
    type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
    properties:
      resource: $(var.project_id)
      role: roles/fleetengine.admin
      member: serviceAccount:$(ref.inventory-optimizer-service-account.email)

  - name: storage-admin-binding
    type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
    properties:
      resource: $(var.project_id)
      role: roles/storage.admin
      member: serviceAccount:$(ref.inventory-optimizer-service-account.email)

  - name: monitoring-editor-binding
    type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
    properties:
      resource: $(var.project_id)
      role: roles/monitoring.editor
      member: serviceAccount:$(ref.inventory-optimizer-service-account.email)

  # BigQuery Dataset for Retail Analytics
  - name: retail-analytics-dataset
    type: gcp-types/bigquery-v2:datasets
    properties:
      datasetId: retail_analytics_$(var.random_suffix)
      location: $(var.region)
      description: "Retail inventory optimization analytics dataset"
      access:
        - role: OWNER
          userByEmail: $(ref.inventory-optimizer-service-account.email)
        - role: READER
          specialGroup: projectReaders
    metadata:
      dependsOn:
        - inventory-optimizer-service-account

  # BigQuery Tables
  - name: inventory-levels-table
    type: gcp-types/bigquery-v2:tables
    properties:
      datasetId: $(ref.retail-analytics-dataset.datasetId)
      tableId: inventory_levels
      schema:
        fields:
          - name: store_id
            type: STRING
            mode: REQUIRED
            description: "Unique identifier for retail store"
          - name: product_id
            type: STRING
            mode: REQUIRED
            description: "Unique identifier for product"
          - name: current_stock
            type: INTEGER
            mode: REQUIRED
            description: "Current inventory level"
          - name: max_capacity
            type: INTEGER
            mode: REQUIRED
            description: "Maximum storage capacity for product"
          - name: min_threshold
            type: INTEGER
            mode: REQUIRED
            description: "Minimum inventory threshold before reorder"
          - name: last_updated
            type: TIMESTAMP
            mode: REQUIRED
            description: "Timestamp of last inventory update"
      description: "Current inventory levels across all store locations"
    metadata:
      dependsOn:
        - retail-analytics-dataset

  - name: sales-history-table
    type: gcp-types/bigquery-v2:tables
    properties:
      datasetId: $(ref.retail-analytics-dataset.datasetId)
      tableId: sales_history
      schema:
        fields:
          - name: transaction_id
            type: STRING
            mode: REQUIRED
            description: "Unique transaction identifier"
          - name: store_id
            type: STRING
            mode: REQUIRED
            description: "Store where transaction occurred"
          - name: product_id
            type: STRING
            mode: REQUIRED
            description: "Product sold in transaction"
          - name: quantity
            type: INTEGER
            mode: REQUIRED
            description: "Quantity sold"
          - name: price
            type: FLOAT
            mode: REQUIRED
            description: "Sale price per unit"
          - name: timestamp
            type: TIMESTAMP
            mode: REQUIRED
            description: "Transaction timestamp"
          - name: customer_demographics
            type: STRING
            mode: NULLABLE
            description: "Customer demographic information"
      description: "Historical sales transaction data"
    metadata:
      dependsOn:
        - retail-analytics-dataset

  - name: store-locations-table
    type: gcp-types/bigquery-v2:tables
    properties:
      datasetId: $(ref.retail-analytics-dataset.datasetId)
      tableId: store_locations
      schema:
        fields:
          - name: store_id
            type: STRING
            mode: REQUIRED
            description: "Unique store identifier"
          - name: store_name
            type: STRING
            mode: REQUIRED
            description: "Store display name"
          - name: latitude
            type: FLOAT
            mode: REQUIRED
            description: "Store latitude coordinate"
          - name: longitude
            type: FLOAT
            mode: REQUIRED
            description: "Store longitude coordinate"
          - name: region
            type: STRING
            mode: REQUIRED
            description: "Geographic region"
          - name: store_type
            type: STRING
            mode: REQUIRED
            description: "Store type classification"
          - name: capacity_tier
            type: STRING
            mode: REQUIRED
            description: "Store capacity tier (small/medium/large)"
      description: "Store location and metadata information"
    metadata:
      dependsOn:
        - retail-analytics-dataset

  - name: demand-training-data-table
    type: gcp-types/bigquery-v2:tables
    properties:
      datasetId: $(ref.retail-analytics-dataset.datasetId)
      tableId: demand_training_data
      schema:
        fields:
          - name: store_id
            type: STRING
            mode: REQUIRED
          - name: product_id
            type: STRING
            mode: REQUIRED
          - name: date
            type: DATE
            mode: REQUIRED
          - name: sales_quantity
            type: INTEGER
            mode: REQUIRED
          - name: weather_condition
            type: STRING
            mode: NULLABLE
          - name: promotion_active
            type: BOOLEAN
            mode: NULLABLE
          - name: competitor_price
            type: FLOAT
            mode: NULLABLE
          - name: season
            type: STRING
            mode: NULLABLE
      description: "Training data for demand forecasting model"
    metadata:
      dependsOn:
        - retail-analytics-dataset

  # Cloud Storage Bucket for Data Pipeline
  - name: retail-inventory-storage-bucket
    type: gcp-types/storage-v1:buckets
    properties:
      name: retail-inventory-$(var.project_id)-$(var.random_suffix)
      location: $(var.region)
      storageClass: STANDARD
      versioning:
        enabled: true
      lifecycle:
        rule:
          - action:
              type: SetStorageClass
              storageClass: NEARLINE
            condition:
              age: 30
          - action:
              type: SetStorageClass
              storageClass: COLDLINE
            condition:
              age: 90
      iamConfiguration:
        uniformBucketLevelAccess:
          enabled: true
    metadata:
      dependsOn:
        - inventory-optimizer-service-account

  # Cloud Storage IAM binding
  - name: storage-bucket-iam-binding
    type: gcp-types/storage-v1:buckets.iamMemberBinding
    properties:
      bucket: $(ref.retail-inventory-storage-bucket.name)
      role: roles/storage.admin
      member: serviceAccount:$(ref.inventory-optimizer-service-account.email)
    metadata:
      dependsOn:
        - retail-inventory-storage-bucket

  # Cloud Run Analytics Service
  - name: analytics-service
    type: gcp-types/run-v1:namespaces.services
    properties:
      parent: namespaces/$(var.project_id)
      location: $(var.region)
      metadata:
        name: analytics-service-$(var.random_suffix)
        namespace: $(var.project_id)
        annotations:
          run.googleapis.com/ingress: all
          autoscaling.knative.dev/maxScale: "10"
          autoscaling.knative.dev/minScale: "0"
      spec:
        template:
          metadata:
            annotations:
              autoscaling.knative.dev/maxScale: "10"
              run.googleapis.com/execution-environment: gen2
              run.googleapis.com/cpu-throttling: "false"
          spec:
            serviceAccountName: $(ref.inventory-optimizer-service-account.email)
            containerConcurrency: 1000
            timeoutSeconds: 3600
            containers:
              - image: gcr.io/cloudrun/placeholder
                ports:
                  - containerPort: 8080
                    protocol: TCP
                env:
                  - name: PROJECT_ID
                    value: $(var.project_id)
                  - name: DATASET_NAME
                    value: $(ref.retail-analytics-dataset.datasetId)
                  - name: BUCKET_NAME
                    value: $(ref.retail-inventory-storage-bucket.name)
                resources:
                  limits:
                    cpu: "1"
                    memory: 1Gi
    metadata:
      dependsOn:
        - inventory-optimizer-service-account
        - retail-analytics-dataset
        - retail-inventory-storage-bucket

  # Cloud Run Analytics Service IAM
  - name: analytics-service-iam-binding
    type: gcp-types/run-v1:projects.locations.services.iamMemberBinding
    properties:
      location: $(var.region)
      service: $(ref.analytics-service.metadata.name)
      role: roles/run.invoker
      member: allUsers
    metadata:
      dependsOn:
        - analytics-service

  # Cloud Run Optimizer Service
  - name: optimizer-service
    type: gcp-types/run-v1:namespaces.services
    properties:
      parent: namespaces/$(var.project_id)
      location: $(var.region)
      metadata:
        name: optimizer-service-$(var.random_suffix)
        namespace: $(var.project_id)
        annotations:
          run.googleapis.com/ingress: all
          autoscaling.knative.dev/maxScale: "10"
          autoscaling.knative.dev/minScale: "0"
      spec:
        template:
          metadata:
            annotations:
              autoscaling.knative.dev/maxScale: "10"
              run.googleapis.com/execution-environment: gen2
              run.googleapis.com/cpu-throttling: "false"
          spec:
            serviceAccountName: $(ref.inventory-optimizer-service-account.email)
            containerConcurrency: 1000
            timeoutSeconds: 3600
            containers:
              - image: gcr.io/cloudrun/placeholder
                ports:
                  - containerPort: 8080
                    protocol: TCP
                env:
                  - name: PROJECT_ID
                    value: $(var.project_id)
                  - name: REGION
                    value: $(var.region)
                  - name: BUCKET_NAME
                    value: $(ref.retail-inventory-storage-bucket.name)
                  - name: ANALYTICS_URL
                    value: $(ref.analytics-service.status.url)
                resources:
                  limits:
                    cpu: "2"
                    memory: 2Gi
    metadata:
      dependsOn:
        - inventory-optimizer-service-account
        - retail-inventory-storage-bucket
        - analytics-service

  # Cloud Run Optimizer Service IAM
  - name: optimizer-service-iam-binding
    type: gcp-types/run-v1:projects.locations.services.iamMemberBinding
    properties:
      location: $(var.region)
      service: $(ref.optimizer-service.metadata.name)
      role: roles/run.invoker
      member: allUsers
    metadata:
      dependsOn:
        - optimizer-service

  # Cloud Monitoring Notification Channel
  - name: email-notification-channel
    type: gcp-types/monitoring-v1:projects.notificationChannels
    properties:
      type: email
      displayName: "Inventory Optimization Alerts"
      labels:
        email_address: "admin@example.com"
      enabled: true
    metadata:
      dependsOn:
        - enable-monitoring-api

  # Cloud Monitoring Alert Policy
  - name: optimization-failure-alert
    type: gcp-types/monitoring-v1:projects.alertPolicies
    properties:
      displayName: "Inventory Optimization Failures"
      documentation:
        content: "Alert when inventory optimization requests fail or exceed timeout thresholds"
        mimeType: "text/markdown"
      conditions:
        - displayName: "High Error Rate"
          conditionThreshold:
            filter: 'resource.type="cloud_run_revision"'
            comparison: COMPARISON_GT
            thresholdValue: 0.05
            duration: 300s
            aggregations:
              - alignmentPeriod: 60s
                perSeriesAligner: ALIGN_RATE
      enabled: true
      alertStrategy:
        autoClose: 1800s
      notificationChannels:
        - $(ref.email-notification-channel.name)
    metadata:
      dependsOn:
        - email-notification-channel

# Outputs for reference and integration
outputs:
  project_id:
    description: "Google Cloud Project ID"
    value: $(var.project_id)
    
  region:
    description: "Primary deployment region"
    value: $(var.region)
    
  service_account_email:
    description: "Service account email for inventory optimization system"
    value: $(ref.inventory-optimizer-service-account.email)
    
  bigquery_dataset_id:
    description: "BigQuery dataset ID for retail analytics"
    value: $(ref.retail-analytics-dataset.datasetId)
    
  storage_bucket_name:
    description: "Cloud Storage bucket name for data pipeline"
    value: $(ref.retail-inventory-storage-bucket.name)
    
  analytics_service_url:
    description: "Cloud Run analytics service URL"
    value: $(ref.analytics-service.status.url)
    
  optimizer_service_url:
    description: "Cloud Run optimizer service URL"
    value: $(ref.optimizer-service.status.url)
    
  notification_channel_id:
    description: "Cloud Monitoring notification channel ID"
    value: $(ref.email-notification-channel.name)

# Metadata for deployment tracking
metadata:
  labels:
    solution: "intelligent-retail-inventory-optimization"
    environment: $(var.environment)
    version: "1.0.0"
    component: "infrastructure"
  annotations:
    deployment.cloud.google.com/managed-by: "infrastructure-manager"
    deployment.cloud.google.com/recipe-version: "1.2"
    deployment.cloud.google.com/last-updated: "2025-07-12"