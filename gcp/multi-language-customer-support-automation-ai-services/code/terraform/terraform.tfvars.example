# Example Terraform Variables Configuration
# Copy this file to terraform.tfvars and customize the values for your deployment

# Required: Google Cloud Project Configuration
project_id = "your-gcp-project-id"    # Replace with your actual GCP project ID
region     = "us-central1"             # GCP region for resource deployment
zone       = "us-central1-a"           # GCP zone for resource deployment

# Firestore Configuration
firestore_region = "us-central1"       # Must be compatible with your region

# Environment and Labeling
environment  = "development"           # Environment: development, staging, production
cost_center  = "customer-support"      # Cost center for billing tracking

# Storage Configuration
force_destroy_bucket = true            # WARNING: Set to false for production
storage_class        = "STANDARD"      # STANDARD, NEARLINE, COLDLINE, ARCHIVE
enable_versioning    = true            # Enable bucket versioning
lifecycle_age_days   = 30              # Days before deleting old versions

# CORS Configuration for Web Uploads
cors_origins = ["*"]                   # Restrict to your domains in production
# cors_origins = ["https://yourdomain.com", "https://app.yourdomain.com"]

# Supported Languages Configuration
supported_languages = [
  "en-US",    # English (United States)
  "es-ES",    # Spanish (Spain)
  "fr-FR",    # French (France)
  "de-DE",    # German (Germany)
  "it-IT",    # Italian (Italy)
  "pt-BR",    # Portuguese (Brazil)
  "ja-JP",    # Japanese (Japan)
  "ko-KR",    # Korean (South Korea)
  "zh-CN"     # Chinese (Simplified)
]

# Language Display Names
language_names = {
  "en-US" = "English (United States)"
  "es-ES" = "Spanish (Spain)"
  "fr-FR" = "French (France)"
  "de-DE" = "German (Germany)"
  "it-IT" = "Italian (Italy)"
  "pt-BR" = "Portuguese (Brazil)"
  "ja-JP" = "Japanese (Japan)"
  "ko-KR" = "Korean (South Korea)"
  "zh-CN" = "Chinese (Simplified)"
}

# Text-to-Speech Voice Configuration
tts_voice_config = {
  "en-US" = {
    name         = "en-US-Neural2-J"
    ssmlGender   = "FEMALE"
    languageCode = "en-US"
  }
  "es-ES" = {
    name         = "es-ES-Neural2-F"
    ssmlGender   = "FEMALE"
    languageCode = "es-ES"
  }
  "fr-FR" = {
    name         = "fr-FR-Neural2-C"
    ssmlGender   = "FEMALE"
    languageCode = "fr-FR"
  }
  "de-DE" = {
    name         = "de-DE-Neural2-F"
    ssmlGender   = "FEMALE"
    languageCode = "de-DE"
  }
  "it-IT" = {
    name         = "it-IT-Neural2-A"
    ssmlGender   = "FEMALE"
    languageCode = "it-IT"
  }
  "pt-BR" = {
    name         = "pt-BR-Neural2-C"
    ssmlGender   = "FEMALE"
    languageCode = "pt-BR"
  }
  "ja-JP" = {
    name         = "ja-JP-Neural2-B"
    ssmlGender   = "FEMALE"
    languageCode = "ja-JP"
  }
  "ko-KR" = {
    name         = "ko-KR-Neural2-A"
    ssmlGender   = "FEMALE"
    languageCode = "ko-KR"
  }
  "zh-CN" = {
    name         = "cmn-CN-Standard-A"
    ssmlGender   = "FEMALE"
    languageCode = "cmn-CN"
  }
}

# Cloud Functions Configuration
function_max_instances = 100           # Maximum function instances
function_min_instances = 0             # Minimum instances (0 for scale-to-zero)
function_timeout_seconds = 60          # Function timeout in seconds
function_memory = "1Gi"                # Memory allocation: 128Mi, 256Mi, 512Mi, 1Gi, 2Gi, 4Gi, 8Gi
function_cpu = "1"                     # CPU allocation: 0.083, 0.167, 0.333, 0.583, 1, 2, 4, 6, 8

# Speech Recognition Configuration
speech_model = "latest_long"           # Speech model: latest_long, latest_short, command_and_search, phone_call, video, default
enable_speaker_diarization = true     # Enable speaker separation
max_speaker_count = 2                  # Maximum speakers for diarization (1-6)

# Sentiment Analysis Thresholds
sentiment_thresholds = {
  negative = -0.2    # Threshold for negative sentiment
  positive = 0.2     # Threshold for positive sentiment
  urgency  = -0.5    # Threshold for urgent escalation
}

# Monitoring and Alerting Configuration
enable_monitoring = true               # Enable monitoring and alerting
error_rate_threshold = 0.05           # Error rate threshold for alerts (5%)

# Notification Channels (replace with your actual notification channel IDs)
notification_channels = [
  # "projects/your-project-id/notificationChannels/your-channel-id"
]

# Firestore Backup Configuration
enable_firestore_backups = true       # Enable automatic backups
backup_retention_days = 30            # Backup retention period

# Logging Configuration
enable_audit_logs = true              # Enable audit logging
log_retention_days = 30               # Log retention period

# Networking Configuration (Advanced)
enable_vpc_connector = false          # Enable VPC connector for private networking
vpc_connector_cidr = "10.8.0.0/28"   # CIDR for VPC connector
enable_private_google_access = false  # Enable Private Google Access

# Workflow Configuration
workflow_timeout_seconds = 300        # Workflow timeout (5 minutes)

# Development/Testing Overrides
# Uncomment these for development/testing environments

# force_destroy_bucket = true
# function_min_instances = 0
# error_rate_threshold = 0.1
# log_retention_days = 7
# backup_retention_days = 7

# Production Security Recommendations
# For production deployments, consider these security enhancements:

# 1. Restrict CORS origins to your actual domains
# cors_origins = ["https://yourdomain.com"]

# 2. Enable Private Google Access for enhanced security
# enable_private_google_access = true
# enable_vpc_connector = true

# 3. Configure notification channels for alerting
# notification_channels = [
#   "projects/your-project-id/notificationChannels/email-channel-id",
#   "projects/your-project-id/notificationChannels/slack-channel-id"
# ]

# 4. Adjust sentiment thresholds based on your business requirements
# sentiment_thresholds = {
#   negative = -0.1    # More sensitive to negative sentiment
#   positive = 0.3     # Higher threshold for positive sentiment
#   urgency  = -0.4    # Lower threshold for urgent escalation
# }

# 5. Configure appropriate resource limits
# function_max_instances = 50    # Lower limit for cost control
# function_timeout_seconds = 30  # Shorter timeout for faster responses

# 6. Enable longer retention for compliance
# log_retention_days = 90
# backup_retention_days = 90

# Cost Optimization Notes:
# - Use function_min_instances = 0 for scale-to-zero cost savings
# - Set lifecycle_age_days to a lower value to reduce storage costs
# - Choose appropriate storage_class based on access patterns
# - Monitor usage with the deployed dashboard and adjust limits accordingly
# - Consider regional deployment vs. multi-regional for cost vs. availability tradeoffs