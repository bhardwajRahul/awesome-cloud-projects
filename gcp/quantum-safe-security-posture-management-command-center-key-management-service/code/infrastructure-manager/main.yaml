# Google Cloud Infrastructure Manager Configuration
# Quantum-Safe Security Posture Management with Security Command Center and Cloud KMS
# This configuration deploys a comprehensive quantum-resistant security framework
# using post-quantum cryptography and enterprise-grade monitoring capabilities

# Configuration metadata and parameters
metadata:
  name: quantum-safe-security-posture
  description: "Deploy quantum-resistant security infrastructure with SCC and Cloud KMS"
  version: "1.0"

# Global parameters and variables
parameters:
  # Project and Organization Configuration
  project_id:
    type: string
    description: "Google Cloud Project ID for quantum security deployment"
    default: "quantum-security-${random_suffix}"
  
  organization_id:
    type: string
    description: "Google Cloud Organization ID (numeric only)"
    validation:
      pattern: "^[0-9]+$"
  
  region:
    type: string
    description: "Primary deployment region for quantum security resources"
    default: "us-central1"
    allowed_values:
      - "us-central1"
      - "us-east1"
      - "us-west1"
      - "europe-west1"
      - "asia-southeast1"
  
  # Resource Naming Configuration
  random_suffix:
    type: string
    description: "Random suffix for unique resource naming"
    default: "${random_id.suffix.hex}"
  
  keyring_name:
    type: string
    description: "Name for the quantum-safe KMS keyring"
    default: "quantum-safe-keyring-${var.random_suffix}"
  
  # Security Configuration
  enable_enterprise_scc:
    type: boolean
    description: "Enable Security Command Center Enterprise tier"
    default: true
  
  enable_post_quantum_keys:
    type: boolean
    description: "Create post-quantum cryptography keys"
    default: true
  
  enable_compliance_reporting:
    type: boolean
    description: "Deploy automated compliance reporting functions"
    default: true

# Resource definitions following Google Cloud Infrastructure Manager syntax
resources:
  # Random ID generator for unique resource naming
  random_suffix:
    type: "random_id"
    properties:
      byte_length: 3
      
  # Enable required Google Cloud APIs for quantum security infrastructure
  required_apis:
    type: "google_project_service"
    for_each:
      - "securitycenter.googleapis.com"
      - "cloudkms.googleapis.com"
      - "cloudasset.googleapis.com"
      - "monitoring.googleapis.com"
      - "logging.googleapis.com"
      - "cloudresourcemanager.googleapis.com"
      - "cloudfunctions.googleapis.com"
      - "cloudscheduler.googleapis.com"
      - "pubsub.googleapis.com"
      - "storage.googleapis.com"
    properties:
      project: "${var.project_id}"
      service: "${each.value}"
      disable_on_destroy: false
    depends_on:
      - "google_project.quantum_security_project"

  # Google Cloud Project for quantum security deployment
  quantum_security_project:
    type: "google_project"
    properties:
      name: "Quantum Security Posture Management"
      project_id: "${var.project_id}"
      org_id: "${var.organization_id}"
      auto_create_network: false
      labels:
        environment: "quantum-security"
        purpose: "post-quantum-cryptography"
        compliance: "nist-pqc"

  # Cloud KMS Keyring for quantum-safe cryptography
  quantum_safe_keyring:
    type: "google_kms_key_ring"
    properties:
      name: "${var.keyring_name}"
      location: "${var.region}"
      project: "${var.project_id}"
    depends_on:
      - "required_apis"

  # Post-Quantum Cryptography Key - ML-DSA-65 (FIPS 204)
  # ML-DSA-65 provides quantum-resistant digital signatures using lattice-based cryptography
  quantum_key_ml_dsa:
    type: "google_kms_crypto_key"
    condition: "${var.enable_post_quantum_keys}"
    properties:
      name: "quantum-safe-key-ml-dsa-${var.random_suffix}"
      key_ring: "${quantum_safe_keyring.id}"
      purpose: "ASYMMETRIC_SIGN"
      version_template:
        algorithm: "PQ_SIGN_ML_DSA_65"
        protection_level: "SOFTWARE"
      rotation_period: "2592000s"  # 30 days for quantum agility
      labels:
        algorithm: "ml-dsa-65"
        quantum-safe: "true"
        nist-standard: "fips-204"
        purpose: "lattice-based-signatures"
    depends_on:
      - "quantum_safe_keyring"

  # Post-Quantum Cryptography Key - SLH-DSA-SHA2-128S (FIPS 205)
  # SLH-DSA provides quantum-resistant signatures using hash-based cryptography
  quantum_key_slh_dsa:
    type: "google_kms_crypto_key"
    condition: "${var.enable_post_quantum_keys}"
    properties:
      name: "quantum-safe-key-slh-dsa-${var.random_suffix}"
      key_ring: "${quantum_safe_keyring.id}"
      purpose: "ASYMMETRIC_SIGN"
      version_template:
        algorithm: "PQ_SIGN_SLH_DSA_SHA2_128S"
        protection_level: "SOFTWARE"
      rotation_period: "2592000s"  # 30 days for cryptographic agility
      labels:
        algorithm: "slh-dsa-sha2-128s"
        quantum-safe: "true"
        nist-standard: "fips-205"
        purpose: "hash-based-signatures"
    depends_on:
      - "quantum_safe_keyring"

  # Cloud Storage bucket for quantum security asset inventory and compliance reports
  quantum_inventory_bucket:
    type: "google_storage_bucket"
    properties:
      name: "${var.project_id}-quantum-inventory"
      location: "${var.region}"
      project: "${var.project_id}"
      storage_class: "STANDARD"
      uniform_bucket_level_access: true
      versioning:
        enabled: true
      encryption:
        default_kms_key_name: "${quantum_key_ml_dsa.id}"
      lifecycle_rule:
        - condition:
            age: 90
          action:
            type: "SetStorageClass"
            storage_class: "NEARLINE"
        - condition:
            age: 365
          action:
            type: "SetStorageClass"
            storage_class: "COLDLINE"
      labels:
        purpose: "quantum-compliance"
        data-type: "security-inventory"
    depends_on:
      - "quantum_key_ml_dsa"

  # Pub/Sub topic for cryptographic asset change notifications
  crypto_asset_topic:
    type: "google_pubsub_topic"
    properties:
      name: "crypto-asset-changes"
      project: "${var.project_id}"
      message_retention_duration: "604800s"  # 7 days
      labels:
        purpose: "quantum-monitoring"
        data-type: "asset-changes"
    depends_on:
      - "required_apis"

  # Cloud Asset Inventory feed for cryptographic resource monitoring
  quantum_asset_feed:
    type: "google_cloud_asset_organization_feed"
    properties:
      billing_project: "${var.project_id}"
      org_id: "${var.organization_id}"
      feed_id: "quantum-crypto-assets"
      content_type: "RESOURCE"
      asset_types:
        - "cloudkms.googleapis.com/CryptoKey"
        - "cloudkms.googleapis.com/KeyRing"
        - "compute.googleapis.com/Disk"
        - "storage.googleapis.com/Bucket"
      feed_output_config:
        pubsub_destination:
          topic: "${crypto_asset_topic.id}"
      condition:
        expression: >
          resource.data.purpose == "ASYMMETRIC_SIGN" ||
          resource.data.algorithm.contains("PQ_SIGN") ||
          resource.name.contains("quantum")
        title: "Quantum Cryptographic Assets"
        description: "Monitor quantum-safe and quantum-vulnerable cryptographic resources"
    depends_on:
      - "crypto_asset_topic"

  # Security Command Center notification configuration for quantum threats
  scc_notification_config:
    type: "google_scc_notification_config"
    condition: "${var.enable_enterprise_scc}"
    properties:
      config_id: "quantum-security-alerts"
      organization: "${var.organization_id}"
      description: "Notifications for quantum security vulnerabilities and compliance issues"
      pubsub_topic: "${crypto_asset_topic.id}"
      streaming_config:
        filter: >
          (finding.category="QUANTUM_VULNERABILITY" OR 
           finding.category="WEAK_CRYPTOGRAPHY" OR
           finding.category="NON_QUANTUM_SAFE") AND
          finding.state="ACTIVE"
    depends_on:
      - "crypto_asset_topic"

  # Cloud Monitoring dashboard for quantum security posture
  quantum_monitoring_dashboard:
    type: "google_monitoring_dashboard"
    properties:
      project: "${var.project_id}"
      display_name: "Quantum Security Posture Dashboard"
      dashboard_json: |
        {
          "displayName": "Quantum Security Posture Dashboard",
          "mosaicLayout": {
            "tiles": [
              {
                "width": 6,
                "height": 4,
                "widget": {
                  "title": "Post-Quantum Key Usage",
                  "scorecard": {
                    "timeSeriesQuery": {
                      "timeSeriesFilter": {
                        "filter": "resource.type=\"cloudkms_cryptokey\" AND resource.label.algorithm=~\"PQ_SIGN.*\"",
                        "aggregation": {
                          "alignmentPeriod": "300s",
                          "perSeriesAligner": "ALIGN_COUNT",
                          "crossSeriesReducer": "REDUCE_SUM"
                        }
                      }
                    },
                    "sparkChartView": {
                      "sparkChartType": "SPARK_LINE"
                    }
                  }
                }
              },
              {
                "width": 6,
                "height": 4,
                "widget": {
                  "title": "Quantum Vulnerability Alerts",
                  "scorecard": {
                    "timeSeriesQuery": {
                      "timeSeriesFilter": {
                        "filter": "resource.type=\"global\" AND log_name=\"projects/${var.project_id}/logs/quantum_vulnerability_scan\"",
                        "aggregation": {
                          "alignmentPeriod": "3600s",
                          "perSeriesAligner": "ALIGN_COUNT",
                          "crossSeriesReducer": "REDUCE_SUM"
                        }
                      }
                    },
                    "gaugeView": {
                      "lowerBound": 0,
                      "upperBound": 100
                    }
                  }
                }
              },
              {
                "width": 12,
                "height": 4,
                "widget": {
                  "title": "Cryptographic Asset Inventory",
                  "xyChart": {
                    "dataSets": [
                      {
                        "timeSeriesQuery": {
                          "timeSeriesFilter": {
                            "filter": "resource.type=\"cloudkms_cryptokey\"",
                            "aggregation": {
                              "alignmentPeriod": "3600s",
                              "perSeriesAligner": "ALIGN_COUNT",
                              "crossSeriesReducer": "REDUCE_SUM",
                              "groupByFields": ["resource.label.algorithm"]
                            }
                          }
                        },
                        "plotType": "STACKED_BAR"
                      }
                    ],
                    "timeshiftDuration": "0s",
                    "yAxis": {
                      "label": "Number of Keys",
                      "scale": "LINEAR"
                    }
                  }
                }
              }
            ]
          }
        }
    depends_on:
      - "required_apis"

  # Cloud Functions for automated quantum compliance reporting
  compliance_function_source:
    type: "google_storage_bucket_object"
    condition: "${var.enable_compliance_reporting}"
    properties:
      name: "compliance-function-source.zip"
      bucket: "${quantum_inventory_bucket.name}"
      source: "${path.module}/compliance-function.zip"
      content_type: "application/zip"
    depends_on:
      - "quantum_inventory_bucket"

  # Quantum compliance reporting Cloud Function
  quantum_compliance_function:
    type: "google_cloudfunctions2_function"
    condition: "${var.enable_compliance_reporting}"
    properties:
      name: "quantum-compliance-report"
      location: "${var.region}"
      project: "${var.project_id}"
      description: "Generate quarterly quantum readiness compliance reports"
      
      build_config:
        runtime: "python39"
        entry_point: "generate_quantum_compliance_report"
        source:
          storage_source:
            bucket: "${quantum_inventory_bucket.name}"
            object: "${compliance_function_source.name}"
      
      service_config:
        max_instance_count: 10
        min_instance_count: 0
        available_memory: "256M"
        timeout_seconds: 300
        environment_variables:
          PROJECT_ID: "${var.project_id}"
          ORGANIZATION_ID: "${var.organization_id}"
          QUANTUM_KEYRING: "${quantum_safe_keyring.name}"
        
        service_account_email: "${quantum_function_sa.email}"
      
      event_trigger:
        trigger_region: "${var.region}"
        event_type: "google.cloud.pubsub.topic.v1.messagePublished"
        pubsub_topic: "${crypto_asset_topic.id}"
        
      labels:
        purpose: "quantum-compliance"
        automation: "true"
    depends_on:
      - "compliance_function_source"
      - "quantum_function_sa"

  # Service account for quantum compliance functions
  quantum_function_sa:
    type: "google_service_account"
    condition: "${var.enable_compliance_reporting}"
    properties:
      account_id: "quantum-compliance-sa"
      project: "${var.project_id}"
      display_name: "Quantum Compliance Service Account"
      description: "Service account for quantum security compliance reporting and automation"

  # IAM bindings for quantum compliance service account
  quantum_function_sa_bindings:
    type: "google_project_iam_member"
    condition: "${var.enable_compliance_reporting}"
    for_each:
      - "roles/cloudasset.viewer"
      - "roles/securitycenter.findings.viewer"
      - "roles/cloudkms.viewer"
      - "roles/monitoring.metricWriter"
      - "roles/logging.logWriter"
    properties:
      project: "${var.project_id}"
      role: "${each.value}"
      member: "serviceAccount:${quantum_function_sa.email}"
    depends_on:
      - "quantum_function_sa"

  # Cloud Scheduler job for automated compliance reporting
  compliance_scheduler:
    type: "google_cloud_scheduler_job"
    condition: "${var.enable_compliance_reporting}"
    properties:
      name: "quantum-compliance-scheduler"
      project: "${var.project_id}"
      region: "${var.region}"
      description: "Quarterly quantum readiness compliance report generation"
      schedule: "0 9 1 */3 *"  # First day of quarter at 9 AM
      time_zone: "UTC"
      
      http_target:
        uri: "${quantum_compliance_function.service_config[0].uri}"
        http_method: "POST"
        headers:
          Content-Type: "application/json"
        body: |
          {
            "org_id": "${var.organization_id}",
            "project_id": "${var.project_id}",
            "report_type": "quarterly"
          }
        
        oauth_token:
          service_account_email: "${quantum_function_sa.email}"
          scope: "https://www.googleapis.com/auth/cloud-platform"
    depends_on:
      - "quantum_compliance_function"

  # Cloud Monitoring alert policy for quantum vulnerabilities
  quantum_vulnerability_alert:
    type: "google_monitoring_alert_policy"
    properties:
      project: "${var.project_id}"
      display_name: "Quantum Vulnerability Detection"
      documentation:
        content: |
          This alert triggers when quantum-vulnerable cryptographic implementations are detected.
          Immediate action is required to assess and remediate potential quantum security risks.
          
          Remediation steps:
          1. Review the detected vulnerable cryptographic usage
          2. Plan migration to post-quantum cryptography algorithms
          3. Implement quantum-safe alternatives using Cloud KMS PQC keys
          4. Update applications to use quantum-resistant signatures
        mime_type: "text/markdown"
      
      conditions:
        - display_name: "Weak encryption detected"
          condition_threshold:
            filter: >
              resource.type="global" AND 
              log_name="projects/${var.project_id}/logs/quantum_vulnerability_scan" AND
              jsonPayload.vulnerability_level="HIGH"
            comparison: "COMPARISON_GT"
            threshold_value: 0
            duration: "300s"
            aggregations:
              - alignment_period: "300s"
                per_series_aligner: "ALIGN_COUNT"
                cross_series_reducer: "REDUCE_SUM"
      
      alert_strategy:
        auto_close: "86400s"  # Auto-close after 24 hours
        
      notification_channels:
        - "${quantum_notification_channel.name}"
      
      enabled: true
    depends_on:
      - "quantum_notification_channel"

  # Notification channel for quantum security alerts
  quantum_notification_channel:
    type: "google_monitoring_notification_channel"
    properties:
      project: "${var.project_id}"
      display_name: "Quantum Security Alerts"
      type: "email"
      labels:
        email_address: "security-team@company.com"
      description: "Email notifications for quantum security vulnerabilities and compliance issues"

  # Organization-level IAM policy for quantum security governance
  quantum_security_policy:
    type: "google_organization_iam_policy"
    properties:
      org_id: "${var.organization_id}"
      policy_data: |
        {
          "bindings": [
            {
              "role": "roles/securitycenter.admin",
              "members": [
                "serviceAccount:${quantum_function_sa.email}"
              ],
              "condition": {
                "title": "Quantum Security Administration",
                "description": "Allow quantum security service account to manage Security Command Center",
                "expression": "request.time < timestamp('2025-12-31T23:59:59Z')"
              }
            }
          ]
        }
    depends_on:
      - "quantum_function_sa"

  # Resource tags for quantum security governance
  quantum_resource_tags:
    type: "google_tags_tag_key"
    properties:
      parent: "organizations/${var.organization_id}"
      short_name: "quantum-readiness-level"
      description: "Tag to indicate quantum readiness status of resources"
      purpose: "GCE_FIREWALL"
      purpose_data:
        network: "projects/${var.project_id}/global/networks/default"

  # Tag values for quantum readiness classification
  quantum_readiness_values:
    type: "google_tags_tag_value"
    for_each:
      - "quantum-safe"
      - "quantum-vulnerable" 
      - "under-review"
      - "migration-planned"
    properties:
      parent: "${quantum_resource_tags.id}"
      short_name: "${each.value}"
      description: "Quantum readiness status: ${each.value}"
    depends_on:
      - "quantum_resource_tags"

# Output values for verification and integration
outputs:
  # Project Information
  project_id:
    description: "Google Cloud Project ID for quantum security deployment"
    value: "${google_project.quantum_security_project.project_id}"
  
  organization_id:
    description: "Google Cloud Organization ID"
    value: "${var.organization_id}"
  
  # Cryptographic Infrastructure
  quantum_keyring_name:
    description: "Name of the quantum-safe KMS keyring"
    value: "${google_kms_key_ring.quantum_safe_keyring.name}"
  
  quantum_keyring_location:
    description: "Location of the quantum-safe KMS keyring"
    value: "${google_kms_key_ring.quantum_safe_keyring.location}"
  
  ml_dsa_key_name:
    description: "Name of the ML-DSA-65 post-quantum key"
    value: "${google_kms_crypto_key.quantum_key_ml_dsa.name}"
    condition: "${var.enable_post_quantum_keys}"
  
  slh_dsa_key_name:
    description: "Name of the SLH-DSA-SHA2-128S post-quantum key"
    value: "${google_kms_crypto_key.quantum_key_slh_dsa.name}"
    condition: "${var.enable_post_quantum_keys}"
  
  # Monitoring and Compliance
  asset_feed_name:
    description: "Name of the Cloud Asset Inventory feed for cryptographic monitoring"
    value: "${google_cloud_asset_organization_feed.quantum_asset_feed.feed_id}"
  
  monitoring_dashboard_url:
    description: "URL to the quantum security monitoring dashboard"
    value: "https://console.cloud.google.com/monitoring/dashboards/custom/${google_monitoring_dashboard.quantum_monitoring_dashboard.id}?project=${var.project_id}"
  
  compliance_function_name:
    description: "Name of the quantum compliance reporting function"
    value: "${google_cloudfunctions2_function.quantum_compliance_function.name}"
    condition: "${var.enable_compliance_reporting}"
  
  # Storage and Notifications
  inventory_bucket_name:
    description: "Name of the Cloud Storage bucket for quantum inventory and reports"
    value: "${google_storage_bucket.quantum_inventory_bucket.name}"
  
  crypto_asset_topic_name:
    description: "Name of the Pub/Sub topic for cryptographic asset notifications"
    value: "${google_pubsub_topic.crypto_asset_topic.name}"
  
  # Security Configuration
  notification_channel_name:
    description: "Name of the notification channel for quantum security alerts"
    value: "${google_monitoring_notification_channel.quantum_notification_channel.name}"
  
  alert_policy_name:
    description: "Name of the alert policy for quantum vulnerability detection"
    value: "${google_monitoring_alert_policy.quantum_vulnerability_alert.name}"
  
  # Implementation Guidance
  next_steps:
    description: "Next steps for quantum security implementation"
    value: |
      1. Verify Security Command Center Enterprise is enabled for your organization
      2. Configure notification email address in the quantum_notification_channel resource
      3. Test post-quantum key functionality with sample applications
      4. Review and customize the compliance reporting schedule
      5. Implement quantum-safe signatures in your applications using the created PQC keys
      6. Monitor the quantum security dashboard for compliance metrics
      7. Plan migration timeline for quantum-vulnerable cryptographic implementations