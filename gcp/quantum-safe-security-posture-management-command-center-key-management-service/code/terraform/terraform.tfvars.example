# ============================================================================
# Terraform Variables Example for Quantum-Safe Security Posture Management
# ============================================================================
# Copy this file to terraform.tfvars and customize the values for your environment.
# This example provides recommended configurations for a production deployment.

# ============================================================================
# Required Variables - Must be configured before deployment
# ============================================================================

# GCP Organization ID (Required)
# Find your organization ID: gcloud organizations list
organization_id = "123456789012"

# Billing Account ID (Required)
# Find your billing account: gcloud billing accounts list
billing_account = "123ABC-456DEF-789GHI"

# Notification email for security alerts (Required)
notification_email = "security-team@your-company.com"

# ============================================================================
# Project Configuration
# ============================================================================

# Project ID for quantum security infrastructure
# Must be globally unique across all Google Cloud projects
project_id = "quantum-security-prod-001"

# Primary region for resource deployment
# Choose a region that supports post-quantum cryptography features
# Recommended: us-central1, us-east1, europe-west1, asia-east1
region = "us-central1"

# Primary zone within the selected region
zone = "us-central1-a"

# ============================================================================
# KMS and Post-Quantum Cryptography Configuration
# ============================================================================

# Name for the quantum-safe KMS keyring
kms_keyring_name = "quantum-safe-keyring-prod"

# Base name for cryptographic keys (algorithm suffixes will be added)
kms_key_name = "quantum-safe-key-prod"

# Automatic key rotation period (30 days recommended for high security)
# Format: seconds followed by 's' (e.g., "2592000s" = 30 days)
kms_key_rotation_period = "2592000s"

# Post-quantum cryptography algorithms
# Uses NIST-approved algorithms for quantum resistance
pq_algorithms = {
  ml_dsa  = "PQ_SIGN_ML_DSA_65"         # Module-Lattice-Based Digital Signature
  slh_dsa = "PQ_SIGN_SLH_DSA_SHA2_128S" # Stateless Hash-Based Digital Signature
}

# ============================================================================
# Security and Compliance Configuration
# ============================================================================

# Cron schedule for automated compliance reports
# Default: 9 AM UTC on the 1st day of every quarter
compliance_schedule = "0 9 1 */3 *"

# Frequency for security posture assessments (hours)
security_posture_assessment_frequency = 24

# Asset types to track for quantum vulnerability assessment
asset_types_to_track = [
  "cloudkms.googleapis.com/CryptoKey",
  "cloudkms.googleapis.com/KeyRing",
  "compute.googleapis.com/Disk",
  "compute.googleapis.com/Instance",
  "storage.googleapis.com/Bucket",
  "sql.googleapis.com/DatabaseInstance",
  "container.googleapis.com/Cluster"
]

# Asset inventory configuration
asset_feed_content_type = "RESOURCE"
asset_retention_days    = 2555  # ~7 years for compliance

# ============================================================================
# Organization Policy Enforcement
# ============================================================================

# Security policies to enforce across the organization
enforce_os_login                    = true
disable_service_account_keys        = true
enforce_uniform_bucket_level_access = true
restrict_vpc_peering               = true

# ============================================================================
# Monitoring and Alerting Configuration
# ============================================================================

# Monitoring data retention period
monitoring_retention_days = 400

# Alert thresholds
alert_threshold_quantum_vulnerabilities = 0  # Alert on any vulnerabilities
key_rotation_alert_days                = 35  # Alert if rotation is 35+ days overdue

# Security Command Center notification settings
scc_notification_config = {
  enable_high_severity_alerts   = true
  enable_medium_severity_alerts = true
  enable_finding_updates        = true
  filter_quantum_related_only   = false
}

# ============================================================================
# Cloud Functions Configuration
# ============================================================================

# Memory allocation and performance settings
function_memory_mb      = 512   # Higher memory for better performance
function_timeout_seconds = 540  # Maximum timeout for complex reports
function_runtime        = "python39"

# ============================================================================
# Storage Configuration
# ============================================================================

# Storage settings for compliance data and reports
storage_class              = "STANDARD"
enable_bucket_versioning   = true
bucket_lifecycle_age_days  = 90  # Move to colder storage after 90 days

# ============================================================================
# Cost Management
# ============================================================================

# Monthly budget for quantum security infrastructure
budget_amount_usd = 1500

# Budget alert thresholds (as percentages)
budget_alert_thresholds = [0.5, 0.75, 0.9, 1.0]

# ============================================================================
# Resource Labeling and Organization
# ============================================================================

# Common labels for all resources
resource_labels = {
  environment       = "production"
  project          = "quantum-security"
  managed_by       = "terraform"
  security_level   = "high"
  compliance_scope = "quantum-safe"
  cost_center      = "security"
  team             = "security-engineering"
  data_classification = "confidential"
}

# ============================================================================
# Networking Configuration
# ============================================================================

# CIDR blocks allowed for ingress traffic
allowed_ingress_cidr_blocks = [
  "10.0.0.0/8",      # Private networks
  "172.16.0.0/12",   # Private networks
  "192.168.0.0/16"   # Private networks
]

# Enable Private Google Access for enhanced security
enable_private_google_access = true

# ============================================================================
# Development and Testing Options
# ============================================================================

# Production safety settings
enable_deletion_protection = true  # Prevent accidental resource deletion
create_test_resources     = false  # Don't create test resources in production
enable_debug_logging      = false  # Disable verbose logging in production

# ============================================================================
# Advanced Configuration Examples
# ============================================================================

# Example: Custom compliance schedule for weekly reports
# compliance_schedule = "0 9 * * 1"  # Every Monday at 9 AM

# Example: More frequent key rotation for high-security environments
# kms_key_rotation_period = "604800s"  # 7 days

# Example: Extended monitoring retention for compliance
# monitoring_retention_days = 2555  # ~7 years

# Example: Custom asset types for specialized environments
# asset_types_to_track = [
#   "cloudkms.googleapis.com/CryptoKey",
#   "cloudkms.googleapis.com/KeyRing",
#   "compute.googleapis.com/Disk",
#   "bigquery.googleapis.com/Dataset",
#   "cloudsql.googleapis.com/Instance",
#   "dataflow.googleapis.com/Job"
# ]

# Example: Regional configuration for Europe
# region = "europe-west1"
# zone   = "europe-west1-b"

# Example: High-performance Cloud Functions configuration
# function_memory_mb = 1024
# function_timeout_seconds = 540
# function_runtime = "python311"

# ============================================================================
# Security Notes
# ============================================================================

# 1. Store sensitive values like organization_id and billing_account
#    in environment variables or secret management systems
#
# 2. Use least-privilege IAM roles for Terraform service accounts
#
# 3. Enable audit logging for all Terraform operations
#
# 4. Regularly rotate any credentials used for deployment
#
# 5. Review and approve all changes through proper change management
#
# 6. Test configurations in non-production environments first
#
# 7. Monitor costs and resource usage continuously
#
# 8. Keep Terraform state files secure and backed up
#
# 9. Use remote state backends for team collaboration
#
# 10. Document any customizations for future maintenance

# ============================================================================
# Deployment Instructions
# ============================================================================

# 1. Copy this file to terraform.tfvars:
#    cp terraform.tfvars.example terraform.tfvars
#
# 2. Edit terraform.tfvars with your specific values
#
# 3. Initialize Terraform:
#    terraform init
#
# 4. Review the deployment plan:
#    terraform plan
#
# 5. Apply the configuration:
#    terraform apply
#
# 6. Verify the deployment using the output verification commands