# =============================================================================
# Terraform Variables Configuration Example
# Edge-to-Cloud Video Analytics with Media CDN and Vertex AI
# =============================================================================

# Project Configuration (REQUIRED)
project_id = "your-gcp-project-id"           # Replace with your actual GCP project ID
region     = "us-central1"                   # Google Cloud region for resources
zone       = "us-central1-a"                 # Zone within the region

# Storage Configuration
bucket_prefix                   = "video-analytics"     # Prefix for bucket names (must be globally unique)
storage_class                  = "STANDARD"             # Storage class: STANDARD, NEARLINE, COLDLINE, ARCHIVE
enable_versioning              = true                   # Enable object versioning
lifecycle_management           = true                   # Enable lifecycle policies
enable_public_access_prevention = true                  # Prevent public access
enable_uniform_bucket_access   = true                   # Uniform bucket-level access

# Cloud Functions Configuration
function_runtime    = "python39"                        # Runtime: python39, python310, python311, nodejs16, nodejs18, nodejs20
function_memory     = "1Gi"                             # Memory: 128Mi, 256Mi, 512Mi, 1Gi, 2Gi, 4Gi, 8Gi, 16Gi, 32Gi
function_timeout    = 540                               # Timeout in seconds (1-540)
max_instances       = 10                                # Maximum function instances
min_instances       = 0                                 # Minimum function instances

# Vertex AI Configuration
vertex_ai_region     = "us-central1"                    # Vertex AI region (may differ from main region)
enable_automl        = false                            # Enable AutoML capabilities
video_analysis_features = [                             # Video analysis features to enable
  "OBJECT_TRACKING",
  "LABEL_DETECTION",
  "SHOT_CHANGE_DETECTION",
  "TEXT_DETECTION"
]

# Media CDN Configuration
enable_cdn          = true                              # Enable Media CDN
cdn_domain_name     = "video-cdn.example.com"          # Custom domain for CDN (replace with your domain)
cdn_cache_ttl       = 3600                             # Default cache TTL in seconds
cdn_max_ttl         = 86400                            # Maximum cache TTL in seconds
enable_compression  = true                             # Enable automatic compression

# Security Configuration
allowed_cors_origins = ["*"]                           # CORS origins for storage buckets
kms_key_id          = ""                               # KMS key for encryption (optional)

# Monitoring and Alerting
enable_monitoring           = true                      # Enable Cloud Monitoring
notification_email          = "alerts@example.com"     # Email for alerts (replace with your email)
storage_alert_threshold_gb  = 100                      # Storage usage alert threshold in GB
function_error_threshold    = 5                        # Function error count for alerts

# Environment and Tagging
environment = "dev"                                     # Environment: dev, staging, prod
labels = {                                              # Additional labels for resources
  team        = "data-platform"
  cost-center = "engineering"
  project     = "video-analytics"
}
cost_center = "engineering"                             # Cost center for billing
team        = "data-platform"                          # Team responsible

# Advanced Configuration
enable_private_google_access = true                     # Enable Private Google Access
network_tier                = "PREMIUM"                # Network tier: PREMIUM, STANDARD
enable_audit_logs           = true                     # Enable audit logging
log_retention_days          = 30                       # Log retention period in days

# Performance Configuration
video_processing_concurrency = 5                       # Max concurrent video processing
enable_preemptible_instances = false                   # Use preemptible instances
auto_scaling_target_cpu      = 0.7                     # Auto-scaling CPU target (0.0-1.0)

# Data Processing Configuration
batch_size                 = 10                        # Batch size for processing
enable_streaming_analytics = false                     # Enable streaming analytics
analytics_output_format    = "json"                    # Output format: json, csv, parquet, avro

# =============================================================================
# Configuration Notes
# =============================================================================

# 1. Project Setup:
#    - Ensure the project_id exists and billing is enabled
#    - Required APIs will be enabled automatically
#    - Service account permissions will be configured

# 2. Storage Configuration:
#    - bucket_prefix must be globally unique across all GCP projects
#    - Consider using your organization name or project identifier
#    - Storage classes affect cost and access patterns

# 3. CDN Configuration:
#    - cdn_domain_name should be a domain you own
#    - Configure DNS A record pointing to the CDN IP after deployment
#    - SSL certificate will be automatically provisioned

# 4. Security:
#    - Use least privilege principles
#    - Consider using customer-managed encryption keys (CMEK)
#    - Review IAM policies regularly

# 5. Cost Optimization:
#    - Adjust storage classes based on access patterns
#    - Use lifecycle policies for cost management
#    - Monitor usage and adjust instance limits

# 6. Monitoring:
#    - Configure notification_email for alerts
#    - Adjust thresholds based on expected usage
#    - Review logs and metrics regularly

# =============================================================================
# Deployment Commands
# =============================================================================

# 1. Initialize Terraform:
#    terraform init

# 2. Validate configuration:
#    terraform validate

# 3. Plan deployment:
#    terraform plan -var-file="terraform.tfvars"

# 4. Apply configuration:
#    terraform apply -var-file="terraform.tfvars"

# 5. Destroy infrastructure (when needed):
#    terraform destroy -var-file="terraform.tfvars"

# =============================================================================
# Post-Deployment Configuration
# =============================================================================

# 1. DNS Configuration:
#    - Point your custom domain to the CDN IP address
#    - Wait for SSL certificate provisioning (can take up to 60 minutes)

# 2. Test Video Upload:
#    gsutil cp test-video.mp4 gs://your-video-content-bucket/videos/

# 3. Monitor Processing:
#    - Check Cloud Functions logs
#    - Verify analytics results in the results bucket
#    - Test CDN delivery

# 4. Security Review:
#    - Verify IAM permissions
#    - Test access controls
#    - Review audit logs