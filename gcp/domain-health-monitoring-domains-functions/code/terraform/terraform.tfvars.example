# Example Terraform variables for GCP Domain Health Monitoring
# Copy this file to terraform.tfvars and customize the values for your environment

# ==============================================================================
# REQUIRED VARIABLES
# ==============================================================================

# Your Google Cloud Project ID
project_id = "your-gcp-project-id"

# ==============================================================================
# REGIONAL CONFIGURATION
# ==============================================================================

# Primary region for resource deployment
region = "us-central1"

# Zone for zonal resources (should be in the same region)
zone = "us-central1-a"

# ==============================================================================
# DOMAIN MONITORING CONFIGURATION
# ==============================================================================

# List of domains to monitor for health checks
# Add all domains you want to monitor for SSL, DNS, and HTTP status
domains_to_monitor = [
  "example.com",
  "yourdomain.com",
  "api.yourdomain.com",
  "app.yourdomain.com"
]

# Cron expression for monitoring frequency
# Examples:
#   "0 */6 * * *"   = Every 6 hours
#   "0 */12 * * *"  = Every 12 hours  
#   "0 2 * * *"     = Daily at 2 AM UTC
#   "0 */2 * * *"   = Every 2 hours
monitoring_schedule = "0 */6 * * *"

# Number of days before SSL certificate expiry to trigger warnings
# Common values: 7, 14, 30, 60, 90
ssl_expiry_warning_days = 30

# ==============================================================================
# CLOUD FUNCTION CONFIGURATION
# ==============================================================================

# Function timeout in seconds (60-540)
function_timeout = 300

# Function memory allocation
# Options: "128Mi", "256Mi", "512Mi", "1Gi", "2Gi", "4Gi", "8Gi"
function_memory = "512Mi"

# Enable automatic scheduling of health checks
enable_cloud_scheduler = true

# ==============================================================================
# NOTIFICATION CONFIGURATION
# ==============================================================================

# Email address for alert notifications
# Leave empty ("") to disable email notifications
notification_email = "admin@yourdomain.com"

# ==============================================================================
# STORAGE CONFIGURATION
# ==============================================================================

# Storage class for monitoring data
# Options: "STANDARD", "NEARLINE", "COLDLINE", "ARCHIVE"
# STANDARD: Best for frequently accessed data
# NEARLINE: Best for data accessed less than once per month
# COLDLINE: Best for data accessed less than once per quarter
# ARCHIVE: Best for data accessed less than once per year
storage_class = "STANDARD"

# Number of days to retain monitoring results (1-3650)
retention_days = 90

# ==============================================================================
# NETWORK CONFIGURATION (OPTIONAL)
# ==============================================================================

# Deploy Cloud Function in a private network
# Set to true if you need VPC access or want to restrict internet access
enable_private_network = false

# VPC network name (only used if enable_private_network = true)
vpc_network_name = "default"

# VPC subnet name (only used if enable_private_network = true)
vpc_subnet_name = "default"

# ==============================================================================
# RESOURCE LABELING
# ==============================================================================

# Labels to apply to all resources for organization and cost tracking
labels = {
  environment = "production"
  team        = "platform"
  project     = "domain-monitoring"
  owner       = "devops-team"
  cost-center = "infrastructure"
  managed-by  = "terraform"
}

# ==============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# ==============================================================================

# Production Environment Example:
# project_id = "company-prod-monitoring"
# region = "us-central1"
# domains_to_monitor = [
#   "company.com",
#   "api.company.com", 
#   "app.company.com",
#   "status.company.com"
# ]
# monitoring_schedule = "0 */2 * * *"  # Every 2 hours
# ssl_expiry_warning_days = 30
# notification_email = "ops-team@company.com"
# storage_class = "STANDARD"
# retention_days = 365
# labels = {
#   environment = "production"
#   team = "platform"
#   criticality = "high"
# }

# Development Environment Example:
# project_id = "company-dev-monitoring" 
# region = "us-west1"
# domains_to_monitor = [
#   "dev.company.com",
#   "staging.company.com"
# ]
# monitoring_schedule = "0 */12 * * *"  # Every 12 hours
# ssl_expiry_warning_days = 14
# notification_email = "dev-team@company.com"
# storage_class = "NEARLINE"
# retention_days = 30
# labels = {
#   environment = "development"
#   team = "engineering"
#   criticality = "low"
# }

# Multi-Region Example:
# project_id = "global-domain-monitoring"
# region = "us-central1"  # Primary region
# domains_to_monitor = [
#   "global.company.com",
#   "eu.company.com",
#   "asia.company.com",
#   "api-v1.company.com",
#   "api-v2.company.com"
# ]
# monitoring_schedule = "0 * * * *"  # Every hour
# ssl_expiry_warning_days = 60
# notification_email = "global-ops@company.com"
# function_memory = "1Gi"  # More memory for processing multiple domains
# function_timeout = 540   # Maximum timeout for comprehensive checks
# storage_class = "STANDARD"
# retention_days = 180
# labels = {
#   environment = "production"
#   scope = "global"
#   team = "global-ops"
#   criticality = "critical"
# }