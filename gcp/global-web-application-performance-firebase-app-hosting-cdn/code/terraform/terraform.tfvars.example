# Terraform Variables Example for Global Web Application Performance
# 
# Copy this file to terraform.tfvars and customize the values for your deployment.
# Remove the .example extension and update with your specific configuration.

# =============================================================================
# REQUIRED VARIABLES
# =============================================================================

# Google Cloud project ID where resources will be created
project_id = "your-gcp-project-id"

# Primary region for resource deployment
region = "us-central1"

# Primary zone for resource deployment
zone = "us-central1-a"

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================

# Environment name for resource labeling (dev, staging, prod)
environment = "dev"

# Prefix for resource names (must start with letter, lowercase, hyphens allowed)
resource_prefix = "webapp"

# Optional suffix for resource names (auto-generated if empty)
# resource_suffix = "v1"

# =============================================================================
# FIREBASE APP HOSTING CONFIGURATION
# =============================================================================

# Unique identifier for Firebase App Hosting backend
app_hosting_backend_id = "web-app-backend"

# GitHub repository configuration for CI/CD integration
github_repository_owner = "your-github-username"
github_repository_name = "your-web-app-repo"
github_branch = "main"

# Root directory in repository containing web application
app_root_directory = "/"

# =============================================================================
# DOMAIN AND SSL CONFIGURATION
# =============================================================================

# Primary domain name for the web application (leave empty for IP-only access)
domain_name = "example.com"

# Additional domain names for SSL certificate
additional_domains = [
  "www.example.com",
  "app.example.com"
]

# Name for the managed SSL certificate
ssl_certificate_name = "web-app-ssl-cert"

# =============================================================================
# CDN CONFIGURATION
# =============================================================================

# Enable Cloud CDN for global content distribution
enable_cdn = true

# CDN cache mode (CACHE_ALL_STATIC, USE_ORIGIN_HEADERS, FORCE_CACHE_ALL)
cdn_cache_mode = "CACHE_ALL_STATIC"

# Default Time-To-Live for CDN cache in seconds (1 hour)
cdn_default_ttl = 3600

# Maximum Time-To-Live for CDN cache in seconds (24 hours)
cdn_max_ttl = 86400

# Client-side Time-To-Live for CDN cache in seconds (1 hour)
cdn_client_ttl = 3600

# =============================================================================
# CLOUD STORAGE CONFIGURATION
# =============================================================================

# Name for Cloud Storage bucket (auto-generated if empty)
# storage_bucket_name = "my-web-assets-bucket"

# Location for Cloud Storage bucket
storage_location = "US"

# Storage class for the bucket
storage_class = "STANDARD"

# =============================================================================
# CLOUD FUNCTIONS CONFIGURATION
# =============================================================================

# Memory allocation for performance optimization function
function_memory = "256M"

# Timeout for Cloud Function in seconds
function_timeout = 60

# Runtime for Cloud Function
function_runtime = "python312"

# =============================================================================
# MONITORING AND ALERTING CONFIGURATION
# =============================================================================

# Enable Cloud Monitoring and alerting
enable_monitoring = true

# Email address for monitoring alerts
notification_email = "admin@example.com"

# URL path for uptime monitoring checks
uptime_check_path = "/"

# Latency threshold in milliseconds for triggering alerts
alert_threshold_latency_ms = 1000

# Error rate threshold (0.0-1.0) for triggering alerts
alert_threshold_error_rate = 0.05

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Network tier for global load balancer (PREMIUM or STANDARD)
network_tier = "PREMIUM"

# =============================================================================
# API CONFIGURATION
# =============================================================================

# Google Cloud APIs to enable (uncomment to customize)
# enable_apis = [
#   "compute.googleapis.com",
#   "firebase.googleapis.com",
#   "firebasehosting.googleapis.com",
#   "cloudbuild.googleapis.com",
#   "run.googleapis.com",
#   "monitoring.googleapis.com",
#   "cloudfunctions.googleapis.com",
#   "storage.googleapis.com",
#   "logging.googleapis.com"
# ]

# =============================================================================
# LABELS AND TAGS
# =============================================================================

# Additional labels to apply to resources
labels = {
  owner       = "web-team"
  cost-center = "engineering"
  application = "web-app"
}

# Network tags to apply to applicable resources
tags = ["web-app", "firebase", "cdn", "production"]

# =============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# =============================================================================

# Development Environment Example:
# environment = "dev"
# enable_monitoring = false
# notification_email = ""
# cdn_default_ttl = 300  # 5 minutes for faster development
# function_memory = "128M"
# network_tier = "STANDARD"

# Staging Environment Example:
# environment = "staging"
# enable_monitoring = true
# notification_email = "staging-alerts@example.com"
# cdn_default_ttl = 1800  # 30 minutes
# function_memory = "256M"
# network_tier = "PREMIUM"

# Production Environment Example:
# environment = "prod"
# enable_monitoring = true
# notification_email = "production-alerts@example.com"
# cdn_default_ttl = 3600  # 1 hour
# cdn_max_ttl = 86400     # 24 hours
# function_memory = "512M"
# network_tier = "PREMIUM"
# alert_threshold_latency_ms = 500
# alert_threshold_error_rate = 0.01

# =============================================================================
# COST OPTIMIZATION SETTINGS
# =============================================================================

# For cost optimization in development:
# storage_location = "us-central1"  # Single region instead of multi-region
# storage_class = "NEARLINE"        # Cheaper storage class for dev
# function_memory = "128M"          # Minimum memory allocation
# enable_monitoring = false         # Disable monitoring to reduce costs

# For high performance in production:
# storage_location = "US"           # Multi-region for global performance
# storage_class = "STANDARD"        # Standard storage for best performance
# function_memory = "512M"          # More memory for better performance
# network_tier = "PREMIUM"          # Premium network tier for lowest latency