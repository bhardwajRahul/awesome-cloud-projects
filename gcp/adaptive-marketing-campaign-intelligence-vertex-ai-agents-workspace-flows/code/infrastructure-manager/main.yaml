# Google Cloud Infrastructure Manager Configuration
# Adaptive Marketing Campaign Intelligence with Vertex AI Agents and Google Workspace Flows
# This configuration deploys the complete infrastructure needed for an AI-powered marketing automation system

apiVersion: 'krm.gcp.upbound.io/v1alpha1'
kind: 'ResourceManagerConfig'
metadata:
  name: marketing-intelligence-config
  namespace: 'infrastructure-manager'
spec:
  # Infrastructure variables for customization
  variables:
    project_id:
      description: "Google Cloud Project ID for the marketing intelligence system"
      type: "string"
      required: true
    
    region:
      description: "Primary region for resource deployment"
      type: "string"
      default: "us-central1"
    
    zone:
      description: "Primary zone for compute resources"
      type: "string"
      default: "us-central1-a"
    
    environment:
      description: "Environment name (dev, staging, prod)"
      type: "string"
      default: "dev"
    
    random_suffix:
      description: "Random suffix for unique resource naming"
      type: "string"
      default: "abc123"

  # Resource configuration for marketing intelligence infrastructure
  resources:
    
    # Enable required Google Cloud APIs
    - name: enable-apis
      type: 'projects.googleapis.com/Service'
      properties:
        parent: $(ref.project_id.outputs.project_id)
        services:
          - name: 'aiplatform.googleapis.com'
            title: 'Vertex AI Platform API'
          - name: 'bigquery.googleapis.com' 
            title: 'BigQuery API'
          - name: 'storage.googleapis.com'
            title: 'Cloud Storage API'
          - name: 'gmail.googleapis.com'
            title: 'Gmail API'
          - name: 'sheets.googleapis.com'
            title: 'Google Sheets API'
          - name: 'docs.googleapis.com'
            title: 'Google Docs API'
          - name: 'calendar.googleapis.com'
            title: 'Google Calendar API'
          - name: 'cloudbuild.googleapis.com'
            title: 'Cloud Build API'
          - name: 'secretmanager.googleapis.com'
            title: 'Secret Manager API'
      metadata:
        dependsOn:
          - 'project_id'

    # BigQuery Dataset for Marketing Intelligence Data
    - name: marketing-dataset
      type: 'bigquery.cnrm.cloud.google.com/v1beta1/BigQueryDataset'
      properties:
        datasetId: 'marketing_data_$(var.random_suffix)'
        friendlyName: 'Marketing Campaign Intelligence Dataset'
        description: 'Central data warehouse for marketing campaign performance, customer interactions, and AI-generated insights'
        location: $(var.region)
        defaultTableExpirationMs: 31536000000  # 1 year
        access:
          - role: 'OWNER'
            userByEmail: 'marketing-ai-sa@$(var.project_id).iam.gserviceaccount.com'
          - role: 'READER'
            userByEmail: 'marketing-team@$(var.project_id).iam.gserviceaccount.com'
          - role: 'WRITER'
            userByEmail: 'vertex-ai-agents@$(var.project_id).iam.gserviceaccount.com'
        labels:
          environment: $(var.environment)
          purpose: 'marketing-intelligence'
          team: 'marketing-automation'
      metadata:
        dependsOn:
          - 'enable-apis'

    # Campaign Performance Table Schema
    - name: campaign-performance-table
      type: 'bigquery.cnrm.cloud.google.com/v1beta1/BigQueryTable'
      properties:
        datasetId: $(ref.marketing-dataset.outputs.datasetId)
        tableId: 'campaign_performance'
        friendlyName: 'Campaign Performance Metrics'
        description: 'Table storing comprehensive campaign performance data across all marketing channels'
        schema: |
          [
            {"name": "campaign_id", "type": "STRING", "mode": "REQUIRED", "description": "Unique identifier for the marketing campaign"},
            {"name": "campaign_name", "type": "STRING", "mode": "REQUIRED", "description": "Human-readable campaign name"},
            {"name": "channel", "type": "STRING", "mode": "REQUIRED", "description": "Marketing channel (email, social, search, display)"},
            {"name": "start_date", "type": "DATE", "mode": "REQUIRED", "description": "Campaign start date"},
            {"name": "end_date", "type": "DATE", "mode": "NULLABLE", "description": "Campaign end date"},
            {"name": "impressions", "type": "INTEGER", "mode": "NULLABLE", "description": "Total number of impressions"},
            {"name": "clicks", "type": "INTEGER", "mode": "NULLABLE", "description": "Total number of clicks"},
            {"name": "conversions", "type": "INTEGER", "mode": "NULLABLE", "description": "Total number of conversions"},
            {"name": "spend", "type": "FLOAT", "mode": "NULLABLE", "description": "Total campaign spend in USD"},
            {"name": "revenue", "type": "FLOAT", "mode": "NULLABLE", "description": "Total campaign revenue in USD"},
            {"name": "ctr", "type": "FLOAT", "mode": "NULLABLE", "description": "Click-through rate percentage"},
            {"name": "conversion_rate", "type": "FLOAT", "mode": "NULLABLE", "description": "Conversion rate percentage"},
            {"name": "roas", "type": "FLOAT", "mode": "NULLABLE", "description": "Return on ad spend ratio"},
            {"name": "audience_segment", "type": "STRING", "mode": "NULLABLE", "description": "Target audience segment"},
            {"name": "geo_location", "type": "STRING", "mode": "NULLABLE", "description": "Geographic targeting location"},
            {"name": "device_type", "type": "STRING", "mode": "NULLABLE", "description": "Device type targeting"},
            {"name": "timestamp", "type": "TIMESTAMP", "mode": "REQUIRED", "description": "Record creation timestamp"}
          ]
        labels:
          table_type: 'campaign-metrics'
          data_classification: 'internal'
      metadata:
        dependsOn:
          - 'marketing-dataset'

    # Customer Interactions Table Schema
    - name: customer-interactions-table
      type: 'bigquery.cnrm.cloud.google.com/v1beta1/BigQueryTable'
      properties:
        datasetId: $(ref.marketing-dataset.outputs.datasetId)
        tableId: 'customer_interactions'
        friendlyName: 'Customer Interaction Events'
        description: 'Table storing detailed customer interaction events and engagement metrics'
        schema: |
          [
            {"name": "customer_id", "type": "STRING", "mode": "REQUIRED", "description": "Unique customer identifier"},
            {"name": "interaction_type", "type": "STRING", "mode": "REQUIRED", "description": "Type of interaction (email_open, click, purchase, etc.)"},
            {"name": "interaction_timestamp", "type": "TIMESTAMP", "mode": "REQUIRED", "description": "When the interaction occurred"},
            {"name": "campaign_id", "type": "STRING", "mode": "NULLABLE", "description": "Associated campaign identifier"},
            {"name": "channel", "type": "STRING", "mode": "NULLABLE", "description": "Channel where interaction occurred"},
            {"name": "engagement_score", "type": "FLOAT", "mode": "NULLABLE", "description": "AI-calculated engagement score (0-100)"},
            {"name": "sentiment_score", "type": "FLOAT", "mode": "NULLABLE", "description": "Sentiment analysis score (-1 to 1)"},
            {"name": "conversion_value", "type": "FLOAT", "mode": "NULLABLE", "description": "Value of conversion if applicable"},
            {"name": "customer_lifetime_value", "type": "FLOAT", "mode": "NULLABLE", "description": "Predicted customer lifetime value"},
            {"name": "demographic_segment", "type": "STRING", "mode": "NULLABLE", "description": "Customer demographic segment"},
            {"name": "behavioral_tags", "type": "STRING", "mode": "NULLABLE", "description": "JSON array of behavioral tags"}
          ]
        labels:
          table_type: 'customer-data'
          data_classification: 'sensitive'
      metadata:
        dependsOn:
          - 'marketing-dataset'

    # AI Insights and Recommendations Table
    - name: ai-insights-table
      type: 'bigquery.cnrm.cloud.google.com/v1beta1/BigQueryTable'
      properties:
        datasetId: $(ref.marketing-dataset.outputs.datasetId)
        tableId: 'ai_insights'
        friendlyName: 'AI-Generated Marketing Insights'
        description: 'Table storing AI-generated insights, recommendations, and predictions'
        schema: |
          [
            {"name": "insight_id", "type": "STRING", "mode": "REQUIRED", "description": "Unique identifier for the insight"},
            {"name": "generated_timestamp", "type": "TIMESTAMP", "mode": "REQUIRED", "description": "When the insight was generated"},
            {"name": "insight_type", "type": "STRING", "mode": "REQUIRED", "description": "Type of insight (performance_anomaly, optimization_opportunity, prediction)"},
            {"name": "campaign_id", "type": "STRING", "mode": "NULLABLE", "description": "Associated campaign if applicable"},
            {"name": "recommendation", "type": "STRING", "mode": "REQUIRED", "description": "Detailed recommendation text"},
            {"name": "confidence_score", "type": "FLOAT", "mode": "REQUIRED", "description": "AI confidence in recommendation (0-1)"},
            {"name": "predicted_impact", "type": "FLOAT", "mode": "NULLABLE", "description": "Predicted impact metric"},
            {"name": "action_required", "type": "BOOLEAN", "mode": "REQUIRED", "description": "Whether immediate action is required"},
            {"name": "priority_level", "type": "STRING", "mode": "REQUIRED", "description": "Priority level (low, medium, high, critical)"},
            {"name": "execution_status", "type": "STRING", "mode": "NULLABLE", "description": "Status of recommendation execution"}
          ]
        labels:
          table_type: 'ai-insights'
          data_classification: 'internal'
      metadata:
        dependsOn:
          - 'marketing-dataset'

    # Cloud Storage Bucket for Data Processing and Model Assets
    - name: marketing-intelligence-bucket
      type: 'storage.cnrm.cloud.google.com/v1beta1/StorageBucket'
      properties:
        name: 'marketing-intelligence-$(var.project_id)-$(var.random_suffix)'
        location: $(var.region)
        storageClass: 'STANDARD'
        uniformBucketLevelAccess: true
        versioning:
          enabled: true
        lifecycle:
          rule:
            - action:
                type: 'SetStorageClass'
                storageClass: 'NEARLINE'
              condition:
                age: 30
            - action:
                type: 'SetStorageClass'
                storageClass: 'COLDLINE'
              condition:
                age: 90
            - action:
                type: 'Delete'
              condition:
                age: 365
        labels:
          environment: $(var.environment)
          purpose: 'marketing-intelligence'
          team: 'marketing-automation'
      metadata:
        dependsOn:
          - 'enable-apis'

    # Service Account for Marketing AI Operations
    - name: marketing-ai-service-account
      type: 'iam.cnrm.cloud.google.com/v1beta1/IAMServiceAccount'
      properties:
        accountId: 'marketing-ai-sa'
        displayName: 'Marketing AI Service Account'
        description: 'Service account for Vertex AI agents and marketing automation workflows'
        project: $(var.project_id)
      metadata:
        dependsOn:
          - 'enable-apis'

    # Service Account for Vertex AI Agents
    - name: vertex-ai-agents-service-account
      type: 'iam.cnrm.cloud.google.com/v1beta1/IAMServiceAccount'
      properties:
        accountId: 'vertex-ai-agents'
        displayName: 'Vertex AI Agents Service Account'
        description: 'Service account specifically for Vertex AI Agent operations'
        project: $(var.project_id)
      metadata:
        dependsOn:
          - 'enable-apis'

    # Service Account for Marketing Team Access
    - name: marketing-team-service-account
      type: 'iam.cnrm.cloud.google.com/v1beta1/IAMServiceAccount'
      properties:
        accountId: 'marketing-team'
        displayName: 'Marketing Team Service Account'
        description: 'Service account for marketing team access to intelligence data'
        project: $(var.project_id)
      metadata:
        dependsOn:
          - 'enable-apis'

    # IAM Policy Binding for BigQuery Data Editor
    - name: bigquery-data-editor-binding
      type: 'iam.cnrm.cloud.google.com/v1beta1/IAMPolicyMember'
      properties:
        member: 'serviceAccount:$(ref.marketing-ai-service-account.outputs.email)'
        role: 'roles/bigquery.dataEditor'
        resource:
          apiVersion: 'resourcemanager.cnrm.cloud.google.com/v1beta1'
          kind: 'Project'
          name: $(var.project_id)
      metadata:
        dependsOn:
          - 'marketing-ai-service-account'

    # IAM Policy Binding for Vertex AI User
    - name: vertex-ai-user-binding
      type: 'iam.cnrm.cloud.google.com/v1beta1/IAMPolicyMember'
      properties:
        member: 'serviceAccount:$(ref.vertex-ai-agents-service-account.outputs.email)'
        role: 'roles/aiplatform.user'
        resource:
          apiVersion: 'resourcemanager.cnrm.cloud.google.com/v1beta1'
          kind: 'Project'
          name: $(var.project_id)
      metadata:
        dependsOn:
          - 'vertex-ai-agents-service-account'

    # IAM Policy Binding for Storage Object Admin
    - name: storage-object-admin-binding
      type: 'iam.cnrm.cloud.google.com/v1beta1/IAMPolicyMember'
      properties:
        member: 'serviceAccount:$(ref.marketing-ai-service-account.outputs.email)'
        role: 'roles/storage.objectAdmin'
        resource:
          apiVersion: 'storage.cnrm.cloud.google.com/v1beta1'
          kind: 'StorageBucket'
          name: $(ref.marketing-intelligence-bucket.outputs.name)
      metadata:
        dependsOn:
          - 'marketing-ai-service-account'
          - 'marketing-intelligence-bucket'

    # IAM Policy Binding for Gmail API Access
    - name: gmail-api-access-binding
      type: 'iam.cnrm.cloud.google.com/v1beta1/IAMPolicyMember'
      properties:
        member: 'serviceAccount:$(ref.marketing-ai-service-account.outputs.email)'
        role: 'roles/gmail.readonly'
        resource:
          apiVersion: 'resourcemanager.cnrm.cloud.google.com/v1beta1'
          kind: 'Project'
          name: $(var.project_id)
      metadata:
        dependsOn:
          - 'marketing-ai-service-account'

    # Secret Manager Secret for API Keys
    - name: marketing-api-keys-secret
      type: 'secretmanager.cnrm.cloud.google.com/v1beta1/SecretManagerSecret'
      properties:
        secretId: 'marketing-api-keys'
        replication:
          automatic: true
        labels:
          environment: $(var.environment)
          purpose: 'api-keys'
          team: 'marketing-automation'
      metadata:
        dependsOn:
          - 'enable-apis'

    # Secret Manager Secret for Workspace Configuration
    - name: workspace-config-secret
      type: 'secretmanager.cnrm.cloud.google.com/v1beta1/SecretManagerSecret'
      properties:
        secretId: 'workspace-flows-config'
        replication:
          automatic: true
        labels:
          environment: $(var.environment)
          purpose: 'workspace-config'
          team: 'marketing-automation'
      metadata:
        dependsOn:
          - 'enable-apis'

    # BigQuery Machine Learning Model for Customer LTV Prediction
    - name: customer-ltv-model-query
      type: 'bigquery.cnrm.cloud.google.com/v1beta1/BigQueryJob'
      properties:
        jobId: 'create-customer-ltv-model-$(var.random_suffix)'
        location: $(var.region)
        query:
          query: |
            CREATE OR REPLACE MODEL `$(var.project_id).marketing_data_$(var.random_suffix).customer_ltv_model`
            OPTIONS(
              model_type='linear_reg',
              input_label_cols=['customer_lifetime_value'],
              max_iterations=50,
              learn_rate=0.4,
              l1_reg=0.1,
              l2_reg=0.1
            ) AS
            SELECT
              engagement_score,
              EXTRACT(DAYOFWEEK FROM interaction_timestamp) as day_of_week,
              EXTRACT(HOUR FROM interaction_timestamp) as hour_of_day,
              demographic_segment,
              customer_lifetime_value
            FROM `$(var.project_id).marketing_data_$(var.random_suffix).customer_interactions`
            WHERE customer_lifetime_value IS NOT NULL
              AND engagement_score IS NOT NULL
              AND interaction_timestamp >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 365 DAY)
          useLegacySql: false
      metadata:
        dependsOn:
          - 'customer-interactions-table'

    # BigQuery Dashboard View for Real-time Analytics
    - name: campaign-dashboard-view
      type: 'bigquery.cnrm.cloud.google.com/v1beta1/BigQueryTable'
      properties:
        datasetId: $(ref.marketing-dataset.outputs.datasetId)
        tableId: 'campaign_dashboard'
        friendlyName: 'Real-time Campaign Dashboard View'
        description: 'Aggregated view for real-time campaign performance dashboard'
        view:
          query: |
            SELECT 
              c.campaign_id,
              c.campaign_name,
              c.channel,
              c.impressions,
              c.clicks,
              c.conversions,
              c.roas,
              COUNT(i.customer_id) as total_interactions,
              AVG(i.engagement_score) as avg_engagement,
              COUNT(ai.insight_id) as ai_recommendations,
              MAX(ai.generated_timestamp) as last_ai_analysis,
              CURRENT_TIMESTAMP() as dashboard_updated_at
            FROM `$(var.project_id).marketing_data_$(var.random_suffix).campaign_performance` c
            LEFT JOIN `$(var.project_id).marketing_data_$(var.random_suffix).customer_interactions` i 
              ON c.campaign_id = i.campaign_id
            LEFT JOIN `$(var.project_id).marketing_data_$(var.random_suffix).ai_insights` ai 
              ON c.campaign_id = ai.campaign_id
            WHERE c.start_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)
            GROUP BY 1,2,3,4,5,6,7
            ORDER BY c.start_date DESC
          useLegacySql: false
        labels:
          view_type: 'dashboard'
          data_classification: 'internal'
      metadata:
        dependsOn:
          - 'campaign-performance-table'
          - 'customer-interactions-table'
          - 'ai-insights-table'

    # Cloud Monitoring Alert Policy for Campaign Performance Anomalies
    - name: campaign-performance-alert-policy
      type: 'monitoring.cnrm.cloud.google.com/v1beta1/MonitoringAlertPolicy'
      properties:
        displayName: 'Marketing Campaign Performance Anomaly Alert'
        documentation:
          content: 'Alert triggered when campaign performance metrics deviate significantly from expected ranges'
          mimeType: 'text/markdown'
        conditions:
          - displayName: 'High spend with low conversion rate'
            conditionThreshold:
              filter: 'resource.type="bigquery_dataset"'
              comparison: 'COMPARISON_GREATER_THAN'
              thresholdValue: 0.02  # 2% conversion rate threshold
              duration: '300s'
              aggregations:
                - alignmentPeriod: '60s'
                  perSeriesAligner: 'ALIGN_RATE'
                  crossSeriesReducer: 'REDUCE_MEAN'
        alertStrategy:
          autoClose: '1800s'  # 30 minutes
        enabled: true
        notificationChannels: []  # Would be configured with actual notification channels
      metadata:
        dependsOn:
          - 'marketing-dataset'

  # Output values for use by other configurations or applications
  outputs:
    project_id:
      description: "The Google Cloud Project ID"
      value: $(var.project_id)
    
    dataset_name:
      description: "BigQuery dataset name for marketing data"
      value: $(ref.marketing-dataset.outputs.datasetId)
    
    bucket_name:
      description: "Cloud Storage bucket name for marketing intelligence"
      value: $(ref.marketing-intelligence-bucket.outputs.name)
    
    marketing_ai_service_account:
      description: "Service account email for marketing AI operations"
      value: $(ref.marketing-ai-service-account.outputs.email)
    
    vertex_ai_agents_service_account:
      description: "Service account email for Vertex AI agents"
      value: $(ref.vertex-ai-agents-service-account.outputs.email)
    
    marketing_team_service_account:
      description: "Service account email for marketing team access"
      value: $(ref.marketing-team-service-account.outputs.email)
    
    dashboard_view_url:
      description: "BigQuery dashboard view URL"
      value: "https://console.cloud.google.com/bigquery?project=$(var.project_id)&ws=!1m5!1m4!4m3!1s$(var.project_id)!2s$(ref.marketing-dataset.outputs.datasetId)!3scampaign_dashboard"
    
    api_keys_secret:
      description: "Secret Manager secret name for API keys"
      value: $(ref.marketing-api-keys-secret.outputs.secretId)
    
    workspace_config_secret:
      description: "Secret Manager secret name for workspace configuration"
      value: $(ref.workspace-config-secret.outputs.secretId)

  # Deployment constraints and requirements
  requirements:
    gcp:
      version: ">= 1.0.0"
    
    apis:
      required:
        - 'aiplatform.googleapis.com'
        - 'bigquery.googleapis.com'
        - 'storage.googleapis.com'
        - 'gmail.googleapis.com'
        - 'sheets.googleapis.com'
        - 'docs.googleapis.com'
        - 'calendar.googleapis.com'
        - 'cloudbuild.googleapis.com'
        - 'secretmanager.googleapis.com'
        - 'monitoring.googleapis.com'
    
    permissions:
      required:
        - 'roles/resourcemanager.projectIamAdmin'
        - 'roles/bigquery.admin'
        - 'roles/storage.admin'
        - 'roles/aiplatform.admin'
        - 'roles/secretmanager.admin'
        - 'roles/iam.serviceAccountAdmin'
        - 'roles/monitoring.alertPolicyEditor'

  # Additional metadata for the infrastructure deployment
  metadata:
    labels:
      solution: 'marketing-intelligence'
      technology: 'vertex-ai-agents'
      integration: 'workspace-flows'
      version: '1.0'
      environment: $(var.environment)
    
    annotations:
      'infrastructure-manager.gcp.upbound.io/description': 'Complete infrastructure for adaptive marketing campaign intelligence using Vertex AI Agents and Google Workspace Flows'
      'infrastructure-manager.gcp.upbound.io/documentation': 'https://cloud.google.com/vertex-ai/docs/ai-agent-ecosystem-overview'
      'infrastructure-manager.gcp.upbound.io/estimated-cost': 'Low to Medium - Costs vary based on data volume and AI agent usage'
      'infrastructure-manager.gcp.upbound.io/deployment-time': '15-30 minutes'