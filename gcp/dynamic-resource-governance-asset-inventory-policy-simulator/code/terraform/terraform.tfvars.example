# Example Terraform Variables for Dynamic Resource Governance
# Copy this file to terraform.tfvars and modify the values for your environment

# Required: Google Cloud Project Configuration
project_id = "your-gcp-project-id"
region     = "us-central1"
zone       = "us-central1-a"

# Optional: Resource Naming
environment     = "dev"
resource_prefix = "governance"

# Optional: Asset Inventory Configuration
asset_feed_name    = "governance-feed"
asset_types        = ["*"]  # Monitor all asset types
asset_content_type = "RESOURCE"

# Optional: Pub/Sub Configuration
pubsub_topic_name        = "asset-changes"
pubsub_subscription_name = "compliance-subscription"
pubsub_ack_deadline      = 300
pubsub_message_retention = "1209600s"  # 14 days

# Optional: Cloud Functions Configuration
functions_runtime = "python311"

# Asset Analyzer Function Configuration
asset_analyzer_config = {
  memory_mb          = 512
  timeout_seconds    = 300
  max_instances      = 100
  min_instances      = 0
  cpu                = "1"
  ingress_settings   = "ALLOW_INTERNAL_ONLY"
  egress_settings    = "PRIVATE_RANGES_ONLY"
}

# Policy Validator Function Configuration
policy_validator_config = {
  memory_mb          = 1024
  timeout_seconds    = 540
  max_instances      = 50
  min_instances      = 0
  cpu                = "1"
  ingress_settings   = "ALLOW_ALL"
  egress_settings    = "ALLOW_ALL"
}

# Compliance Engine Function Configuration
compliance_engine_config = {
  memory_mb          = 1024
  timeout_seconds    = 540
  max_instances      = 100
  min_instances      = 1
  cpu                = "1"
  ingress_settings   = "ALLOW_INTERNAL_ONLY"
  egress_settings    = "ALLOW_ALL"
}

# Optional: Service Account Configuration
service_account_name         = "governance-automation"
service_account_display_name = "Governance Automation Service Account"

# Optional: IAM Roles for Governance Service Account
governance_roles = [
  "roles/cloudasset.viewer",
  "roles/iam.securityReviewer",
  "roles/monitoring.metricWriter",
  "roles/logging.logWriter",
  "roles/pubsub.publisher",
  "roles/pubsub.subscriber"
]

# Optional: Google Cloud APIs to Enable
required_apis = [
  "cloudasset.googleapis.com",
  "pubsub.googleapis.com",
  "cloudfunctions.googleapis.com",
  "policysimulator.googleapis.com",
  "cloudbuild.googleapis.com",
  "logging.googleapis.com",
  "monitoring.googleapis.com",
  "cloudresourcemanager.googleapis.com",
  "iam.googleapis.com"
]

# Optional: Monitoring and Alerting
enable_monitoring = true
# alert_notification_channels = ["projects/your-project/notificationChannels/123456789"]

# Optional: High-Risk Asset Types
high_risk_asset_types = [
  "compute.googleapis.com/Instance",
  "storage.googleapis.com/Bucket",
  "iam.googleapis.com/ServiceAccount",
  "container.googleapis.com/Cluster",
  "sqladmin.googleapis.com/Instance"
]

# Optional: Compliance Policies Configuration
compliance_policies = {
  "public-storage-bucket" = {
    enabled        = true
    risk_level     = "HIGH"
    auto_remediate = false
    alert_channels = []
  }
  "unrestricted-firewall" = {
    enabled        = true
    risk_level     = "HIGH"
    auto_remediate = false
    alert_channels = []
  }
  "overprivileged-sa" = {
    enabled        = true
    risk_level     = "MEDIUM"
    auto_remediate = false
    alert_channels = []
  }
}

# Optional: Resource Labels
labels = {
  purpose     = "governance"
  managed-by  = "terraform"
  environment = "dev"
  owner       = "platform-team"
  project     = "governance-system"
}