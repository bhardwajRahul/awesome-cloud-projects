# =============================================================================
# Cloud Function Requirements - Database Maintenance Automation
# =============================================================================
# This file specifies all Python dependencies required for the database
# maintenance Cloud Function to operate correctly.
# =============================================================================

# Cloud Functions Framework
# Provides the HTTP server and request handling for Cloud Functions
functions-framework==3.4.0

# Database Connectivity
# PyMySQL for connecting to Cloud SQL MySQL instances
PyMySQL==1.1.0

# Google Cloud SDK Libraries
# Core Google Cloud client library for authentication and common utilities
google-cloud-core==2.3.3

# Cloud Monitoring for custom metrics and performance tracking
google-cloud-monitoring==2.15.1

# Cloud Storage for saving maintenance reports and artifacts
google-cloud-storage==2.10.0

# Cloud SQL Admin API for advanced database management (if needed)
google-cloud-sql==0.4.0

# Cloud Logging for structured logging and log management
google-cloud-logging==3.8.0

# Additional Utilities
# Requests for HTTP operations (used by some Google Cloud libraries)
requests==2.31.0

# Charset normalizer for proper text encoding handling
charset-normalizer==3.2.0

# Urllib3 for HTTP connections (used by requests)
urllib3==2.0.4

# Certifi for SSL certificate verification
certifi==2023.7.22

# Performance and Reliability
# Grpcio for efficient gRPC communication with Google Cloud APIs
grpcio==1.56.2

# Protobuf for protocol buffer serialization
protobuf==4.24.0

# Google API Core for common API client functionality
google-api-core==2.11.1

# Google Auth for authentication with Google Cloud services
google-auth==2.22.0

# Development and Debugging (optional, for local testing)
# pytest==7.4.0
# pytest-cov==4.1.0

# Security and Cryptography
# Cryptography library for secure operations
cryptography==41.0.3

# RSA for cryptographic operations
rsa==4.9

# Cachetools for efficient caching of authentication tokens
cachetools==5.3.1

# Date and Time Utilities
# PyTZ for timezone handling (if needed for advanced scheduling)
pytz==2023.3

# =============================================================================
# Version Pinning Strategy
# =============================================================================
# - Major versions are pinned to ensure compatibility
# - Minor versions allow for security patches and bug fixes
# - google-cloud-* libraries are kept in sync for compatibility
# - Core dependencies (PyMySQL, functions-framework) are pinned for stability
# =============================================================================

# =============================================================================
# Dependency Notes
# =============================================================================
# 
# functions-framework: Provides the HTTP server for Cloud Functions
# PyMySQL: Pure Python MySQL client, preferred for Cloud SQL connections
# google-cloud-monitoring: Required for sending custom metrics
# google-cloud-storage: Required for saving maintenance reports
# google-cloud-sql: Optional, for advanced SQL operations
# google-cloud-logging: For structured logging integration
# 
# Security Considerations:
# - All dependencies are from trusted sources (Google, PyPI official)
# - Versions are pinned to prevent supply chain attacks
# - Regular security updates should be applied
# 
# Performance Considerations:
# - PyMySQL is chosen over mysqlclient for easier deployment
# - grpcio provides efficient API communication
# - cachetools reduces authentication overhead
# 
# =============================================================================