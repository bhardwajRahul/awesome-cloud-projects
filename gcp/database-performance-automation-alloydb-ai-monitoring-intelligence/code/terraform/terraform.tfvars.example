# Example Terraform Variables for AlloyDB AI Performance Automation
# Copy this file to terraform.tfvars and customize the values for your deployment

# ===================================
# REQUIRED CONFIGURATION
# ===================================

# Your Google Cloud project ID where resources will be deployed
project_id = "your-gcp-project-id"

# ===================================
# INFRASTRUCTURE CONFIGURATION
# ===================================

# Primary region for deployment (must support AlloyDB)
region = "us-central1"

# Primary zone for deployment
zone = "us-central1-a"

# Environment name for resource tagging and naming
environment = "dev"

# Prefix for all resource names (helps avoid naming conflicts)
resource_prefix = "alloydb-perf"

# ===================================
# ALLOYDB CONFIGURATION
# ===================================

# AlloyDB cluster identifier (auto-generated if empty)
alloydb_cluster_id = ""

# Machine configuration for AlloyDB instance
alloydb_cpu_count      = 4
alloydb_memory_size_gb = 16

# Availability configuration
# Options: "ZONAL" (single zone) or "REGIONAL" (multi-zone)
alloydb_availability_type = "ZONAL"

# Backup configuration
alloydb_backup_enabled      = true
alloydb_backup_retention_days = 7

# ===================================
# NETWORK CONFIGURATION
# ===================================

# CIDR range for VPC subnet
vpc_cidr_range = "10.0.0.0/24"

# CIDR range for private service connection to AlloyDB
private_service_cidr = "10.1.0.0/16"

# List of authorized networks for database access (empty = private access only)
authorized_networks = []

# ===================================
# MONITORING AND AUTOMATION
# ===================================

# Enable Cloud Monitoring integration
monitoring_enabled = true

# Cron schedule for performance analysis (every 15 minutes)
performance_analysis_schedule = "*/15 * * * *"

# Cron schedule for daily performance reports (9 AM daily)
daily_report_schedule = "0 9 * * *"

# Timezone for scheduled jobs
timezone = "America/New_York"

# Performance threshold for query latency alerts (milliseconds)
performance_threshold_latency_ms = 1000

# Notification channels for alerts (add your channel IDs)
alert_notification_channels = []
# Example:
# alert_notification_channels = [
#   "projects/your-project/notificationChannels/1234567890",
#   "projects/your-project/notificationChannels/0987654321"
# ]

# ===================================
# CLOUD FUNCTIONS CONFIGURATION
# ===================================

# Runtime configuration for Cloud Functions
function_runtime         = "python311"
function_memory_mb      = 512
function_timeout_seconds = 540

# ===================================
# VERTEX AI CONFIGURATION
# ===================================

# Region for Vertex AI resources (defaults to main region if empty)
vertex_ai_region = ""

# Display name for the AI performance model
ai_model_display_name = "alloydb-performance-optimizer"

# Training budget for AutoML model (node hours)
ai_training_budget_hours = 1000

# ===================================
# SECURITY CONFIGURATION
# ===================================

# Enable IAM authentication for AlloyDB
enable_iam_authentication = true

# ===================================
# COST MANAGEMENT
# ===================================

# Enable cost monitoring and alerts
enable_cost_alerts = true

# Daily cost budget in USD for alerts
daily_cost_budget_usd = 100

# ===================================
# RESOURCE LABELING
# ===================================

# Labels applied to all resources for organization and cost tracking
labels = {
  environment    = "dev"
  purpose       = "database-performance-automation"
  team          = "data-engineering"
  managed-by    = "terraform"
  cost-center   = "engineering"
  project       = "alloydb-ai-optimization"
}

# ===================================
# EXAMPLE CONFIGURATIONS BY USE CASE
# ===================================

# -------------------------
# DEVELOPMENT ENVIRONMENT
# -------------------------
# Uncomment and modify for development use:
#
# environment = "dev"
# alloydb_cpu_count = 2
# alloydb_memory_size_gb = 8
# alloydb_availability_type = "ZONAL"
# performance_analysis_schedule = "0 */6 * * *"  # Every 6 hours
# function_memory_mb = 256
# daily_cost_budget_usd = 25
# enable_cost_alerts = true

# -------------------------
# STAGING ENVIRONMENT
# -------------------------
# Uncomment and modify for staging use:
#
# environment = "staging"
# alloydb_cpu_count = 4
# alloydb_memory_size_gb = 16
# alloydb_availability_type = "ZONAL"
# performance_analysis_schedule = "*/30 * * * *"  # Every 30 minutes
# function_memory_mb = 512
# daily_cost_budget_usd = 75
# enable_cost_alerts = true

# -------------------------
# PRODUCTION ENVIRONMENT
# -------------------------
# Uncomment and modify for production use:
#
# environment = "prod"
# alloydb_cpu_count = 8
# alloydb_memory_size_gb = 32
# alloydb_availability_type = "REGIONAL"
# alloydb_backup_retention_days = 30
# performance_analysis_schedule = "*/10 * * * *"  # Every 10 minutes
# function_memory_mb = 1024
# function_timeout_seconds = 540
# daily_cost_budget_usd = 200
# enable_cost_alerts = true
# alert_notification_channels = [
#   "projects/your-project/notificationChannels/prod-alerts-1",
#   "projects/your-project/notificationChannels/prod-alerts-2"
# ]

# -------------------------
# HIGH-PERFORMANCE CONFIGURATION
# -------------------------
# Uncomment and modify for high-performance workloads:
#
# alloydb_cpu_count = 16
# alloydb_memory_size_gb = 64
# alloydb_availability_type = "REGIONAL"
# performance_analysis_schedule = "*/5 * * * *"   # Every 5 minutes
# function_memory_mb = 2048
# ai_training_budget_hours = 5000
# daily_cost_budget_usd = 500

# -------------------------
# COST-OPTIMIZED CONFIGURATION
# -------------------------
# Uncomment and modify for cost-conscious deployments:
#
# alloydb_cpu_count = 2
# alloydb_memory_size_gb = 8
# alloydb_availability_type = "ZONAL"
# alloydb_backup_retention_days = 3
# performance_analysis_schedule = "0 */4 * * *"   # Every 4 hours
# daily_report_schedule = "0 6 * * 1"             # Weekly reports
# function_memory_mb = 256
# ai_training_budget_hours = 500
# daily_cost_budget_usd = 30
# monitoring_enabled = false  # Disable advanced monitoring to reduce costs