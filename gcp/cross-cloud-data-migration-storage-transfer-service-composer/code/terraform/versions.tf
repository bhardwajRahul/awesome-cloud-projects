# ================================================================
# TERRAFORM VERSIONS AND PROVIDERS CONFIGURATION
# ================================================================
#
# This file defines the required Terraform version and provider versions
# for the GCP Cross-Cloud Data Migration Infrastructure. It ensures
# consistent behavior across different environments and team members.
#
# Provider Requirements:
# - Google Cloud Platform (google) - Primary provider for GCP resources
# - Google Beta (google-beta) - For beta features and resources
# - Random - For generating unique resource names
#
# Author: Generated by Terraform Recipe Generator
# Version: 1.0
# ================================================================

# ================================================================
# TERRAFORM VERSION REQUIREMENTS
# ================================================================

terraform {
  # Minimum Terraform version required
  required_version = ">= 1.5.0"

  # Required providers with version constraints
  required_providers {
    # Google Cloud Platform provider
    google = {
      source  = "hashicorp/google"
      version = "~> 6.0"
    }

    # Google Beta provider for beta features
    google-beta = {
      source  = "hashicorp/google-beta"
      version = "~> 6.0"
    }

    # Random provider for unique resource naming
    random = {
      source  = "hashicorp/random"
      version = "~> 3.4"
    }
  }

  # Optional: Configure remote state backend
  # Uncomment and configure for production use
  # backend "gcs" {
  #   bucket = "your-terraform-state-bucket"
  #   prefix = "terraform/state/cross-cloud-migration"
  # }
}

# ================================================================
# PROVIDER CONFIGURATION
# ================================================================

# Configure the Google Cloud Platform provider
provider "google" {
  project = var.project_id
  region  = var.region
  zone    = var.zone

  # Optional: Configure default labels for all resources
  default_labels = merge(
    {
      environment    = var.environment
      managed_by     = "terraform"
      project        = "cross-cloud-migration"
      recipe_version = "1.0"
    },
    var.custom_labels
  )

  # Optional: Configure request timeout
  request_timeout = "60s"

  # Optional: Configure user project override for billing
  user_project_override = true

  # Optional: Configure custom request headers
  add_terraform_attribution_label = true
}

# Configure the Google Beta provider for beta features
provider "google-beta" {
  project = var.project_id
  region  = var.region
  zone    = var.zone

  # Optional: Configure default labels for all resources
  default_labels = merge(
    {
      environment    = var.environment
      managed_by     = "terraform"
      project        = "cross-cloud-migration"
      recipe_version = "1.0"
    },
    var.custom_labels
  )

  # Optional: Configure request timeout
  request_timeout = "60s"

  # Optional: Configure user project override for billing
  user_project_override = true

  # Optional: Configure custom request headers
  add_terraform_attribution_label = true
}

# Configure the Random provider
provider "random" {
  # Random provider doesn't require specific configuration
}

# ================================================================
# PROVIDER FEATURE CONFIGURATION
# ================================================================

# Enable required Google Cloud APIs
# Note: These APIs should be enabled before running Terraform
locals {
  required_apis = [
    "compute.googleapis.com",              # Compute Engine API
    "storage.googleapis.com",              # Cloud Storage API
    "composer.googleapis.com",             # Cloud Composer API
    "storagetransfer.googleapis.com",      # Storage Transfer Service API
    "logging.googleapis.com",              # Cloud Logging API
    "monitoring.googleapis.com",           # Cloud Monitoring API
    "pubsub.googleapis.com",               # Pub/Sub API
    "iam.googleapis.com",                  # Identity and Access Management API
    "cloudresourcemanager.googleapis.com", # Cloud Resource Manager API
    "serviceusage.googleapis.com",         # Service Usage API
    "cloudbuild.googleapis.com",           # Cloud Build API (for Composer)
    "container.googleapis.com",            # Google Kubernetes Engine API (for Composer)
    "sql-component.googleapis.com",        # Cloud SQL API (for Composer)
    "redis.googleapis.com",                # Memorystore for Redis API (for Composer)
    "artifactregistry.googleapis.com",     # Artifact Registry API (for Composer)
  ]
}

# ================================================================
# PROVIDER ALIASES
# ================================================================

# Provider alias for beta features
provider "google-beta" {
  alias   = "beta"
  project = var.project_id
  region  = var.region
  zone    = var.zone

  default_labels = merge(
    {
      environment    = var.environment
      managed_by     = "terraform"
      project        = "cross-cloud-migration"
      recipe_version = "1.0"
      provider_alias = "beta"
    },
    var.custom_labels
  )
}

# ================================================================
# PROVIDER EXPERIMENTS
# ================================================================

# Optional: Enable provider experiments (use with caution)
# provider "google" {
#   experiments = [
#     "provider_meta_feature"
#   ]
# }

# ================================================================
# PROVIDER CONFIGURATION VALIDATION
# ================================================================

# Validate that required APIs are enabled
# Note: This is a documentation reference - actual API enabling should be done
# before running Terraform, either manually or through a separate script

# Example command to enable APIs:
# gcloud services enable \
#   compute.googleapis.com \
#   storage.googleapis.com \
#   composer.googleapis.com \
#   storagetransfer.googleapis.com \
#   logging.googleapis.com \
#   monitoring.googleapis.com \
#   pubsub.googleapis.com \
#   iam.googleapis.com \
#   cloudresourcemanager.googleapis.com \
#   serviceusage.googleapis.com \
#   cloudbuild.googleapis.com \
#   container.googleapis.com \
#   sql-component.googleapis.com \
#   redis.googleapis.com \
#   artifactregistry.googleapis.com

# ================================================================
# TERRAFORM CONFIGURATION
# ================================================================

# Configure Terraform behavior
terraform {
  # Enable advanced configuration options
  experiments = []

  # Configure provider installation
  provider_meta "google" {
    module_name = "cross-cloud-migration-recipe"
  }

  provider_meta "google-beta" {
    module_name = "cross-cloud-migration-recipe-beta"
  }

  provider_meta "random" {
    module_name = "cross-cloud-migration-recipe-random"
  }
}

# ================================================================
# VERSION COMPATIBILITY MATRIX
# ================================================================

# This configuration has been tested with:
# - Terraform >= 1.5.0
# - Google Provider >= 6.0.0
# - Google Beta Provider >= 6.0.0
# - Random Provider >= 3.4.0

# Known compatibility issues:
# - Google Provider < 5.0.0: Some Cloud Composer features may not be available
# - Terraform < 1.5.0: Import blocks and some HCL features may not work
# - Random Provider < 3.0.0: Some random resource features may not be available

# ================================================================
# PROVIDER DOCUMENTATION REFERENCES
# ================================================================

# Google Cloud Provider Documentation:
# https://registry.terraform.io/providers/hashicorp/google/latest/docs

# Google Beta Provider Documentation:
# https://registry.terraform.io/providers/hashicorp/google-beta/latest/docs

# Random Provider Documentation:
# https://registry.terraform.io/providers/hashicorp/random/latest/docs

# Google Cloud Platform Documentation:
# https://cloud.google.com/docs

# Cloud Composer Documentation:
# https://cloud.google.com/composer/docs

# Storage Transfer Service Documentation:
# https://cloud.google.com/storage-transfer/docs

# ================================================================
# UPGRADE NOTES
# ================================================================

# When upgrading provider versions:
# 1. Review the provider changelog for breaking changes
# 2. Test in a non-production environment first
# 3. Update the version constraints in this file
# 4. Run 'terraform init -upgrade' to update provider versions
# 5. Run 'terraform plan' to review changes
# 6. Apply changes gradually and monitor for issues

# When upgrading Terraform versions:
# 1. Review the Terraform changelog for breaking changes
# 2. Update the required_version constraint
# 3. Test configuration syntax compatibility
# 4. Update any deprecated features or functions
# 5. Run 'terraform init -upgrade' to update Terraform version