# Example Terraform Variables for Content Syndication Platform
# Copy this file to terraform.tfvars and customize values for your deployment

# =============================================================================
# REQUIRED VARIABLES
# =============================================================================

# Your GCP project ID (replace with your actual project ID)
project_id = "my-content-syndication-project"

# Primary GCP region for regional resources
region = "us-central1"

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Globally unique bucket name (leave empty for auto-generated name)
content_bucket_name = ""

# Storage location (US, EU, ASIA, or specific region)
storage_location = "US"

# Enable automatic content lifecycle management
enable_content_lifecycle = true

# Days to retain content before moving to nearline storage
content_retention_days = 30

# Enable CORS for web-based content distribution
enable_cors = true

# Allowed CORS origins (use ["*"] for any origin, or specify domains)
allowed_cors_origins = ["*"]

# =============================================================================
# COMPUTE CONFIGURATION
# =============================================================================

# Cloud Function memory allocation
function_memory = "1GB"

# Function timeout in seconds (max 540 for 2nd gen functions)
function_timeout = 300

# Maximum number of function instances for auto-scaling
function_max_instances = 100

# =============================================================================
# AI AND QUALITY ASSESSMENT
# =============================================================================

# Enable Vertex AI components for Agent Development Kit
enable_vertex_ai = true

# Vertex AI region (must support AI/ML services)
vertex_ai_location = "us-central1"

# Quality assessment configuration
quality_thresholds = {
  minimum_score        = 0.75
  enable_auto_approval = true
  require_human_review = false
}

# =============================================================================
# CONTENT PIPELINE CONFIGURATION
# =============================================================================

# Content categories for automatic organization
content_categories = ["video", "image", "audio", "document"]

# Distribution channel mapping by content type
distribution_channels = {
  video    = ["youtube", "tiktok", "instagram", "facebook"]
  image    = ["instagram", "pinterest", "twitter", "facebook"]
  audio    = ["spotify", "apple_music", "podcast", "youtube"]
  document = ["medium", "linkedin", "blog", "website"]
}

# =============================================================================
# ENVIRONMENT AND MONITORING
# =============================================================================

# Deployment environment
environment = "dev"

# Enable monitoring dashboard and alerting
enable_monitoring = true

# Cloud Workflows logging level
workflow_call_log_level = "LOG_ERRORS_ONLY"

# Enable security scanning for content processing
enable_security_scanning = false

# =============================================================================
# RESOURCE TAGGING
# =============================================================================

# Common tags applied to all resources
tags = {
  project     = "content-syndication"
  environment = "dev"
  team        = "media-engineering"
  cost_center = "engineering"
  managed_by  = "terraform"
}

# =============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# =============================================================================

# Development Environment Example:
# environment = "dev"
# function_memory = "1GB"
# function_max_instances = 10
# enable_monitoring = true
# quality_thresholds = {
#   minimum_score = 0.6
#   enable_auto_approval = true
#   require_human_review = false
# }

# Staging Environment Example:
# environment = "staging"
# function_memory = "2GB"
# function_max_instances = 50
# enable_monitoring = true
# quality_thresholds = {
#   minimum_score = 0.75
#   enable_auto_approval = true
#   require_human_review = true
# }

# Production Environment Example:
# environment = "prod"
# function_memory = "2GB"
# function_max_instances = 100
# enable_monitoring = true
# content_retention_days = 90
# quality_thresholds = {
#   minimum_score = 0.8
#   enable_auto_approval = false
#   require_human_review = true
# }

# =============================================================================
# ADVANCED CONFIGURATION OPTIONS
# =============================================================================

# Zone for zonal resources (usually auto-selected based on region)
# zone = "us-central1-a"

# Custom content categories for specialized use cases
# content_categories = ["video", "image", "audio", "document", "3d-models", "datasets"]

# Extended distribution channels for enterprise use
# distribution_channels = {
#   video    = ["youtube", "vimeo", "tiktok", "internal-cdn"]
#   image    = ["instagram", "pinterest", "internal-gallery"]
#   audio    = ["spotify", "internal-podcast", "training-materials"]
#   document = ["sharepoint", "confluence", "internal-wiki"]
# }

# =============================================================================
# COST OPTIMIZATION SETTINGS
# =============================================================================

# For cost-optimized development:
# function_memory = "512MB"
# function_max_instances = 5
# content_retention_days = 7
# enable_monitoring = false

# For high-performance production:
# function_memory = "4GB"
# function_max_instances = 200
# storage_location = "us-central1"  # Regional for lower latency
# enable_monitoring = true