# Infrastructure Manager Configuration for Content Syndication Platform
# This configuration deploys a complete content syndication system using
# Hierarchical Namespace Storage and Agent Development Kit on Google Cloud

imports:
  - path: https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/networks
  - path: https://www.googleapis.com/storage/v1/b
  - path: https://www.googleapis.com/cloudfunctions/v1/projects/PROJECT_ID/locations/REGION/functions
  - path: https://www.googleapis.com/workflows/v1/projects/PROJECT_ID/locations/REGION/workflows
  - path: https://www.googleapis.com/serviceusage/v1/projects/PROJECT_ID/services

resources:
  # Enable required Google Cloud APIs
  - name: storage-api
    type: gcp-types/serviceusage-v1:projects.services
    properties:
      name: projects/$(ref.project-id.projectId)/services/storage.googleapis.com
      parent: projects/$(ref.project-id.projectId)
    metadata:
      dependsOn:
        - project-id

  - name: aiplatform-api
    type: gcp-types/serviceusage-v1:projects.services
    properties:
      name: projects/$(ref.project-id.projectId)/services/aiplatform.googleapis.com
      parent: projects/$(ref.project-id.projectId)
    metadata:
      dependsOn:
        - project-id

  - name: workflows-api
    type: gcp-types/serviceusage-v1:projects.services
    properties:
      name: projects/$(ref.project-id.projectId)/services/workflows.googleapis.com
      parent: projects/$(ref.project-id.projectId)
    metadata:
      dependsOn:
        - project-id

  - name: cloudfunctions-api
    type: gcp-types/serviceusage-v1:projects.services
    properties:
      name: projects/$(ref.project-id.projectId)/services/cloudfunctions.googleapis.com
      parent: projects/$(ref.project-id.projectId)
    metadata:
      dependsOn:
        - project-id

  - name: eventarc-api
    type: gcp-types/serviceusage-v1:projects.services
    properties:
      name: projects/$(ref.project-id.projectId)/services/eventarc.googleapis.com
      parent: projects/$(ref.project-id.projectId)
    metadata:
      dependsOn:
        - project-id

  # Project ID reference for dynamic resolution
  - name: project-id
    type: gcp-types/cloudresourcemanager-v1:projects
    properties:
      projectId: $(env.PROJECT_ID)

  # Generate random suffix for unique resource naming
  - name: random-suffix
    type: gcp-types/compute-v1:instances
    properties:
      zone: $(env.ZONE)
      name: temp-instance-for-random
      machineType: zones/$(env.ZONE)/machineTypes/e2-micro
      disks:
        - boot: true
          initializeParams:
            sourceImage: projects/debian-cloud/global/images/family/debian-11
      networkInterfaces:
        - network: global/networks/default
    metadata:
      runtimePolicy:
        - CREATE
      dependsOn:
        - project-id

  # Hierarchical Namespace Storage Bucket for content syndication
  - name: content-syndication-bucket
    type: gcp-types/storage-v1:buckets
    properties:
      name: content-hns-$(ref.random-suffix.id)
      location: $(env.REGION)
      storageClass: STANDARD
      uniformBucketLevelAccess:
        enabled: true
      hierarchicalNamespace:
        enabled: true
      versioning:
        enabled: true
      lifecycle:
        rule:
          - condition:
              age: 30
              matchesStorageClass:
                - STANDARD
            action:
              type: SetStorageClass
              storageClass: NEARLINE
          - condition:
              age: 90
              matchesStorageClass:
                - NEARLINE
            action:
              type: SetStorageClass
              storageClass: COLDLINE
      cors:
        - origin:
            - "*"
          method:
            - GET
            - POST
            - PUT
            - DELETE
          responseHeader:
            - Content-Type
            - Authorization
          maxAgeSeconds: 3600
      labels:
        purpose: content-syndication
        environment: production
        recipe: content-syndication-hns-adk
    metadata:
      dependsOn:
        - storage-api
        - random-suffix

  # Create hierarchical folder structure using storage operations
  - name: incoming-folder
    type: gcp-types/storage-v1:objects
    properties:
      bucket: $(ref.content-syndication-bucket.name)
      name: incoming/
      metadata:
        folder: "true"
    metadata:
      dependsOn:
        - content-syndication-bucket

  - name: processing-folder
    type: gcp-types/storage-v1:objects
    properties:
      bucket: $(ref.content-syndication-bucket.name)
      name: processing/
      metadata:
        folder: "true"
    metadata:
      dependsOn:
        - content-syndication-bucket

  - name: categorized-video-folder
    type: gcp-types/storage-v1:objects
    properties:
      bucket: $(ref.content-syndication-bucket.name)
      name: categorized/video/
      metadata:
        folder: "true"
    metadata:
      dependsOn:
        - content-syndication-bucket

  - name: categorized-image-folder
    type: gcp-types/storage-v1:objects
    properties:
      bucket: $(ref.content-syndication-bucket.name)
      name: categorized/image/
      metadata:
        folder: "true"
    metadata:
      dependsOn:
        - content-syndication-bucket

  - name: categorized-audio-folder
    type: gcp-types/storage-v1:objects
    properties:
      bucket: $(ref.content-syndication-bucket.name)
      name: categorized/audio/
      metadata:
        folder: "true"
    metadata:
      dependsOn:
        - content-syndication-bucket

  - name: categorized-document-folder
    type: gcp-types/storage-v1:objects
    properties:
      bucket: $(ref.content-syndication-bucket.name)
      name: categorized/document/
      metadata:
        folder: "true"
    metadata:
      dependsOn:
        - content-syndication-bucket

  - name: distributed-folder
    type: gcp-types/storage-v1:objects
    properties:
      bucket: $(ref.content-syndication-bucket.name)
      name: distributed/
      metadata:
        folder: "true"
    metadata:
      dependsOn:
        - content-syndication-bucket

  # Service Account for Agent Development Kit and content processing
  - name: content-processing-service-account
    type: gcp-types/iam-v1:projects.serviceAccounts
    properties:
      accountId: content-processing-sa-$(ref.random-suffix.id)
      serviceAccount:
        displayName: Content Processing Service Account
        description: Service account for Agent Development Kit content processing
      parent: projects/$(ref.project-id.projectId)
    metadata:
      dependsOn:
        - project-id
        - random-suffix

  # IAM bindings for service account
  - name: storage-admin-binding
    type: gcp-types/cloudresourcemanager-v1:projects.iamPolicy
    properties:
      resource: $(ref.project-id.projectId)
      policy:
        bindings:
          - role: roles/storage.admin
            members:
              - serviceAccount:$(ref.content-processing-service-account.email)
          - role: roles/aiplatform.user
            members:
              - serviceAccount:$(ref.content-processing-service-account.email)
          - role: roles/workflows.invoker
            members:
              - serviceAccount:$(ref.content-processing-service-account.email)
          - role: roles/logging.logWriter
            members:
              - serviceAccount:$(ref.content-processing-service-account.email)
          - role: roles/monitoring.metricWriter
            members:
              - serviceAccount:$(ref.content-processing-service-account.email)
    metadata:
      dependsOn:
        - content-processing-service-account

  # Cloud Function for content processing integration
  - name: content-processing-function
    type: gcp-types/cloudfunctions-v1:projects.locations.functions
    properties:
      location: projects/$(ref.project-id.projectId)/locations/$(env.REGION)
      function:
        name: process-content-$(ref.random-suffix.id)
        description: Function to integrate Cloud Workflows with Agent Development Kit
        sourceArchiveUrl: gs://$(ref.content-syndication-bucket.name)/function-source.zip
        httpsTrigger: {}
        entryPoint: process_content
        runtime: python39
        timeout: 300s
        availableMemoryMb: 512
        serviceAccountEmail: $(ref.content-processing-service-account.email)
        environmentVariables:
          STORAGE_BUCKET: $(ref.content-syndication-bucket.name)
          GOOGLE_CLOUD_PROJECT: $(ref.project-id.projectId)
          GOOGLE_CLOUD_REGION: $(env.REGION)
        labels:
          purpose: content-processing
          recipe: content-syndication-hns-adk
    metadata:
      dependsOn:
        - cloudfunctions-api
        - content-processing-service-account
        - content-syndication-bucket

  # Cloud Workflows for content syndication automation
  - name: content-syndication-workflow
    type: gcp-types/workflows-v1:projects.locations.workflows
    properties:
      parent: projects/$(ref.project-id.projectId)/locations/$(env.REGION)
      workflow:
        name: content-workflow-$(ref.random-suffix.id)
        description: Automated content syndication workflow using Agent Development Kit
        serviceAccount: $(ref.content-processing-service-account.email)
        sourceContents: |
          main:
            params: [event]
            steps:
              - init:
                  assign:
                    - bucket: ${event.bucket}
                    - object: ${event.name}
                    - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
                    - function_url: ${"https://" + sys.get_env("GOOGLE_CLOUD_REGION") + "-" + project_id + ".cloudfunctions.net/process-content-$(ref.random-suffix.id)"}
              
              - check_incoming_folder:
                  switch:
                    - condition: ${text.match_regex(object, "^incoming/")}
                      next: process_content
                  next: end
              
              - process_content:
                  call: http.post
                  args:
                    url: ${function_url}
                    headers:
                      Content-Type: "application/json"
                      Authorization: ${"Bearer " + sys.get_env("GOOGLE_ACCESS_TOKEN")}
                    body:
                      bucket: ${bucket}
                      object: ${object}
                      project_id: ${project_id}
                  result: processing_result
              
              - log_result:
                  call: sys.log
                  args:
                    text: ${"Content processing completed for " + object + " with result: " + string(processing_result)}
                    severity: "INFO"
              
              - move_to_processing:
                  call: http.post
                  args:
                    url: ${"https://storage.googleapis.com/storage/v1/b/" + bucket + "/o/" + text.url_encode(object) + "/copyTo/b/" + bucket + "/o/" + text.url_encode("processing/" + text.split(object, "/")[1])}
                    headers:
                      Authorization: ${"Bearer " + sys.get_env("GOOGLE_ACCESS_TOKEN")}
                  result: move_result
              
              - end:
                  return: 
                    status: "completed"
                    original_object: ${object}
                    processing_result: ${processing_result}
                    move_result: ${move_result}
        labels:
          purpose: content-syndication
          recipe: content-syndication-hns-adk
    metadata:
      dependsOn:
        - workflows-api
        - content-processing-service-account
        - content-processing-function

  # Eventarc trigger for storage events
  - name: storage-eventarc-trigger
    type: gcp-types/eventarc-v1:projects.locations.triggers
    properties:
      parent: projects/$(ref.project-id.projectId)/locations/$(env.REGION)
      trigger:
        name: content-upload-trigger-$(ref.random-suffix.id)
        eventFilters:
          - attribute: type
            value: google.cloud.storage.object.v1.finalized
          - attribute: bucket
            value: $(ref.content-syndication-bucket.name)
        destination:
          workflow: $(ref.content-syndication-workflow.name)
        serviceAccount: $(ref.content-processing-service-account.email)
        labels:
          purpose: content-automation
          recipe: content-syndication-hns-adk
    metadata:
      dependsOn:
        - eventarc-api
        - content-syndication-workflow
        - content-processing-service-account

  # Vertex AI Workbench for Agent Development Kit development
  - name: agent-development-workbench
    type: gcp-types/notebooks-v1:projects.locations.instances
    properties:
      parent: projects/$(ref.project-id.projectId)/locations/$(env.ZONE)
      instance:
        name: adk-workbench-$(ref.random-suffix.id)
        machineType: projects/$(ref.project-id.projectId)/zones/$(env.ZONE)/machineTypes/n1-standard-4
        instanceOwners:
          - $(ref.content-processing-service-account.email)
        vmImage:
          project: deeplearning-platform-release
          imageFamily: tf-ent-2-11-cu113-notebooks
        diskType: PD_STANDARD
        diskSizeGb: 100
        noPublicIp: false
        noProxyAccess: false
        metadata:
          items:
            - key: enable-oslogin
              value: "TRUE"
            - key: install-nvidia-driver
              value: "True"
            - key: proxy-mode
              value: service_account
        labels:
          purpose: agent-development
          recipe: content-syndication-hns-adk
    metadata:
      dependsOn:
        - content-processing-service-account

  # Cloud Monitoring notification channel for alerting
  - name: notification-channel
    type: gcp-types/monitoring-v1:projects.notificationChannels
    properties:
      name: projects/$(ref.project-id.projectId)/notificationChannels/content-syndication-alerts
      type: email
      displayName: Content Syndication Alerts
      description: Email notifications for content processing issues
      userLabels:
        purpose: content-syndication
        recipe: content-syndication-hns-adk
      enabled: true
    metadata:
      dependsOn:
        - project-id

  # Cloud Monitoring alert policy for content processing failures
  - name: processing-failure-alert
    type: gcp-types/monitoring-v1:projects.alertPolicies
    properties:
      displayName: Content Processing Failure Alert
      documentation:
        content: Alert triggered when content processing workflow fails
        mimeType: text/markdown
      conditions:
        - displayName: Workflow execution failures
          conditionThreshold:
            filter: 'resource.type="workflows.googleapis.com/Workflow" AND resource.labels.workflow_id="$(ref.content-syndication-workflow.name)"'
            comparison: COMPARISON_GT
            thresholdValue: 0
            duration: 300s
            aggregations:
              - alignmentPeriod: 300s
                perSeriesAligner: ALIGN_RATE
                crossSeriesReducer: REDUCE_SUM
      combiner: OR
      enabled: true
      notificationChannels:
        - $(ref.notification-channel.name)
      alertStrategy:
        autoClose: 86400s
      severity: ERROR
    metadata:
      dependsOn:
        - notification-channel
        - content-syndication-workflow

  # Cloud Logging sink for content processing logs
  - name: content-processing-log-sink
    type: gcp-types/logging-v2:projects.sinks
    properties:
      parent: projects/$(ref.project-id.projectId)
      sink:
        name: content-processing-logs-$(ref.random-suffix.id)
        description: Centralized logging for content processing workflow
        destination: storage.googleapis.com/$(ref.content-syndication-bucket.name)/logs
        filter: |
          resource.type="cloud_function" 
          resource.labels.function_name="process-content-$(ref.random-suffix.id)"
          OR
          resource.type="workflows.googleapis.com/Workflow"
          resource.labels.workflow_id="$(ref.content-syndication-workflow.name)"
        includeChildren: true
    metadata:
      dependsOn:
        - content-syndication-bucket
        - content-processing-function
        - content-syndication-workflow

  # Cloud Scheduler job for periodic content quality assessment
  - name: quality-assessment-scheduler
    type: gcp-types/cloudscheduler-v1:projects.locations.jobs
    properties:
      parent: projects/$(ref.project-id.projectId)/locations/$(env.REGION)
      job:
        name: quality-assessment-$(ref.random-suffix.id)
        description: Periodic quality assessment of processed content
        schedule: "0 */6 * * *"  # Every 6 hours
        timeZone: UTC
        httpTarget:
          uri: $(ref.content-processing-function.httpsTrigger.url)
          httpMethod: POST
          headers:
            Content-Type: application/json
          body: |
            {
              "action": "quality_assessment",
              "bucket": "$(ref.content-syndication-bucket.name)",
              "scan_folders": ["categorized/", "distributed/"]
            }
          oidcToken:
            serviceAccountEmail: $(ref.content-processing-service-account.email)
    metadata:
      dependsOn:
        - content-processing-function
        - content-processing-service-account

# Environment variables that need to be set when deploying
inputs:
  - name: PROJECT_ID
    description: Google Cloud Project ID
    type: string
    required: true
  
  - name: REGION
    description: Google Cloud region for regional resources
    type: string
    default: us-central1
    required: false
  
  - name: ZONE
    description: Google Cloud zone for zonal resources
    type: string
    default: us-central1-a
    required: false

# Output values for reference and integration
outputs:
  - name: bucket_name
    description: Name of the hierarchical namespace storage bucket
    value: $(ref.content-syndication-bucket.name)
  
  - name: bucket_url
    description: URL of the hierarchical namespace storage bucket
    value: gs://$(ref.content-syndication-bucket.name)
  
  - name: workflow_name
    description: Name of the content syndication workflow
    value: $(ref.content-syndication-workflow.name)
  
  - name: function_name
    description: Name of the content processing Cloud Function
    value: $(ref.content-processing-function.name)
  
  - name: function_url
    description: URL of the content processing Cloud Function
    value: $(ref.content-processing-function.httpsTrigger.url)
  
  - name: service_account_email
    description: Email of the content processing service account
    value: $(ref.content-processing-service-account.email)
  
  - name: workbench_instance_name
    description: Name of the Agent Development Kit Workbench instance
    value: $(ref.agent-development-workbench.name)
  
  - name: eventarc_trigger_name
    description: Name of the Eventarc trigger for storage events
    value: $(ref.storage-eventarc-trigger.name)
  
  - name: project_id
    description: Google Cloud Project ID used for deployment
    value: $(ref.project-id.projectId)
  
  - name: deployment_region
    description: Region where resources are deployed
    value: $(env.REGION)

# Metadata for the Infrastructure Manager deployment
metadata:
  version: "1.0"
  description: "Infrastructure Manager configuration for Content Syndication with Hierarchical Namespace Storage and Agent Development Kit"
  recipe: "content-syndication-hierarchical-namespace-storage-agent-development-kit"
  provider: "gcp"
  tags:
    - content-syndication
    - hierarchical-namespace
    - agent-development-kit
    - ai-agents
    - content-routing
    - analytics