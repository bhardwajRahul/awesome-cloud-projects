# Infrastructure Manager Configuration for Error Monitoring and Debugging
# This configuration deploys a complete error monitoring system using Cloud Error Reporting,
# Cloud Functions, Cloud Monitoring, and related services for automated debugging workflows.

# Import required resource types
imports:
  - path: https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/addresses
  - path: https://www.googleapis.com/cloudfunctions/v1/projects/PROJECT_ID/locations/REGION/functions
  - path: https://www.googleapis.com/pubsub/v1/projects/PROJECT_ID/topics
  - path: https://www.googleapis.com/storage/v1/b
  - path: https://www.googleapis.com/firestore/v1/projects/PROJECT_ID/databases
  - path: https://www.googleapis.com/logging/v2/projects/PROJECT_ID/sinks
  - path: https://www.googleapis.com/monitoring/v1/projects/PROJECT_ID/alertPolicies

# Template metadata
info:
  title: Error Monitoring and Debugging Infrastructure
  description: |
    Deploys comprehensive error monitoring system with automated debugging capabilities
    including Cloud Functions for error processing, alert routing, and debug automation.
  version: 1.0.0

# Input parameters for customization
properties:
  project_id:
    type: string
    description: Google Cloud Project ID
    default: ${PROJECT_ID}
  
  region:
    type: string
    description: Deployment region for Cloud Functions and regional resources
    default: us-central1
    
  zone:
    type: string
    description: Deployment zone for zonal resources
    default: us-central1-a
    
  random_suffix:
    type: string
    description: Random suffix for unique resource naming
    default: ${RANDOM_ID}
    
  storage_bucket_location:
    type: string
    description: Location for Cloud Storage bucket
    default: US
    
  firestore_region:
    type: string
    description: Region for Firestore database
    default: us-central1
    
  notification_channels:
    type: array
    description: List of notification channels for alerting
    default: []
    
  slack_webhook_url:
    type: string
    description: Slack webhook URL for notifications (optional)
    default: ""

# Resource definitions
resources:
  # Enable required APIs
  - name: enable-clouderrorreporting-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id.projectId)/services/clouderrorreporting.googleapis.com
      parent: projects/$(ref.project_id.projectId)
    metadata:
      dependsOn:
        - project_id

  - name: enable-cloudfunctions-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id.projectId)/services/cloudfunctions.googleapis.com
      parent: projects/$(ref.project_id.projectId)
    metadata:
      dependsOn:
        - project_id

  - name: enable-cloudmonitoring-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id.projectId)/services/monitoring.googleapis.com
      parent: projects/$(ref.project_id.projectId)
    metadata:
      dependsOn:
        - project_id

  - name: enable-logging-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id.projectId)/services/logging.googleapis.com
      parent: projects/$(ref.project_id.projectId)
    metadata:
      dependsOn:
        - project_id

  - name: enable-pubsub-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id.projectId)/services/pubsub.googleapis.com
      parent: projects/$(ref.project_id.projectId)
    metadata:
      dependsOn:
        - project_id

  - name: enable-storage-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id.projectId)/services/storage.googleapis.com
      parent: projects/$(ref.project_id.projectId)
    metadata:
      dependsOn:
        - project_id

  - name: enable-firestore-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id.projectId)/services/firestore.googleapis.com
      parent: projects/$(ref.project_id.projectId)
    metadata:
      dependsOn:
        - project_id

  # Pub/Sub Topics for error event routing
  - name: error-notifications-topic
    type: gcp-types/pubsub-v1:projects.topics
    properties:
      name: projects/$(ref.project_id.projectId)/topics/error-notifications-{{ properties.random_suffix }}
      labels:
        purpose: error-monitoring
        component: event-routing
    metadata:
      dependsOn:
        - enable-pubsub-api

  - name: error-alerts-topic
    type: gcp-types/pubsub-v1:projects.topics
    properties:
      name: projects/$(ref.project_id.projectId)/topics/error-notifications-{{ properties.random_suffix }}-alerts
      labels:
        purpose: error-monitoring
        component: alert-routing
    metadata:
      dependsOn:
        - enable-pubsub-api

  - name: error-debug-topic
    type: gcp-types/pubsub-v1:projects.topics
    properties:
      name: projects/$(ref.project_id.projectId)/topics/error-notifications-{{ properties.random_suffix }}-debug
      labels:
        purpose: error-monitoring
        component: debug-automation
    metadata:
      dependsOn:
        - enable-pubsub-api

  # Cloud Storage bucket for debug data and function source code
  - name: debug-storage-bucket
    type: gcp-types/storage-v1:buckets
    properties:
      name: error-debug-data-{{ properties.random_suffix }}
      project: $(ref.project_id.projectId)
      location: {{ properties.storage_bucket_location }}
      storageClass: STANDARD
      versioning:
        enabled: true
      lifecycle:
        rule:
          - action:
              type: Delete
            condition:
              age: 90  # Delete debug reports after 90 days
      labels:
        purpose: error-monitoring
        component: debug-storage
    metadata:
      dependsOn:
        - enable-storage-api

  # Firestore database for error tracking and analytics
  - name: firestore-database
    type: gcp-types/firestore-v1:projects.databases
    properties:
      parent: projects/$(ref.project_id.projectId)
      databaseId: (default)
      locationId: {{ properties.firestore_region }}
      type: FIRESTORE_NATIVE
      appEngineIntegrationMode: DISABLED
    metadata:
      dependsOn:
        - enable-firestore-api

  # Service account for Cloud Functions
  - name: error-monitoring-service-account
    type: gcp-types/iam-v1:projects.serviceAccounts
    properties:
      accountId: error-monitoring-sa-{{ properties.random_suffix }}
      serviceAccount:
        displayName: Error Monitoring Service Account
        description: Service account for error monitoring Cloud Functions
      projectId: $(ref.project_id.projectId)

  # IAM roles for the service account
  - name: error-monitoring-sa-error-reporting-role
    type: gcp-types/cloudresourcemanager-v1:projects.iamPolicy
    properties:
      projectId: $(ref.project_id.projectId)
      policy:
        bindings:
          - role: roles/errorreporting.writer
            members:
              - serviceAccount:$(ref.error-monitoring-service-account.email)
    metadata:
      dependsOn:
        - error-monitoring-service-account

  - name: error-monitoring-sa-monitoring-role
    type: gcp-types/cloudresourcemanager-v1:projects.iamPolicy
    properties:
      projectId: $(ref.project_id.projectId)
      policy:
        bindings:
          - role: roles/monitoring.editor
            members:
              - serviceAccount:$(ref.error-monitoring-service-account.email)
    metadata:
      dependsOn:
        - error-monitoring-service-account

  - name: error-monitoring-sa-logging-role
    type: gcp-types/cloudresourcemanager-v1:projects.iamPolicy
    properties:
      projectId: $(ref.project_id.projectId)
      policy:
        bindings:
          - role: roles/logging.viewer
            members:
              - serviceAccount:$(ref.error-monitoring-service-account.email)
    metadata:
      dependsOn:
        - error-monitoring-service-account

  - name: error-monitoring-sa-firestore-role
    type: gcp-types/cloudresourcemanager-v1:projects.iamPolicy
    properties:
      projectId: $(ref.project_id.projectId)
      policy:
        bindings:
          - role: roles/datastore.user
            members:
              - serviceAccount:$(ref.error-monitoring-service-account.email)
    metadata:
      dependsOn:
        - error-monitoring-service-account

  - name: error-monitoring-sa-storage-role
    type: gcp-types/cloudresourcemanager-v1:projects.iamPolicy
    properties:
      projectId: $(ref.project_id.projectId)
      policy:
        bindings:
          - role: roles/storage.objectAdmin
            members:
              - serviceAccount:$(ref.error-monitoring-service-account.email)
    metadata:
      dependsOn:
        - error-monitoring-service-account

  - name: error-monitoring-sa-pubsub-role
    type: gcp-types/cloudresourcemanager-v1:projects.iamPolicy
    properties:
      projectId: $(ref.project_id.projectId)
      policy:
        bindings:
          - role: roles/pubsub.publisher
            members:
              - serviceAccount:$(ref.error-monitoring-service-account.email)
    metadata:
      dependsOn:
        - error-monitoring-service-account

  # Source code storage for Cloud Functions
  - name: function-source-bucket
    type: gcp-types/storage-v1:buckets
    properties:
      name: error-monitoring-functions-{{ properties.random_suffix }}
      project: $(ref.project_id.projectId)
      location: {{ properties.region }}
      storageClass: STANDARD
      labels:
        purpose: error-monitoring
        component: function-source
    metadata:
      dependsOn:
        - enable-storage-api

  # Error processor Cloud Function
  - name: error-processor-function
    type: gcp-types/cloudfunctions-v1:projects.locations.functions
    properties:
      parent: projects/$(ref.project_id.projectId)/locations/{{ properties.region }}
      function:
        name: error-processor-{{ properties.random_suffix }}
        description: Processes error events from Cloud Error Reporting
        sourceArchiveUrl: gs://$(ref.function-source-bucket.name)/error-processor-source.zip
        eventTrigger:
          eventType: providers/cloud.pubsub/eventTypes/topic.publish
          resource: $(ref.error-notifications-topic.name)
          failurePolicy:
            retry: {}
        runtime: python39
        timeout: 60s
        availableMemoryMb: 256
        serviceAccountEmail: $(ref.error-monitoring-service-account.email)
        environmentVariables:
          GCP_PROJECT: $(ref.project_id.projectId)
          ALERT_TOPIC: error-notifications-{{ properties.random_suffix }}-alerts
          DEBUG_TOPIC: error-notifications-{{ properties.random_suffix }}-debug
        labels:
          purpose: error-monitoring
          component: error-processor
    metadata:
      dependsOn:
        - enable-cloudfunctions-api
        - error-notifications-topic
        - error-monitoring-service-account
        - function-source-bucket

  # Alert router Cloud Function
  - name: alert-router-function
    type: gcp-types/cloudfunctions-v1:projects.locations.functions
    properties:
      parent: projects/$(ref.project_id.projectId)/locations/{{ properties.region }}
      function:
        name: error-processor-{{ properties.random_suffix }}-router
        description: Routes error alerts to appropriate notification channels
        sourceArchiveUrl: gs://$(ref.function-source-bucket.name)/alert-router-source.zip
        eventTrigger:
          eventType: providers/cloud.pubsub/eventTypes/topic.publish
          resource: $(ref.error-alerts-topic.name)
          failurePolicy:
            retry: {}
        runtime: python39
        timeout: 60s
        availableMemoryMb: 256
        serviceAccountEmail: $(ref.error-monitoring-service-account.email)
        environmentVariables:
          GCP_PROJECT: $(ref.project_id.projectId)
          SLACK_WEBHOOK: {{ properties.slack_webhook_url }}
        labels:
          purpose: error-monitoring
          component: alert-router
    metadata:
      dependsOn:
        - enable-cloudfunctions-api
        - error-alerts-topic
        - error-monitoring-service-account
        - function-source-bucket

  # Debug automation Cloud Function
  - name: debug-automation-function
    type: gcp-types/cloudfunctions-v1:projects.locations.functions
    properties:
      parent: projects/$(ref.project_id.projectId)/locations/{{ properties.region }}
      function:
        name: error-processor-{{ properties.random_suffix }}-debug
        description: Automates debugging workflows and context collection
        sourceArchiveUrl: gs://$(ref.function-source-bucket.name)/debug-automation-source.zip
        eventTrigger:
          eventType: providers/cloud.pubsub/eventTypes/topic.publish
          resource: $(ref.error-debug-topic.name)
          failurePolicy:
            retry: {}
        runtime: python39
        timeout: 120s
        availableMemoryMb: 512
        serviceAccountEmail: $(ref.error-monitoring-service-account.email)
        environmentVariables:
          GCP_PROJECT: $(ref.project_id.projectId)
          DEBUG_BUCKET: $(ref.debug-storage-bucket.name)
        labels:
          purpose: error-monitoring
          component: debug-automation
    metadata:
      dependsOn:
        - enable-cloudfunctions-api
        - error-debug-topic
        - error-monitoring-service-account
        - function-source-bucket
        - debug-storage-bucket

  # Sample application Cloud Function for testing
  - name: sample-error-app-function
    type: gcp-types/cloudfunctions-v1:projects.locations.functions
    properties:
      parent: projects/$(ref.project_id.projectId)/locations/{{ properties.region }}
      function:
        name: sample-error-app
        description: Sample application that generates various types of errors for testing
        sourceArchiveUrl: gs://$(ref.function-source-bucket.name)/sample-app-source.zip
        httpsTrigger:
          securityLevel: SECURE_ALWAYS
        runtime: python39
        timeout: 60s
        availableMemoryMb: 128
        serviceAccountEmail: $(ref.error-monitoring-service-account.email)
        environmentVariables:
          GCP_PROJECT: $(ref.project_id.projectId)
        labels:
          purpose: error-monitoring
          component: sample-app
    metadata:
      dependsOn:
        - enable-cloudfunctions-api
        - error-monitoring-service-account
        - function-source-bucket

  # Log sink for error notifications
  - name: error-notification-log-sink
    type: gcp-types/logging-v2:projects.sinks
    properties:
      parent: projects/$(ref.project_id.projectId)
      sink:
        name: error-notification-sink
        description: Routes error events to Pub/Sub for automated processing
        destination: pubsub.googleapis.com/$(ref.error-notifications-topic.name)
        filter: 'protoPayload.serviceName="clouderrorreporting.googleapis.com"'
        includeChildren: true
        writerIdentity: serviceAccount:$(ref.error-monitoring-service-account.email)
    metadata:
      dependsOn:
        - enable-logging-api
        - error-notifications-topic
        - error-monitoring-service-account

  # Pub/Sub IAM binding for log sink
  - name: log-sink-pubsub-permission
    type: gcp-types/pubsub-v1:projects.topics.setIamPolicy
    properties:
      resource: $(ref.error-notifications-topic.name)
      policy:
        bindings:
          - role: roles/pubsub.publisher
            members:
              - $(ref.error-notification-log-sink.writerIdentity)
    metadata:
      dependsOn:
        - error-notification-log-sink

  # Cloud Monitoring dashboard
  - name: error-monitoring-dashboard
    type: gcp-types/monitoring-v1:projects.dashboards
    properties:
      parent: projects/$(ref.project_id.projectId)
      dashboard:
        displayName: Error Monitoring Dashboard
        mosaicLayout:
          tiles:
            - width: 6
              height: 4
              widget:
                title: Error Rate by Service
                xyChart:
                  dataSets:
                    - timeSeriesQuery:
                        timeSeriesFilter:
                          filter: 'resource.type="gae_app"'
                          aggregation:
                            alignmentPeriod: 60s
                            perSeriesAligner: ALIGN_RATE
                            crossSeriesReducer: REDUCE_SUM
                            groupByFields:
                              - resource.label.module_id
                  timeshiftDuration: 0s
                  yAxis:
                    label: Errors per minute
                    scale: LINEAR
            - width: 6
              height: 4
              xPos: 6
              widget:
                title: Error Processing Functions
                xyChart:
                  dataSets:
                    - timeSeriesQuery:
                        timeSeriesFilter:
                          filter: 'resource.type="cloud_function"'
                          aggregation:
                            alignmentPeriod: 60s
                            perSeriesAligner: ALIGN_RATE
                            crossSeriesReducer: REDUCE_SUM
                            groupByFields:
                              - resource.label.function_name
                  yAxis:
                    label: Executions per minute
                    scale: LINEAR
            - width: 12
              height: 4
              yPos: 4
              widget:
                title: Critical Error Alerts
                scorecard:
                  timeSeriesQuery:
                    timeSeriesFilter:
                      filter: 'resource.type="global"'
                      aggregation:
                        alignmentPeriod: 300s
                        perSeriesAligner: ALIGN_SUM
                        crossSeriesReducer: REDUCE_SUM
                  sparkChartView:
                    sparkChartType: SPARK_LINE
        labels:
          purpose: error-monitoring
          component: dashboard
    metadata:
      dependsOn:
        - enable-cloudmonitoring-api

  # Alert policy for critical errors
  - name: critical-error-alert-policy
    type: gcp-types/monitoring-v1:projects.alertPolicies
    properties:
      parent: projects/$(ref.project_id.projectId)
      alertPolicy:
        displayName: Critical Error Alert Policy
        documentation:
          content: |
            This alert policy triggers when critical errors are detected in the system.
            It monitors error rates across all services and sends notifications when
            thresholds are exceeded.
          mimeType: text/markdown
        conditions:
          - displayName: High error rate condition
            conditionThreshold:
              filter: 'resource.type="gae_app"'
              comparison: COMPARISON_GREATER_THAN
              thresholdValue: 5
              duration: 300s
              aggregations:
                - alignmentPeriod: 300s
                  perSeriesAligner: ALIGN_RATE
                  crossSeriesReducer: REDUCE_SUM
        enabled: true
        alertStrategy:
          autoClose: 1800s
        combiner: OR
        notificationChannels: {{ properties.notification_channels }}
    metadata:
      dependsOn:
        - enable-cloudmonitoring-api

# Output values for integration and verification
outputs:
  project_id:
    description: Google Cloud Project ID
    value: $(ref.project_id.projectId)
    
  region:
    description: Deployment region
    value: {{ properties.region }}
    
  error_notifications_topic:
    description: Pub/Sub topic for error notifications
    value: $(ref.error-notifications-topic.name)
    
  error_alerts_topic:
    description: Pub/Sub topic for error alerts
    value: $(ref.error-alerts-topic.name)
    
  error_debug_topic:
    description: Pub/Sub topic for debug automation
    value: $(ref.error-debug-topic.name)
    
  debug_storage_bucket:
    description: Cloud Storage bucket for debug data
    value: $(ref.debug-storage-bucket.name)
    
  error_processor_function:
    description: Error processor Cloud Function name
    value: $(ref.error-processor-function.name)
    
  alert_router_function:
    description: Alert router Cloud Function name
    value: $(ref.alert-router-function.name)
    
  debug_automation_function:
    description: Debug automation Cloud Function name
    value: $(ref.debug-automation-function.name)
    
  sample_error_app_function:
    description: Sample error application Cloud Function name
    value: $(ref.sample-error-app-function.name)
    
  sample_app_url:
    description: Sample application trigger URL for testing
    value: $(ref.sample-error-app-function.httpsTrigger.url)
    
  service_account_email:
    description: Service account email for error monitoring functions
    value: $(ref.error-monitoring-service-account.email)
    
  monitoring_dashboard_url:
    description: URL to the Cloud Monitoring dashboard
    value: https://console.cloud.google.com/monitoring/dashboards/custom/$(ref.error-monitoring-dashboard.name)?project=$(ref.project_id.projectId)
    
  error_reporting_url:
    description: URL to Cloud Error Reporting console
    value: https://console.cloud.google.com/errors?project=$(ref.project_id.projectId)
    
  firestore_console_url:
    description: URL to Firestore console for error tracking data
    value: https://console.firebase.google.com/project/$(ref.project_id.projectId)/firestore