# =============================================================================
# Python Dependencies for Multi-Agent Content Analysis Cloud Function
# =============================================================================
# This file specifies all Python packages required for the Cloud Function
# that triggers multi-agent content analysis workflows.
# =============================================================================

# Functions Framework - Core Cloud Functions runtime
functions-framework==3.5.0

# Google Cloud Client Libraries
# -----------------------------------------------------------------------------
# Cloud Workflows - For triggering and managing workflow executions
google-cloud-workflows==1.14.1

# Cloud Storage - For accessing and managing storage objects and metadata
google-cloud-storage==2.10.0

# Cloud Logging - For structured logging and error reporting
google-cloud-logging==3.8.0

# Core Google Cloud Libraries
# -----------------------------------------------------------------------------
# Core authentication and common utilities
google-auth==2.23.4

# HTTP client optimized for Google Cloud APIs
google-api-core==2.12.0

# Protocol Buffers - For efficient API communication
protobuf==4.25.1

# Utility Libraries
# -----------------------------------------------------------------------------
# HTTP requests library (used by Google Cloud libraries)
requests==2.31.0

# URL parsing and manipulation
urllib3==2.0.7

# JSON processing (part of Python standard library, listed for completeness)
# json - Built-in Python module

# Date and time handling (part of Python standard library)
# datetime - Built-in Python module

# Regular expressions (part of Python standard library)
# re - Built-in Python module

# Type hints support (part of Python standard library in Python 3.5+)
# typing - Built-in Python module

# Development and Testing Dependencies (Optional)
# -----------------------------------------------------------------------------
# Uncomment these for local development and testing
# pytest==7.4.3
# pytest-cov==4.1.0
# black==23.11.0
# flake8==6.1.0
# mypy==1.7.1

# Performance and Monitoring
# -----------------------------------------------------------------------------
# OpenTelemetry for distributed tracing (optional)
# opentelemetry-api==1.21.0
# opentelemetry-sdk==1.21.0
# opentelemetry-instrumentation-requests==0.42b0

# Security
# -----------------------------------------------------------------------------
# Certificate verification and security
certifi==2023.7.22

# Character encoding detection
charset-normalizer==3.3.2

# Cryptographic signatures
cryptography==41.0.7

# Version Compatibility Notes
# -----------------------------------------------------------------------------
# functions-framework 3.5.0:
# - Compatible with Python 3.8+
# - Supports CloudEvents v1.0 specification
# - Includes enhanced error handling and logging
# - Supports both HTTP and event-driven functions
#
# google-cloud-workflows 1.14.1:
# - Latest stable version with Gemini 2.5 support
# - Enhanced error handling for workflow executions
# - Support for complex workflow definitions
# - Improved retry mechanisms
#
# google-cloud-storage 2.10.0:
# - Supports latest storage features
# - Enhanced metadata handling
# - Improved performance for large files
# - Better error reporting
#
# google-cloud-logging 3.8.0:
# - Structured logging support
# - Integration with Cloud Monitoring
# - Enhanced log correlation
# - Support for custom log entries

# Installation Notes
# -----------------------------------------------------------------------------
# This requirements.txt file is optimized for Google Cloud Functions
# Python 3.11 runtime. All versions are pinned to ensure consistent
# deployments and avoid dependency conflicts.
#
# To install locally for development:
# pip install -r requirements.txt
#
# To update dependencies:
# 1. Update version numbers in this file
# 2. Test thoroughly in development environment
# 3. Deploy to staging environment for validation
# 4. Deploy to production after successful testing
#
# Security considerations:
# - All packages are from trusted sources (PyPI official packages)
# - Versions are pinned to avoid supply chain attacks
# - Regular security updates should be applied
# - Monitor for CVEs in these dependencies

# Cloud Function Specific Considerations
# -----------------------------------------------------------------------------
# - Functions runtime has a cold start penalty
# - Import optimization is important for performance
# - Memory usage should be monitored
# - Consider using global variables for client initialization
# - Implement proper error handling for all external calls
# - Use structured logging for better observability

# Performance Optimization
# -----------------------------------------------------------------------------
# - Google Cloud client libraries use connection pooling
# - Reuse client instances across function invocations
# - Implement retry logic with exponential backoff
# - Use asynchronous operations where possible
# - Monitor function execution time and memory usage