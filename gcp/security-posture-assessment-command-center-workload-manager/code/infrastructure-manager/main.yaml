# Infrastructure Manager Configuration for Security Posture Assessment
# This configuration deploys a comprehensive security posture assessment system
# using Google Cloud's Security Command Center, Workload Manager, and supporting services

# Configure the Google Cloud provider
terraform:
  required_providers:
    google:
      source: hashicorp/google
      version: ~> 5.0
  required_version: ">= 1.0"

# Input variables for customization
variables:
  project_id:
    type: string
    description: "Google Cloud project ID"
    
  region:
    type: string
    description: "Primary deployment region"
    default: "us-central1"
    
  zone:
    type: string
    description: "Primary deployment zone"
    default: "us-central1-a"
    
  organization_id:
    type: string
    description: "Google Cloud organization ID"
    
  random_suffix:
    type: string
    description: "Random suffix for resource names"
    default: "a1b2c3"
    
  schedule_interval:
    type: string
    description: "Cron schedule for security evaluations"
    default: "0 */4 * * *"

# Configure the Google Cloud provider
provider:
  google:
    project: ${var.project_id}
    region: ${var.region}
    zone: ${var.zone}

# Enable required Google Cloud APIs
resources:
  # Security Command Center API
  security_center_api:
    type: google_project_service
    properties:
      project: ${var.project_id}
      service: securitycenter.googleapis.com
      disable_dependent_services: true
      disable_on_destroy: false
      
  # Workload Manager API
  workload_manager_api:
    type: google_project_service
    properties:
      project: ${var.project_id}
      service: workloadmanager.googleapis.com
      disable_dependent_services: true
      disable_on_destroy: false
      
  # Cloud Functions API
  cloud_functions_api:
    type: google_project_service
    properties:
      project: ${var.project_id}
      service: cloudfunctions.googleapis.com
      disable_dependent_services: true
      disable_on_destroy: false
      
  # Pub/Sub API
  pubsub_api:
    type: google_project_service
    properties:
      project: ${var.project_id}
      service: pubsub.googleapis.com
      disable_dependent_services: true
      disable_on_destroy: false
      
  # Cloud Scheduler API
  scheduler_api:
    type: google_project_service
    properties:
      project: ${var.project_id}
      service: cloudscheduler.googleapis.com
      disable_dependent_services: true
      disable_on_destroy: false
      
  # Cloud Logging API
  logging_api:
    type: google_project_service
    properties:
      project: ${var.project_id}
      service: logging.googleapis.com
      disable_dependent_services: true
      disable_on_destroy: false
      
  # Cloud Monitoring API
  monitoring_api:
    type: google_project_service
    properties:
      project: ${var.project_id}
      service: monitoring.googleapis.com
      disable_dependent_services: true
      disable_on_destroy: false

  # Create Pub/Sub topic for security events
  security_events_topic:
    type: google_pubsub_topic
    properties:
      name: security-events-${var.random_suffix}
      project: ${var.project_id}
      labels:
        purpose: security-automation
        environment: production
    depends_on:
      - ${pubsub_api}

  # Create Pub/Sub subscription for Cloud Function
  security_events_subscription:
    type: google_pubsub_subscription
    properties:
      name: security-events-${var.random_suffix}-subscription
      topic: ${security_events_topic.name}
      project: ${var.project_id}
      ack_deadline_seconds: 300
      retry_policy:
        minimum_backoff: 10s
        maximum_backoff: 300s
      dead_letter_policy:
        max_delivery_attempts: 5
    depends_on:
      - ${security_events_topic}

  # Create Cloud Storage bucket for function source code and logs
  security_logs_bucket:
    type: google_storage_bucket
    properties:
      name: ${var.project_id}-security-logs-${var.random_suffix}
      project: ${var.project_id}
      location: ${var.region}
      force_destroy: true
      uniform_bucket_level_access: true
      versioning:
        enabled: true
      lifecycle_rule:
        - condition:
            age: 30
          action:
            type: Delete
      labels:
        purpose: security-logs
        environment: production

  # Create IAM service account for security automation
  security_automation_sa:
    type: google_service_account
    properties:
      account_id: security-automation-${var.random_suffix}
      display_name: Security Automation Service Account
      description: Service account for automated security operations
      project: ${var.project_id}

  # Grant Security Command Center Admin role to service account
  scc_admin_binding:
    type: google_project_iam_member
    properties:
      project: ${var.project_id}
      role: roles/securitycenter.admin
      member: serviceAccount:${security_automation_sa.email}

  # Grant Workload Manager Admin role to service account
  workload_manager_admin_binding:
    type: google_project_iam_member
    properties:
      project: ${var.project_id}
      role: roles/workloadmanager.admin
      member: serviceAccount:${security_automation_sa.email}

  # Grant Cloud Functions Invoker role to service account
  functions_invoker_binding:
    type: google_project_iam_member
    properties:
      project: ${var.project_id}
      role: roles/cloudfunctions.invoker
      member: serviceAccount:${security_automation_sa.email}

  # Grant Pub/Sub Subscriber role to service account
  pubsub_subscriber_binding:
    type: google_project_iam_member
    properties:
      project: ${var.project_id}
      role: roles/pubsub.subscriber
      member: serviceAccount:${security_automation_sa.email}

  # Grant Storage Object Admin role to service account
  storage_admin_binding:
    type: google_project_iam_member
    properties:
      project: ${var.project_id}
      role: roles/storage.objectAdmin
      member: serviceAccount:${security_automation_sa.email}

  # Grant Monitoring Metric Writer role to service account
  monitoring_writer_binding:
    type: google_project_iam_member
    properties:
      project: ${var.project_id}
      role: roles/monitoring.metricWriter
      member: serviceAccount:${security_automation_sa.email}

  # Grant Logging Writer role to service account
  logging_writer_binding:
    type: google_project_iam_member
    properties:
      project: ${var.project_id}
      role: roles/logging.logWriter
      member: serviceAccount:${security_automation_sa.email}

  # Create Cloud Function source code archive
  function_source_archive:
    type: google_storage_bucket_object
    properties:
      name: security-remediation-function-${var.random_suffix}.zip
      bucket: ${security_logs_bucket.name}
      source: data:application/zip;base64,UEsDBBQAAAAIALqGelUAAAAA...
      # Note: In a real deployment, this would be the actual ZIP file
      # containing the Python function code from the recipe
    depends_on:
      - ${security_logs_bucket}

  # Deploy Cloud Function for security remediation
  security_remediation_function:
    type: google_cloudfunctions_function
    properties:
      name: security-remediation-${var.random_suffix}
      project: ${var.project_id}
      region: ${var.region}
      runtime: python39
      entry_point: process_security_event
      source_archive_bucket: ${security_logs_bucket.name}
      source_archive_object: ${function_source_archive.name}
      service_account_email: ${security_automation_sa.email}
      timeout: 300
      available_memory_mb: 512
      
      event_trigger:
        event_type: google.pubsub.topic.publish
        resource: ${security_events_topic.name}
        
      environment_variables:
        PROJECT_ID: ${var.project_id}
        REGION: ${var.region}
        ORGANIZATION_ID: ${var.organization_id}
        
      labels:
        purpose: security-automation
        environment: production
        
    depends_on:
      - ${function_source_archive}
      - ${security_automation_sa}
      - ${cloud_functions_api}

  # Create Security Command Center notification configuration
  scc_notification:
    type: google_scc_notification_config
    properties:
      config_id: security-findings-notification-${var.random_suffix}
      organization: ${var.organization_id}
      description: Security findings for automated processing
      pubsub_topic: ${security_events_topic.id}
      streaming_config:
        filter: "state=\"ACTIVE\""
    depends_on:
      - ${security_events_topic}
      - ${security_center_api}

  # Create Workload Manager evaluation rule
  workload_manager_rule:
    type: google_workload_manager_rule
    properties:
      name: security-compliance-${var.random_suffix}
      project: ${var.project_id}
      location: ${var.region}
      description: Security compliance validation rules
      
      rule_spec:
        rules:
          - rule_id: ensure-vm-shielded
            description: Verify VMs have Shielded VM enabled
            resource_type: compute.googleapis.com/Instance
            severity: HIGH
            
          - rule_id: check-storage-encryption
            description: Ensure Cloud Storage uses customer-managed encryption
            resource_type: storage.googleapis.com/Bucket
            severity: CRITICAL
            
          - rule_id: verify-network-security
            description: Check network security configurations
            resource_type: compute.googleapis.com/Network
            severity: MEDIUM
            
    depends_on:
      - ${workload_manager_api}

  # Create scheduled Cloud Scheduler job for periodic evaluations
  security_evaluation_job:
    type: google_cloud_scheduler_job
    properties:
      name: security-posture-evaluation-${var.random_suffix}
      project: ${var.project_id}
      region: ${var.region}
      description: Trigger security posture evaluation
      schedule: ${var.schedule_interval}
      time_zone: UTC
      
      pubsub_target:
        topic_name: ${security_events_topic.id}
        data: base64encode(jsonencode({
          event_type: "scheduled_evaluation"
          source: "automation"
          timestamp: timestamp()
        }))
        
    depends_on:
      - ${security_events_topic}
      - ${scheduler_api}

  # Create Cloud Monitoring dashboard for security metrics
  security_dashboard:
    type: google_monitoring_dashboard
    properties:
      project: ${var.project_id}
      dashboard_json: jsonencode({
        displayName: "Security Posture Dashboard"
        mosaicLayout: {
          tiles: [
            {
              width: 6
              height: 4
              widget: {
                title: "Security Findings by Severity"
                xyChart: {
                  dataSets: [
                    {
                      timeSeriesQuery: {
                        timeSeriesFilter: {
                          filter: "resource.type=\"gce_instance\""
                          aggregation: {
                            alignmentPeriod: "300s"
                            perSeriesAligner: "ALIGN_RATE"
                            crossSeriesReducer: "REDUCE_SUM"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
            {
              width: 6
              height: 4
              widget: {
                title: "Remediation Function Executions"
                xyChart: {
                  dataSets: [
                    {
                      timeSeriesQuery: {
                        timeSeriesFilter: {
                          filter: "resource.type=\"cloud_function\" AND resource.labels.function_name=\"${security_remediation_function.name}\""
                          aggregation: {
                            alignmentPeriod: "300s"
                            perSeriesAligner: "ALIGN_RATE"
                            crossSeriesReducer: "REDUCE_SUM"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      })
      
    depends_on:
      - ${security_remediation_function}
      - ${monitoring_api}

  # Create log sink for security events
  security_log_sink:
    type: google_logging_project_sink
    properties:
      name: security-events-sink-${var.random_suffix}
      project: ${var.project_id}
      description: Forward security events to Cloud Storage
      destination: storage.googleapis.com/${security_logs_bucket.name}
      filter: |
        resource.type="cloud_function"
        resource.labels.function_name="${security_remediation_function.name}"
        OR
        resource.type="gce_instance"
        OR
        resource.type="gcs_bucket"
      unique_writer_identity: true
      
    depends_on:
      - ${security_logs_bucket}
      - ${security_remediation_function}
      - ${logging_api}

  # Grant Storage Object Creator role to log sink writer
  log_sink_storage_binding:
    type: google_storage_bucket_iam_member
    properties:
      bucket: ${security_logs_bucket.name}
      role: roles/storage.objectCreator
      member: ${security_log_sink.writer_identity}

# Output important resource information
outputs:
  security_events_topic_name:
    description: Name of the Pub/Sub topic for security events
    value: ${security_events_topic.name}
    
  security_function_name:
    description: Name of the security remediation Cloud Function
    value: ${security_remediation_function.name}
    
  security_service_account_email:
    description: Email of the security automation service account
    value: ${security_automation_sa.email}
    
  security_logs_bucket_name:
    description: Name of the Cloud Storage bucket for security logs
    value: ${security_logs_bucket.name}
    
  monitoring_dashboard_url:
    description: URL to the security monitoring dashboard
    value: "https://console.cloud.google.com/monitoring/dashboards/custom/${security_dashboard.id}?project=${var.project_id}"
    
  workload_manager_rule_name:
    description: Name of the Workload Manager security rule
    value: ${workload_manager_rule.name}
    
  scheduler_job_name:
    description: Name of the Cloud Scheduler job for periodic evaluations
    value: ${security_evaluation_job.name}
    
  scc_notification_config_name:
    description: Name of the Security Command Center notification configuration
    value: ${scc_notification.name}