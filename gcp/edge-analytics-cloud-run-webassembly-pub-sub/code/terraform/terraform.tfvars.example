# Edge Analytics Infrastructure Configuration
# Copy this file to terraform.tfvars and customize for your deployment

# ==============================================================================
# REQUIRED VARIABLES
# ==============================================================================

# Google Cloud Project ID where resources will be deployed
project_id = "your-gcp-project-id"

# Google Cloud region for resource deployment
region = "us-central1"

# Google Cloud zone within the region
zone = "us-central1-a"

# ==============================================================================
# ENVIRONMENT CONFIGURATION
# ==============================================================================

# Environment name (affects resource naming and configuration)
environment = "dev"

# Resource naming prefix
resource_prefix = "edge-analytics"

# Whether to append random suffix to resource names for uniqueness
use_random_suffix = true

# ==============================================================================
# CLOUD RUN CONFIGURATION
# ==============================================================================

# Container image for Cloud Run service
# Leave empty to use placeholder image, then update after infrastructure deployment
container_image = ""

# Memory allocation for Cloud Run instances
cloud_run_memory = "1Gi"

# CPU allocation for Cloud Run instances
cloud_run_cpu = "2"

# Maximum concurrent requests per instance
cloud_run_concurrency = 80

# Instance scaling configuration
cloud_run_min_instances = 0
cloud_run_max_instances = 100

# Request timeout in seconds
cloud_run_timeout = 300

# Ingress configuration
ingress = "INGRESS_TRAFFIC_ALL"

# Allow unauthenticated access (set to false for production)
enable_cloud_run_all_users = true

# ==============================================================================
# CLOUD STORAGE CONFIGURATION
# ==============================================================================

# Storage location (region or multi-region)
storage_location = "US"

# Default storage class
storage_class = "STANDARD"

# Enable storage versioning
enable_versioning = true

# Enable lifecycle management for cost optimization
enable_lifecycle_management = true

# Days after which objects transition to Nearline storage
lifecycle_age_nearline = 30

# Days after which objects transition to Coldline storage
lifecycle_age_coldline = 90

# ==============================================================================
# PUB/SUB CONFIGURATION
# ==============================================================================

# Message retention duration for Pub/Sub topic
message_retention_duration = "7d"

# Acknowledgment deadline for subscription (seconds)
subscription_ack_deadline = 60

# Retry configuration for failed message deliveries
max_retry_delay = 600
min_retry_delay = 10

# ==============================================================================
# FIRESTORE CONFIGURATION
# ==============================================================================

# Firestore database location
firestore_location = "us-central"

# Firestore database type
firestore_type = "FIRESTORE_NATIVE"

# ==============================================================================
# MONITORING CONFIGURATION
# ==============================================================================

# Enable Cloud Monitoring alert policies
enable_monitoring_alerts = true

# Threshold for anomaly detection alerts (anomalies per minute)
anomaly_threshold = 5

# Duration for alert conditions
alert_duration = "300s"

# Notification channels for alerts (list of channel IDs)
# Get channel IDs from: gcloud alpha monitoring channels list
notification_channels = []

# Log retention period in days
log_retention_days = 30

# ==============================================================================
# SECURITY CONFIGURATION
# ==============================================================================

# Enable Binary Authorization for container security
enable_binary_authorization = false

# ==============================================================================
# API CONFIGURATION
# ==============================================================================

# Whether to enable required Google Cloud APIs automatically
enable_apis = true

# ==============================================================================
# RESOURCE LABELS
# ==============================================================================

# Labels to apply to all resources
labels = {
  managed-by = "terraform"
  component  = "edge-analytics"
  project    = "iot-edge-analytics"
  team       = "platform-engineering"
}

# ==============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# ==============================================================================

# Development Environment Example:
# environment = "dev"
# cloud_run_min_instances = 0
# cloud_run_max_instances = 10
# enable_monitoring_alerts = false
# storage_class = "STANDARD"

# Staging Environment Example:
# environment = "staging"
# cloud_run_min_instances = 1
# cloud_run_max_instances = 50
# enable_monitoring_alerts = true
# storage_class = "STANDARD"

# Production Environment Example:
# environment = "prod"
# cloud_run_min_instances = 2
# cloud_run_max_instances = 100
# enable_monitoring_alerts = true
# enable_binary_authorization = true
# storage_class = "STANDARD"
# notification_channels = [
#   "projects/your-project/notificationChannels/12345678901234567890"
# ]

# ==============================================================================
# COST OPTIMIZATION SETTINGS
# ==============================================================================

# For development/testing (cost-optimized):
# cloud_run_min_instances = 0
# cloud_run_memory = "512Mi"
# cloud_run_cpu = "1"
# storage_class = "NEARLINE"
# lifecycle_age_nearline = 7
# lifecycle_age_coldline = 30

# For production (performance-optimized):
# cloud_run_min_instances = 2
# cloud_run_memory = "2Gi"
# cloud_run_cpu = "4"
# storage_class = "STANDARD"
# lifecycle_age_nearline = 30
# lifecycle_age_coldline = 90