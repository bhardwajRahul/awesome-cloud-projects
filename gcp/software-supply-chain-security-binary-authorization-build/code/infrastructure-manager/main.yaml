# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Infrastructure Manager Configuration for Software Supply Chain Security
# This configuration deploys Binary Authorization with Cloud Build for secure container deployments
# Recipe ID: f4e8d2a9
# Version: 1.0
# Generated: 2025-07-12

# Input Variables
inputs:
  # Project and Location Configuration
  - name: project_id
    description: "Google Cloud Project ID where resources will be created"
    type: string
    required: true
    
  - name: region
    description: "Google Cloud region for regional resources (KMS, Artifact Registry)"
    type: string
    default: "us-central1"
    
  - name: zone
    description: "Google Cloud zone for zonal resources (GKE cluster)"
    type: string
    default: "us-central1-a"
    
  # Resource Naming Configuration
  - name: cluster_name
    description: "Name for the GKE cluster with Binary Authorization"
    type: string
    default: "secure-cluster"
    
  - name: repo_name
    description: "Name for the Artifact Registry repository"
    type: string
    default: "secure-images"
    
  - name: keyring_name
    description: "Name for the Cloud KMS key ring"
    type: string
    default: "binauthz-keyring"
    
  - name: key_name
    description: "Name for the Cloud KMS asymmetric signing key"
    type: string
    default: "attestor-key"
    
  - name: attestor_name
    description: "Name for the Binary Authorization attestor"
    type: string
    default: "build-attestor"
    
  # GKE Configuration
  - name: gke_machine_type
    description: "Machine type for GKE cluster nodes"
    type: string
    default: "e2-medium"
    
  - name: gke_min_nodes
    description: "Minimum number of nodes in GKE cluster"
    type: number
    default: 1
    
  - name: gke_max_nodes
    description: "Maximum number of nodes in GKE cluster"
    type: number
    default: 3
    
  # Security Configuration
  - name: enforcement_mode
    description: "Binary Authorization enforcement mode"
    type: string
    default: "ENFORCED_BLOCK_AND_AUDIT_LOG"
    
  - name: enable_workload_identity
    description: "Enable Workload Identity for enhanced security"
    type: boolean
    default: true
    
  - name: enable_shielded_nodes
    description: "Enable Shielded GKE nodes for additional security"
    type: boolean
    default: true

# Resource Definitions
resources:
  # Enable Required Google Cloud APIs
  - name: enable-container-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id)/services/container.googleapis.com
      
  - name: enable-cloudbuild-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id)/services/cloudbuild.googleapis.com
      
  - name: enable-binaryauthorization-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id)/services/binaryauthorization.googleapis.com
      
  - name: enable-cloudkms-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id)/services/cloudkms.googleapis.com
      
  - name: enable-artifactregistry-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id)/services/artifactregistry.googleapis.com
      
  - name: enable-containeranalysis-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id)/services/containeranalysis.googleapis.com

  # Artifact Registry Repository for Secure Container Storage
  # This repository provides vulnerability scanning and secure storage for container images
  - name: artifact-registry-repo
    type: gcp-types/artifactregistry-v1:projects.locations.repositories
    properties:
      parent: projects/$(ref.project_id)/locations/$(ref.region)
      repositoryId: $(ref.repo_name)
      repository:
        description: "Secure container repository with vulnerability scanning for supply chain security"
        format: DOCKER
        dockerConfig:
          immutableTags: false
        labels:
          purpose: "supply-chain-security"
          environment: "production"
          managed-by: "infrastructure-manager"
    depends_on:
      - enable-artifactregistry-api
    metadata:
      dependsOn:
        - enable-artifactregistry-api

  # Cloud KMS Key Ring for Cryptographic Operations
  # Provides secure key management for attestation signing
  - name: kms-keyring
    type: gcp-types/cloudkms-v1:projects.locations.keyRings
    properties:
      parent: projects/$(ref.project_id)/locations/$(ref.region)
      keyRingId: $(ref.keyring_name)
      keyRing:
        name: projects/$(ref.project_id)/locations/$(ref.region)/keyRings/$(ref.keyring_name)
    depends_on:
      - enable-cloudkms-api
    metadata:
      dependsOn:
        - enable-cloudkms-api

  # Cloud KMS Asymmetric Signing Key for Attestations
  # This key generates cryptographic signatures for Binary Authorization attestations
  - name: kms-signing-key
    type: gcp-types/cloudkms-v1:projects.locations.keyRings.cryptoKeys
    properties:
      parent: $(ref.kms-keyring.name)
      cryptoKeyId: $(ref.key_name)
      cryptoKey:
        purpose: ASYMMETRIC_SIGN
        versionTemplate:
          algorithm: RSA_SIGN_PSS_2048_SHA256
          protectionLevel: SOFTWARE
        labels:
          purpose: "binary-authorization"
          environment: "production"
          managed-by: "infrastructure-manager"
    depends_on:
      - kms-keyring
    metadata:
      dependsOn:
        - kms-keyring

  # Container Analysis Note for Attestations
  # Provides storage for Binary Authorization attestation metadata
  - name: container-analysis-note
    type: gcp-types/containeranalysis-v1:projects.notes
    properties:
      parent: projects/$(ref.project_id)
      noteId: $(ref.attestor_name)-note
      note:
        name: projects/$(ref.project_id)/notes/$(ref.attestor_name)-note
        shortDescription: "Binary Authorization attestation authority note"
        longDescription: "Container Analysis note for storing Binary Authorization attestations from CI/CD pipeline"
        attestationAuthority:
          hint:
            humanReadableName: "Build Attestor for Supply Chain Security"
    depends_on:
      - enable-containeranalysis-api
    metadata:
      dependsOn:
        - enable-containeranalysis-api

  # Binary Authorization Attestor for Policy Enforcement
  # Defines the cryptographic requirements for container deployment approval
  - name: binauthz-attestor
    type: gcp-types/binaryauthorization-v1:projects.attestors
    properties:
      parent: projects/$(ref.project_id)
      attestorId: $(ref.attestor_name)
      attestor:
        name: projects/$(ref.project_id)/attestors/$(ref.attestor_name)
        description: "Attestor for CI/CD pipeline security verification and supply chain integrity"
        userOwnedGrafeasNote:
          noteReference: projects/$(ref.project_id)/notes/$(ref.attestor_name)-note
          publicKeys:
            - id: $(ref.key_name)-key-1
              asciiArmoredPgpPublicKey: ""
              comment: "KMS signing key for attestations"
              pkixPublicKey:
                publicKeyPem: ""
                signatureAlgorithm: RSA_PSS_2048_SHA256
    depends_on:
      - kms-signing-key
      - container-analysis-note
      - enable-binaryauthorization-api
    metadata:
      dependsOn:
        - kms-signing-key
        - container-analysis-note
        - enable-binaryauthorization-api

  # GKE Cluster with Binary Authorization Enabled
  # Kubernetes cluster with runtime policy enforcement for container security
  - name: gke-cluster
    type: gcp-types/container-v1:projects.zones.clusters
    properties:
      parent: projects/$(ref.project_id)/zones/$(ref.zone)
      cluster:
        name: $(ref.cluster_name)
        description: "GKE cluster with Binary Authorization enabled for secure container deployments"
        initialNodeCount: $(ref.gke_min_nodes)
        
        # Node configuration with security best practices
        nodeConfig:
          machineType: $(ref.gke_machine_type)
          diskSizeGb: 100
          diskType: pd-ssd
          imageType: COS_CONTAINERD
          oauthScopes:
            - https://www.googleapis.com/auth/cloud-platform
          metadata:
            disable-legacy-endpoints: "true"
          serviceAccount: default
          preemptible: false
          labels:
            cluster-purpose: "secure-deployment"
            binary-authorization: "enabled"
            environment: "production"
          tags:
            - "gke-secure-cluster"
            - "binary-authorization"
            
        # Enable Binary Authorization for runtime policy enforcement
        binaryAuthorization:
          enabled: true
          
        # Enable network policy for enhanced security
        networkPolicy:
          enabled: true
          provider: CALICO
          
        # Node pool configuration with autoscaling
        nodePools:
          - name: default-pool
            config:
              machineType: $(ref.gke_machine_type)
              diskSizeGb: 100
              diskType: pd-ssd
              imageType: COS_CONTAINERD
              oauthScopes:
                - https://www.googleapis.com/auth/cloud-platform
              metadata:
                disable-legacy-endpoints: "true"
              serviceAccount: default
              preemptible: false
              labels:
                node-pool: "default"
                security-level: "high"
              tags:
                - "gke-node-pool"
                - "secure-nodes"
            initialNodeCount: $(ref.gke_min_nodes)
            autoscaling:
              enabled: true
              minNodeCount: $(ref.gke_min_nodes)
              maxNodeCount: $(ref.gke_max_nodes)
            management:
              autoUpgrade: true
              autoRepair: true
              
        # Security configurations
        masterAuth:
          clientCertificateConfig:
            issueClientCertificate: false
            
        # Enable IP aliases for better networking
        ipAllocationPolicy:
          useIpAliases: true
          
        # Enable workload identity (conditional)
        workloadIdentityConfig:
          workloadPool: $(ref.project_id).svc.id.goog
          
        # Enable shielded nodes for additional security (conditional)
        shieldedNodes:
          enabled: $(ref.enable_shielded_nodes)
          
        # Logging and monitoring configuration
        loggingService: logging.googleapis.com/kubernetes
        monitoringService: monitoring.googleapis.com/kubernetes
        
        # Location configuration
        locations:
          - $(ref.zone)
          
        # Resource labels for management
        resourceLabels:
          environment: "production"
          purpose: "supply-chain-security"
          managed-by: "infrastructure-manager"
          
    depends_on:
      - enable-container-api
      - binauthz-attestor
    metadata:
      dependsOn:
        - enable-container-api
        - binauthz-attestor

  # Binary Authorization Policy Configuration
  # Defines security requirements for container deployments
  - name: binauthz-policy
    type: gcp-types/binaryauthorization-v1:projects.policy
    properties:
      name: projects/$(ref.project_id)/policy
      
      # Allow Google-managed base images (system containers)
      admissionWhitelistPatterns:
        - namePattern: "gcr.io/google-containers/*"
        - namePattern: "gcr.io/google_containers/*"
        - namePattern: "k8s.gcr.io/*"
        - namePattern: "gcr.io/gke-release/*"
        - namePattern: "gke.gcr.io/*"
        - namePattern: "gcr.io/gke-*/*"
        - namePattern: "us.gcr.io/gke-*/*"
        
      # Default admission rule requiring attestation for all other images
      defaultAdmissionRule:
        requireAttestationsBy:
          - projects/$(ref.project_id)/attestors/$(ref.attestor_name)
        evaluationMode: REQUIRE_ATTESTATION
        enforcementMode: $(ref.enforcement_mode)
        
      # Cluster-specific admission rules for enhanced security
      clusterAdmissionRules:
        "$(ref.zone).$(ref.cluster_name)":
          requireAttestationsBy:
            - projects/$(ref.project_id)/attestors/$(ref.attestor_name)
          evaluationMode: REQUIRE_ATTESTATION
          enforcementMode: $(ref.enforcement_mode)
          
    depends_on:
      - binauthz-attestor
      - gke-cluster
    metadata:
      dependsOn:
        - binauthz-attestor
        - gke-cluster

  # IAM Binding for Cloud Build Service Account - KMS Access
  # Grants Cloud Build permission to sign attestations using KMS
  - name: cloudbuild-kms-binding
    type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
    properties:
      resource: projects/$(ref.project_id)
      role: roles/cloudkms.signerVerifier
      member: serviceAccount:$(ref.project_id)@cloudbuild.gserviceaccount.com
    depends_on:
      - kms-signing-key
      - enable-cloudbuild-api
    metadata:
      dependsOn:
        - kms-signing-key
        - enable-cloudbuild-api

  # IAM Binding for Cloud Build Service Account - Attestor Access
  # Grants Cloud Build permission to create and manage attestations
  - name: cloudbuild-attestor-binding
    type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
    properties:
      resource: projects/$(ref.project_id)
      role: roles/binaryauthorization.attestorsEditor
      member: serviceAccount:$(ref.project_id)@cloudbuild.gserviceaccount.com
    depends_on:
      - binauthz-attestor
      - enable-cloudbuild-api
    metadata:
      dependsOn:
        - binauthz-attestor
        - enable-cloudbuild-api

  # IAM Binding for Cloud Build Service Account - Container Analysis Access
  # Grants Cloud Build permission to create attestation notes
  - name: cloudbuild-containeranalysis-binding
    type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
    properties:
      resource: projects/$(ref.project_id)
      role: roles/containeranalysis.notes.editor
      member: serviceAccount:$(ref.project_id)@cloudbuild.gserviceaccount.com
    depends_on:
      - container-analysis-note
      - enable-cloudbuild-api
    metadata:
      dependsOn:
        - container-analysis-note
        - enable-cloudbuild-api

  # IAM Binding for Cloud Build Service Account - Artifact Registry Access
  # Grants Cloud Build permission to push images to Artifact Registry
  - name: cloudbuild-artifactregistry-binding
    type: gcp-types/cloudresourcemanager-v1:virtual.projects.iamMemberBinding
    properties:
      resource: projects/$(ref.project_id)
      role: roles/artifactregistry.writer
      member: serviceAccount:$(ref.project_id)@cloudbuild.gserviceaccount.com
    depends_on:
      - artifact-registry-repo
      - enable-cloudbuild-api
    metadata:
      dependsOn:
        - artifact-registry-repo
        - enable-cloudbuild-api

# Output Values
outputs:
  # Project Information
  - name: project_id
    description: "Google Cloud Project ID"
    value: $(ref.project_id)
    
  - name: region
    description: "Google Cloud region where resources are deployed"
    value: $(ref.region)
    
  - name: zone
    description: "Google Cloud zone where GKE cluster is deployed"
    value: $(ref.zone)
    
  # Artifact Registry Information
  - name: artifact_registry_repo
    description: "Artifact Registry repository name for secure container storage"
    value: $(ref.repo_name)
    
  - name: artifact_registry_url
    description: "Full Artifact Registry repository URL"
    value: "$(ref.region)-docker.pkg.dev/$(ref.project_id)/$(ref.repo_name)"
    
  # Cloud KMS Information
  - name: kms_keyring_name
    description: "Cloud KMS key ring name for cryptographic operations"
    value: $(ref.keyring_name)
    
  - name: kms_key_name
    description: "Cloud KMS signing key name for attestations"
    value: $(ref.key_name)
    
  - name: kms_key_resource_name
    description: "Full Cloud KMS key resource name for CLI operations"
    value: "projects/$(ref.project_id)/locations/$(ref.region)/keyRings/$(ref.keyring_name)/cryptoKeys/$(ref.key_name)/cryptoKeyVersions/1"
    
  # Binary Authorization Information
  - name: attestor_name
    description: "Binary Authorization attestor name"
    value: $(ref.attestor_name)
    
  - name: attestor_resource_name
    description: "Full Binary Authorization attestor resource name"
    value: "projects/$(ref.project_id)/attestors/$(ref.attestor_name)"
    
  - name: container_analysis_note_name
    description: "Container Analysis note name for attestations"
    value: "projects/$(ref.project_id)/notes/$(ref.attestor_name)-note"
    
  # GKE Cluster Information
  - name: gke_cluster_name
    description: "GKE cluster name with Binary Authorization enabled"
    value: $(ref.cluster_name)
    
  - name: gke_cluster_endpoint
    description: "GKE cluster API endpoint"
    value: $(ref.gke-cluster.endpoint)
    
  - name: gke_cluster_location
    description: "GKE cluster location identifier"
    value: $(ref.zone)
    
  # Security Configuration
  - name: binary_authorization_enabled
    description: "Binary Authorization enablement status"
    value: true
    
  - name: enforcement_mode
    description: "Binary Authorization enforcement mode"
    value: $(ref.enforcement_mode)
    
  - name: workload_identity_enabled
    description: "Workload Identity enablement status"
    value: $(ref.enable_workload_identity)
    
  - name: shielded_nodes_enabled
    description: "Shielded nodes enablement status"
    value: $(ref.enable_shielded_nodes)
    
  # Setup Commands
  - name: docker_auth_command
    description: "Command to configure Docker authentication with Artifact Registry"
    value: "gcloud auth configure-docker $(ref.region)-docker.pkg.dev"
    
  - name: gke_credentials_command
    description: "Command to get GKE cluster credentials"
    value: "gcloud container clusters get-credentials $(ref.cluster_name) --zone $(ref.zone) --project $(ref.project_id)"
    
  - name: sample_image_url
    description: "Sample image URL for testing Binary Authorization"
    value: "$(ref.region)-docker.pkg.dev/$(ref.project_id)/$(ref.repo_name)/sample-app:latest"
    
  - name: cloudbuild_service_account
    description: "Cloud Build service account with configured permissions"
    value: "$(ref.project_id)@cloudbuild.gserviceaccount.com"

# Metadata
metadata:
  version: "1.0"
  description: "Complete software supply chain security solution using Binary Authorization, Cloud Build, Cloud KMS, and Artifact Registry"
  author: "Google Cloud Infrastructure Manager"
  created: "2025-07-12"
  recipe-id: "f4e8d2a9"
  recipe-name: "software-supply-chain-security-binary-authorization-build"
  tags:
    - "security"
    - "supply-chain"
    - "binary-authorization"
    - "cloud-build"
    - "gke"
    - "container-security"
    - "attestations"
    - "cloud-kms"
    - "artifact-registry"
  documentation: "https://cloud.google.com/binary-authorization/docs"
  support: "https://cloud.google.com/support"