# Example Terraform Variables for Content Moderation Infrastructure
# Copy this file to terraform.tfvars and modify the values for your environment

# Required Variables
project_id = "your-gcp-project-id"
region     = "us-central1"
zone       = "us-central1-a"

# Optional Variables - Environment Configuration
environment     = "dev"
resource_prefix = "content-mod"

# Storage Configuration
storage_class                 = "STANDARD"
bucket_location              = "us-central1" # null to use region
enable_bucket_versioning     = true
bucket_lifecycle_age_days    = 30
force_destroy_buckets        = false # Set to true for testing/cleanup

# Security Configuration
enable_uniform_bucket_level_access     = true
enable_bucket_public_access_prevention = true
enable_private_google_access           = true
deletion_protection                    = false # Set to true for production

# Pub/Sub Configuration
pubsub_message_retention_duration = "604800s" # 7 days
pubsub_ack_deadline               = 600
pubsub_max_delivery_attempts      = 3

# Cloud Functions Configuration
function_memory_mb         = 1024
function_timeout          = 540
function_max_instances    = 10
function_min_instances    = 0

# Notification Function Configuration
notification_function_memory_mb = 256
notification_function_timeout   = 60
create_notification_function    = true

# Vertex AI Configuration
vertex_ai_location = "us-central1"

# API Configuration
enable_apis = [
  "storage.googleapis.com",
  "cloudfunctions.googleapis.com",
  "pubsub.googleapis.com",
  "aiplatform.googleapis.com",
  "eventarc.googleapis.com",
  "cloudbuild.googleapis.com",
  "run.googleapis.com",
  "logging.googleapis.com",
  "monitoring.googleapis.com"
]

# Labels
labels = {
  project     = "content-moderation"
  managed-by  = "terraform"
  cost-center = "ai-ml"
  team        = "security"
  env         = "dev"
}

# Advanced Configuration (Optional)
# custom_service_account_email = "existing-sa@your-project.iam.gserviceaccount.com"
# enable_cloud_armor = false