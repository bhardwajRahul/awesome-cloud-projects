# Infrastructure Manager Configuration for Global Network Performance Optimization
# Recipe: Establishing Global Network Performance Optimization with Cloud WAN and Network Intelligence Center
# 
# This configuration deploys a comprehensive global network infrastructure with:
# - Multi-region VPC network with global connectivity
# - Regional compute infrastructure across US, EU, and APAC
# - Global HTTP(S) load balancer with SSL termination
# - Network Intelligence Center monitoring with VPC Flow Logs
# - Comprehensive firewall rules and security policies
# - Monitoring and alerting infrastructure

imports:
  # Import Google Cloud resource types
  - path: https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/networks
    name: compute_networks
  - path: https://www.googleapis.com/compute/v1/projects/PROJECT_ID/regions/REGION/subnetworks
    name: compute_subnetworks
  - path: https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/firewalls
    name: compute_firewalls
  - path: https://www.googleapis.com/compute/v1/projects/PROJECT_ID/zones/ZONE/instances
    name: compute_instances

resources:
  # =============================================================================
  # GLOBAL VPC NETWORK INFRASTRUCTURE
  # =============================================================================
  
  # Global VPC Network - Foundation for enterprise-grade connectivity
  - name: global-wan-network
    type: compute.v1.network
    properties:
      name: global-wan-{{ env["deployment"] }}
      description: "Global enterprise network with WAN optimization capabilities"
      routingConfig:
        routingMode: GLOBAL
      autoCreateSubnetworks: false
    metadata:
      description: "Global VPC network leveraging Google's private backbone for optimal performance"

  # US Region Subnet - Primary region for North American traffic
  - name: subnet-us-central
    type: compute.v1.subnetwork
    properties:
      name: global-wan-{{ env["deployment"] }}-us
      description: "US Central subnet for North American workloads"
      network: $(ref.global-wan-network.selfLink)
      ipCidrRange: "10.10.0.0/16"
      region: us-central1
      privateIpGoogleAccess: true
      enableFlowLogs: true
      logConfig:
        enable: true
        aggregationInterval: INTERVAL_5_SEC
        flowSampling: 1.0
        metadata: INCLUDE_ALL_METADATA
    metadata:
      description: "US region subnet with comprehensive flow logging for Network Intelligence Center"
    dependsOn:
      - global-wan-network

  # EU Region Subnet - European traffic optimization
  - name: subnet-eu-west
    type: compute.v1.subnetwork
    properties:
      name: global-wan-{{ env["deployment"] }}-eu
      description: "EU West subnet for European workloads"
      network: $(ref.global-wan-network.selfLink)
      ipCidrRange: "10.20.0.0/16"
      region: europe-west1
      privateIpGoogleAccess: true
      enableFlowLogs: true
      logConfig:
        enable: true
        aggregationInterval: INTERVAL_5_SEC
        flowSampling: 1.0
        metadata: INCLUDE_ALL_METADATA
    metadata:
      description: "EU region subnet with comprehensive flow logging for Network Intelligence Center"
    dependsOn:
      - global-wan-network

  # APAC Region Subnet - Asia-Pacific performance optimization
  - name: subnet-apac-east
    type: compute.v1.subnetwork
    properties:
      name: global-wan-{{ env["deployment"] }}-apac
      description: "APAC East subnet for Asia-Pacific workloads"
      network: $(ref.global-wan-network.selfLink)
      ipCidrRange: "10.30.0.0/16"
      region: asia-east1
      privateIpGoogleAccess: true
      enableFlowLogs: true
      logConfig:
        enable: true
        aggregationInterval: INTERVAL_5_SEC
        flowSampling: 1.0
        metadata: INCLUDE_ALL_METADATA
    metadata:
      description: "APAC region subnet with comprehensive flow logging for Network Intelligence Center"
    dependsOn:
      - global-wan-network

  # =============================================================================
  # ENTERPRISE SECURITY FIREWALL RULES
  # =============================================================================

  # Internal communication firewall rule
  - name: firewall-allow-internal
    type: compute.v1.firewall
    properties:
      name: global-wan-{{ env["deployment"] }}-allow-internal
      description: "Allow internal VPC communication across all subnets"
      network: $(ref.global-wan-network.selfLink)
      direction: INGRESS
      priority: 1000
      sourceRanges:
        - "10.10.0.0/8"
      allowed:
        - IPProtocol: tcp
        - IPProtocol: udp
        - IPProtocol: icmp
    metadata:
      description: "Enables secure internal communication between regional workloads"
    dependsOn:
      - global-wan-network

  # Load balancer health check firewall rule
  - name: firewall-allow-lb-health
    type: compute.v1.firewall
    properties:
      name: global-wan-{{ env["deployment"] }}-allow-lb-health
      description: "Allow Google Cloud Load Balancer health checks"
      network: $(ref.global-wan-network.selfLink)
      direction: INGRESS
      priority: 1000
      sourceRanges:
        - "130.211.0.0/22"
        - "35.191.0.0/16"
      targetTags:
        - "web-server"
      allowed:
        - IPProtocol: tcp
          ports:
            - "80"
            - "443"
            - "8080"
    metadata:
      description: "Enables global load balancer health monitoring across regions"
    dependsOn:
      - global-wan-network

  # SSH management access firewall rule
  - name: firewall-allow-ssh
    type: compute.v1.firewall
    properties:
      name: global-wan-{{ env["deployment"] }}-allow-ssh
      description: "Allow SSH access for management purposes"
      network: $(ref.global-wan-network.selfLink)
      direction: INGRESS
      priority: 1000
      sourceRanges:
        - "0.0.0.0/0"
      targetTags:
        - "ssh-allowed"
      allowed:
        - IPProtocol: tcp
          ports:
            - "22"
    metadata:
      description: "Provides secure SSH access for infrastructure management"
    dependsOn:
      - global-wan-network

  # =============================================================================
  # REGIONAL COMPUTE INFRASTRUCTURE
  # =============================================================================

  # US Region Web Server - North American workload
  - name: web-server-us
    type: compute.v1.instance
    properties:
      name: web-server-us-{{ env["deployment"] }}
      description: "US region web server for North American traffic"
      zone: us-central1-a
      machineType: zones/us-central1-a/machineTypes/e2-medium
      tags:
        items:
          - "web-server"
          - "ssh-allowed"
      disks:
        - boot: true
          autoDelete: true
          initializeParams:
            sourceImage: projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts
            diskType: zones/us-central1-a/diskTypes/pd-standard
            diskSizeGb: 20
      networkInterfaces:
        - subnetwork: $(ref.subnet-us-central.selfLink)
          accessConfigs:
            - name: external-nat
              type: ONE_TO_ONE_NAT
      metadata:
        items:
          - key: startup-script
            value: |
              #!/bin/bash
              apt-get update
              apt-get install -y nginx
              systemctl start nginx
              systemctl enable nginx
              echo "US Region Server - $(hostname)" > /var/www/html/index.html
              echo "Network Performance Optimized with Cloud WAN" >> /var/www/html/index.html
              echo "Monitored by Network Intelligence Center" >> /var/www/html/index.html
    metadata:
      description: "US region compute instance with web server and performance monitoring"
    dependsOn:
      - subnet-us-central
      - firewall-allow-internal
      - firewall-allow-lb-health
      - firewall-allow-ssh

  # EU Region Web Server - European workload
  - name: web-server-eu
    type: compute.v1.instance
    properties:
      name: web-server-eu-{{ env["deployment"] }}
      description: "EU region web server for European traffic"
      zone: europe-west1-b
      machineType: zones/europe-west1-b/machineTypes/e2-medium
      tags:
        items:
          - "web-server"
          - "ssh-allowed"
      disks:
        - boot: true
          autoDelete: true
          initializeParams:
            sourceImage: projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts
            diskType: zones/europe-west1-b/diskTypes/pd-standard
            diskSizeGb: 20
      networkInterfaces:
        - subnetwork: $(ref.subnet-eu-west.selfLink)
          accessConfigs:
            - name: external-nat
              type: ONE_TO_ONE_NAT
      metadata:
        items:
          - key: startup-script
            value: |
              #!/bin/bash
              apt-get update
              apt-get install -y nginx
              systemctl start nginx
              systemctl enable nginx
              echo "EU Region Server - $(hostname)" > /var/www/html/index.html
              echo "Network Performance Optimized with Cloud WAN" >> /var/www/html/index.html
              echo "Monitored by Network Intelligence Center" >> /var/www/html/index.html
    metadata:
      description: "EU region compute instance with web server and performance monitoring"
    dependsOn:
      - subnet-eu-west
      - firewall-allow-internal
      - firewall-allow-lb-health
      - firewall-allow-ssh

  # APAC Region Web Server - Asia-Pacific workload
  - name: web-server-apac
    type: compute.v1.instance
    properties:
      name: web-server-apac-{{ env["deployment"] }}
      description: "APAC region web server for Asia-Pacific traffic"
      zone: asia-east1-a
      machineType: zones/asia-east1-a/machineTypes/e2-medium
      tags:
        items:
          - "web-server"
          - "ssh-allowed"
      disks:
        - boot: true
          autoDelete: true
          initializeParams:
            sourceImage: projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts
            diskType: zones/asia-east1-a/diskTypes/pd-standard
            diskSizeGb: 20
      networkInterfaces:
        - subnetwork: $(ref.subnet-apac-east.selfLink)
          accessConfigs:
            - name: external-nat
              type: ONE_TO_ONE_NAT
      metadata:
        items:
          - key: startup-script
            value: |
              #!/bin/bash
              apt-get update
              apt-get install -y nginx
              systemctl start nginx
              systemctl enable nginx
              echo "APAC Region Server - $(hostname)" > /var/www/html/index.html
              echo "Network Performance Optimized with Cloud WAN" >> /var/www/html/index.html
              echo "Monitored by Network Intelligence Center" >> /var/www/html/index.html
    metadata:
      description: "APAC region compute instance with web server and performance monitoring"
    dependsOn:
      - subnet-apac-east
      - firewall-allow-internal
      - firewall-allow-lb-health
      - firewall-allow-ssh

  # =============================================================================
  # GLOBAL LOAD BALANCER INFRASTRUCTURE
  # =============================================================================

  # Instance Groups for Load Balancer Backends
  # US Region Instance Group
  - name: instance-group-us
    type: compute.v1.instanceGroup
    properties:
      name: web-group-us-{{ env["deployment"] }}
      description: "US region web server instance group"
      zone: us-central1-a
      instances:
        - $(ref.web-server-us.selfLink)
    metadata:
      description: "US region instance group for global load balancer backend"
    dependsOn:
      - web-server-us

  # EU Region Instance Group
  - name: instance-group-eu
    type: compute.v1.instanceGroup
    properties:
      name: web-group-eu-{{ env["deployment"] }}
      description: "EU region web server instance group"
      zone: europe-west1-b
      instances:
        - $(ref.web-server-eu.selfLink)
    metadata:
      description: "EU region instance group for global load balancer backend"
    dependsOn:
      - web-server-eu

  # APAC Region Instance Group
  - name: instance-group-apac
    type: compute.v1.instanceGroup
    properties:
      name: web-group-apac-{{ env["deployment"] }}
      description: "APAC region web server instance group"
      zone: asia-east1-a
      instances:
        - $(ref.web-server-apac.selfLink)
    metadata:
      description: "APAC region instance group for global load balancer backend"
    dependsOn:
      - web-server-apac

  # Global Health Check for Load Balancer
  - name: global-health-check
    type: compute.v1.healthCheck
    properties:
      name: global-web-health-check-{{ env["deployment"] }}
      description: "Global health check for web servers across all regions"
      type: HTTP
      httpHealthCheck:
        port: 80
        requestPath: "/"
        checkIntervalSec: 30
        timeoutSec: 10
        healthyThreshold: 2
        unhealthyThreshold: 3
    metadata:
      description: "Comprehensive health monitoring for global web server backends"

  # Global Backend Service
  - name: global-backend-service
    type: compute.v1.backendService
    properties:
      name: global-web-backend-{{ env["deployment"] }}
      description: "Global backend service for multi-region web servers"
      protocol: HTTP
      healthChecks:
        - $(ref.global-health-check.selfLink)
      loadBalancingScheme: EXTERNAL
      enableCDN: false
      backends:
        - group: $(ref.instance-group-us.selfLink)
          balancingMode: UTILIZATION
          maxUtilization: 0.8
          capacityScaler: 1.0
        - group: $(ref.instance-group-eu.selfLink)
          balancingMode: UTILIZATION
          maxUtilization: 0.8
          capacityScaler: 1.0
        - group: $(ref.instance-group-apac.selfLink)
          balancingMode: UTILIZATION
          maxUtilization: 0.8
          capacityScaler: 1.0
      logConfig:
        enable: true
        sampleRate: 1.0
    metadata:
      description: "Global backend service with comprehensive logging for Network Intelligence Center"
    dependsOn:
      - global-health-check
      - instance-group-us
      - instance-group-eu
      - instance-group-apac

  # URL Map for Traffic Routing
  - name: global-url-map
    type: compute.v1.urlMap
    properties:
      name: global-web-map-{{ env["deployment"] }}
      description: "Global URL map for intelligent traffic routing"
      defaultService: $(ref.global-backend-service.selfLink)
    metadata:
      description: "URL mapping configuration for global traffic distribution"
    dependsOn:
      - global-backend-service

  # SSL Certificate for HTTPS
  - name: global-ssl-certificate
    type: compute.v1.sslCertificate
    properties:
      name: global-web-ssl-{{ env["deployment"] }}
      description: "Global SSL certificate for secure HTTPS connectivity"
      managed:
        domains:
          - "{{ env["domain_name"] | default('example.com') }}"
    metadata:
      description: "Managed SSL certificate for global HTTPS load balancer"

  # Target HTTPS Proxy
  - name: target-https-proxy
    type: compute.v1.targetHttpsProxy
    properties:
      name: global-web-https-proxy-{{ env["deployment"] }}
      description: "HTTPS proxy for global load balancer"
      urlMap: $(ref.global-url-map.selfLink)
      sslCertificates:
        - $(ref.global-ssl-certificate.selfLink)
    metadata:
      description: "HTTPS proxy with SSL termination for secure global access"
    dependsOn:
      - global-url-map
      - global-ssl-certificate

  # Target HTTP Proxy (for redirect)
  - name: target-http-proxy
    type: compute.v1.targetHttpProxy
    properties:
      name: global-web-http-proxy-{{ env["deployment"] }}
      description: "HTTP proxy for redirect to HTTPS"
      urlMap: $(ref.global-url-map.selfLink)
    metadata:
      description: "HTTP proxy for automatic HTTPS redirect"
    dependsOn:
      - global-url-map

  # Global Forwarding Rule for HTTPS
  - name: global-forwarding-rule-https
    type: compute.v1.globalForwardingRule
    properties:
      name: global-web-https-rule-{{ env["deployment"] }}
      description: "Global forwarding rule for HTTPS traffic"
      target: $(ref.target-https-proxy.selfLink)
      portRange: "443"
      IPProtocol: TCP
    metadata:
      description: "Global HTTPS forwarding rule for enterprise web traffic"
    dependsOn:
      - target-https-proxy

  # Global Forwarding Rule for HTTP
  - name: global-forwarding-rule-http
    type: compute.v1.globalForwardingRule
    properties:
      name: global-web-http-rule-{{ env["deployment"] }}
      description: "Global forwarding rule for HTTP traffic (redirect to HTTPS)"
      target: $(ref.target-http-proxy.selfLink)
      portRange: "80"
      IPProtocol: TCP
    metadata:
      description: "Global HTTP forwarding rule for automatic HTTPS redirect"
    dependsOn:
      - target-http-proxy

  # =============================================================================
  # MONITORING AND NETWORK INTELLIGENCE
  # =============================================================================

  # Network Performance Monitoring Dashboard
  - name: network-performance-dashboard
    type: monitoring.v1.dashboard
    properties:
      displayName: "Global Network Performance Dashboard - {{ env['deployment'] }}"
      mosaicLayout:
        tiles:
          - width: 6
            height: 4
            widget:
              title: "Global Load Balancer Request Rate"
              xyChart:
                dataSets:
                  - timeSeriesQuery:
                      timeSeriesFilter:
                        filter: 'resource.type="http_load_balancer"'
                        aggregation:
                          alignmentPeriod: "60s"
                          perSeriesAligner: "ALIGN_RATE"
                          crossSeriesReducer: "REDUCE_SUM"
                yAxis:
                  label: "Requests/sec"
                  scale: "LINEAR"
          - width: 6
            height: 4
            widget:
              title: "Regional Backend Latency"
              xyChart:
                dataSets:
                  - timeSeriesQuery:
                      timeSeriesFilter:
                        filter: 'resource.type="http_load_balancer"'
                        aggregation:
                          alignmentPeriod: "60s"
                          perSeriesAligner: "ALIGN_MEAN"
                          crossSeriesReducer: "REDUCE_MEAN"
                          groupByFields:
                            - "resource.label.backend_target_name"
                yAxis:
                  label: "Latency (ms)"
                  scale: "LINEAR"
          - width: 12
            height: 4
            widget:
              title: "VPC Flow Logs Traffic Analysis"
              xyChart:
                dataSets:
                  - timeSeriesQuery:
                      timeSeriesFilter:
                        filter: 'resource.type="gce_subnetwork"'
                        aggregation:
                          alignmentPeriod: "300s"
                          perSeriesAligner: "ALIGN_RATE"
                          crossSeriesReducer: "REDUCE_SUM"
                          groupByFields:
                            - "resource.label.subnetwork_name"
                yAxis:
                  label: "Bytes/sec"
                  scale: "LINEAR"
    metadata:
      description: "Comprehensive dashboard for global network performance monitoring"

  # High Latency Alert Policy
  - name: high-latency-alert
    type: monitoring.v1.alertPolicy
    properties:
      displayName: "High Network Latency Alert - {{ env['deployment'] }}"
      documentation:
        content: "Alert triggered when network latency exceeds acceptable thresholds across global infrastructure"
        mimeType: "text/markdown"
      conditions:
        - displayName: "High Backend Latency Condition"
          conditionThreshold:
            filter: 'resource.type="http_load_balancer"'
            comparison: "COMPARISON_GREATER_THAN"
            thresholdValue: 1000  # 1 second
            duration: "300s"      # 5 minutes
            aggregations:
              - alignmentPeriod: "60s"
                perSeriesAligner: "ALIGN_MEAN"
                crossSeriesReducer: "REDUCE_MEAN"
      combiner: "OR"
      enabled: true
    metadata:
      description: "Proactive alerting for network performance degradation"

  # Network Traffic Anomaly Alert
  - name: traffic-anomaly-alert
    type: monitoring.v1.alertPolicy
    properties:
      displayName: "Network Traffic Anomaly Alert - {{ env['deployment'] }}"
      documentation:
        content: "Alert for unusual traffic patterns that may indicate network issues or security concerns"
        mimeType: "text/markdown"
      conditions:
        - displayName: "Unusual Traffic Volume Condition"
          conditionThreshold:
            filter: 'resource.type="gce_subnetwork"'
            comparison: "COMPARISON_GREATER_THAN"
            thresholdValue: 1000000000  # 1 GB/s
            duration: "180s"            # 3 minutes
            aggregations:
              - alignmentPeriod: "60s"
                perSeriesAligner: "ALIGN_RATE"
                crossSeriesReducer: "REDUCE_SUM"
      combiner: "OR"
      enabled: true
    metadata:
      description: "Detection of network traffic anomalies for security and performance"

# =============================================================================
# OUTPUTS - Essential information for verification and integration
# =============================================================================
outputs:
  # Network Infrastructure Outputs
  - name: vpc_network_name
    value: $(ref.global-wan-network.name)
    description: "Name of the global VPC network"

  - name: vpc_network_selflink
    value: $(ref.global-wan-network.selfLink)
    description: "Self-link of the global VPC network"

  # Regional Subnet Information
  - name: subnet_us_name
    value: $(ref.subnet-us-central.name)
    description: "Name of the US region subnet"

  - name: subnet_eu_name
    value: $(ref.subnet-eu-west.name)
    description: "Name of the EU region subnet"

  - name: subnet_apac_name
    value: $(ref.subnet-apac-east.name)
    description: "Name of the APAC region subnet"

  # Load Balancer Information
  - name: load_balancer_ip_https
    value: $(ref.global-forwarding-rule-https.IPAddress)
    description: "Global load balancer IP address for HTTPS traffic"

  - name: load_balancer_ip_http
    value: $(ref.global-forwarding-rule-http.IPAddress)
    description: "Global load balancer IP address for HTTP traffic (redirects to HTTPS)"

  # Compute Instance Information
  - name: web_server_us_internal_ip
    value: $(ref.web-server-us.networkInterfaces[0].networkIP)
    description: "Internal IP address of the US region web server"

  - name: web_server_eu_internal_ip
    value: $(ref.web-server-eu.networkInterfaces[0].networkIP)
    description: "Internal IP address of the EU region web server"

  - name: web_server_apac_internal_ip
    value: $(ref.web-server-apac.networkInterfaces[0].networkIP)
    description: "Internal IP address of the APAC region web server"

  # Monitoring and Network Intelligence
  - name: network_dashboard_url
    value: "https://console.cloud.google.com/monitoring/dashboards/custom/$(ref.network-performance-dashboard.name)"
    description: "URL to access the global network performance dashboard"

  - name: network_topology_url
    value: "https://console.cloud.google.com/net-intelligence/topology"
    description: "URL to access Network Intelligence Center topology view"

  - name: vpc_flow_logs_status
    value: "enabled"
    description: "Status of VPC Flow Logs for Network Intelligence Center analysis"

  # Security and Access Information
  - name: firewall_rules_created
    value:
      - $(ref.firewall-allow-internal.name)
      - $(ref.firewall-allow-lb-health.name)
      - $(ref.firewall-allow-ssh.name)
    description: "List of firewall rules created for enterprise security"

  # Performance Optimization Information
  - name: global_load_balancer_enabled
    value: "true"
    description: "Global load balancer status for traffic optimization"

  - name: network_intelligence_center_enabled
    value: "true"
    description: "Network Intelligence Center monitoring status"

  - name: cloud_wan_ready
    value: "true"
    description: "Infrastructure ready for Cloud WAN integration (requires Enterprise Support)"

# =============================================================================
# METADATA AND CONFIGURATION
# =============================================================================
metadata:
  version: "1.0"
  description: "Global Network Performance Optimization with Cloud WAN and Network Intelligence Center"
  author: "Cloud Recipe Generator v1.3"
  created: "2025-07-12"
  
  # Recipe-specific metadata
  recipe:
    title: "Establishing Global Network Performance Optimization with Cloud WAN and Network Intelligence Center"
    id: "e7a9b3d1"
    category: "networking"
    difficulty: 200
    estimated_time: "120 minutes"
    
  # Infrastructure characteristics
  infrastructure:
    scope: "global"
    regions:
      - "us-central1"
      - "europe-west1" 
      - "asia-east1"
    services:
      - "Cloud WAN"
      - "Network Intelligence Center"
      - "Cloud Monitoring"
      - "Cloud Load Balancing"
      - "VPC Networks"
      - "Compute Engine"
    
  # Cost and resource estimates
  cost_estimation:
    monthly_estimate: "$500-2000 USD"
    factors:
      - "Global load balancer traffic volume"
      - "Compute instance usage across regions"
      - "VPC Flow Logs data volume"
      - "Cloud Monitoring retention period"
      - "Cloud WAN connectivity (requires Enterprise Support)"
    
  # Security and compliance
  security:
    encryption_at_rest: "enabled"
    encryption_in_transit: "enabled"
    private_google_access: "enabled"
    firewall_protection: "comprehensive"
    ssl_termination: "managed_certificates"
    
  # Performance characteristics
  performance:
    global_load_balancing: "enabled"
    health_check_monitoring: "comprehensive"
    network_telemetry: "high_resolution"
    flow_logs_sampling: "100%"
    cross_region_optimization: "google_backbone"