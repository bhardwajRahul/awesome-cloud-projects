# terraform.tfvars.example
# Example Terraform variables file for FSx Intelligent Tiering with Lambda lifecycle management
# Copy this file to terraform.tfvars and customize the values for your environment

# Project Configuration
project_name = "fsx-lifecycle-manager"
environment  = "dev"  # dev, staging, production
aws_region   = "us-east-1"
owner        = "platform-team"

# FSx Configuration
fsx_storage_capacity           = 64    # Storage capacity in GiB (minimum 64)
fsx_throughput_capacity        = 160   # Throughput capacity in MBps (160, 320, 640, etc.)
fsx_deployment_type            = "SINGLE_AZ_2"  # Required for intelligent tiering
fsx_backup_retention_days      = 30    # Backup retention (0-90 days)
fsx_backup_start_time         = "05:00" # Daily backup start time (HH:MM format)

# Networking Configuration (leave empty to use default VPC)
vpc_id    = ""  # e.g., "vpc-12345678"
subnet_id = ""  # e.g., "subnet-12345678"
allowed_cidr_blocks = ["10.0.0.0/16"]  # CIDR blocks allowed to access FSx

# Lambda Configuration
lambda_runtime         = "python3.12"  # python3.11 or python3.12
lambda_memory_size     = 256          # Memory size in MB (128-10240)
lambda_timeout         = 300          # Timeout in seconds (1-900)
lambda_architecture    = "arm64"      # x86_64 or arm64 (arm64 is more cost-effective)

# Scheduling Configuration
lifecycle_check_schedule = "rate(1 hour)"   # EventBridge schedule for lifecycle checks
cost_report_schedule    = "rate(24 hours)"  # EventBridge schedule for cost reporting

# Monitoring Configuration
cloudwatch_log_retention_days   = 14   # CloudWatch log retention period
storage_utilization_threshold   = 85   # Storage utilization alarm threshold (%)
cache_hit_ratio_threshold      = 70   # Cache hit ratio alarm threshold (%)

# Notification Configuration
alert_email_addresses = [
  # "admin@company.com",
  # "devops@company.com"
]

# Security Configuration
enable_kms_encryption      = true  # Enable KMS encryption for all resources
kms_key_deletion_window   = 30    # KMS key deletion window in days (7-30)

# S3 Configuration for Reports
s3_reports_lifecycle_days   = 30   # Days before transitioning to IA storage
s3_reports_glacier_days     = 90   # Days before transitioning to Glacier
s3_reports_expiration_days  = 365  # Days before expiring reports

# Cost Optimization Configuration
enable_intelligent_tiering = true  # Enable FSx Intelligent Tiering

# Example configurations for different environments:

# Development Environment
# project_name = "fsx-lifecycle-dev"
# environment = "dev"
# fsx_storage_capacity = 64
# fsx_throughput_capacity = 160
# alert_email_addresses = ["dev-team@company.com"]

# Staging Environment
# project_name = "fsx-lifecycle-staging"
# environment = "staging"
# fsx_storage_capacity = 128
# fsx_throughput_capacity = 320
# alert_email_addresses = ["staging-alerts@company.com"]

# Production Environment
# project_name = "fsx-lifecycle-prod"
# environment = "production"
# fsx_storage_capacity = 512
# fsx_throughput_capacity = 640
# fsx_backup_retention_days = 90
# cloudwatch_log_retention_days = 30
# alert_email_addresses = ["ops-team@company.com", "management@company.com"]