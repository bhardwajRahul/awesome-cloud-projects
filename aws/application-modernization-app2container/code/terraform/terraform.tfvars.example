# Example Terraform variables file for AWS App2Container Infrastructure
# Copy this file to terraform.tfvars and customize the values for your environment

# Environment Configuration
environment = "dev"

# ECS Task Configuration
task_cpu           = "512"     # CPU units (256, 512, 1024, 2048, 4096)
task_memory        = "1024"    # Memory in MB
container_port     = 8080      # Application port
health_check_path  = "/"       # Health check endpoint

# Auto Scaling Configuration
desired_count      = 2         # Initial number of tasks
min_capacity       = 1         # Minimum tasks for auto scaling
max_capacity       = 10        # Maximum tasks for auto scaling
cpu_target_value   = 70.0      # Target CPU utilization percentage

# Monitoring and Logging
log_retention_days         = 14    # CloudWatch logs retention
enable_container_insights  = true  # ECS Container Insights
enable_detailed_monitoring = true  # Enhanced monitoring
enable_execute_command     = false # ECS Exec for debugging

# Alerting Configuration
alarm_threshold_cpu    = 80    # CPU alarm threshold
alarm_threshold_memory = 80    # Memory alarm threshold
notification_email     = ""    # Email for alerts (optional)

# CI/CD Configuration
codebuild_compute_type = "BUILD_GENERAL1_MEDIUM"
codebuild_image       = "aws/codebuild/amazonlinux2-x86_64-standard:3.0"

# Cost Optimization
enable_spot_instances      = false       # Use Fargate Spot
enable_cost_optimization   = true        # Enable cost features
spot_allocation_strategy   = "diversified"

# Load Balancer Configuration
alb_deletion_protection = false    # ALB deletion protection
enable_alb_access_logs  = true     # ALB access logging
enable_https_redirect   = false    # HTTP to HTTPS redirect
ssl_certificate_arn     = ""       # SSL certificate ARN (optional)

# Security Configuration
enable_waf             = false    # AWS WAF protection
enable_xray_tracing    = false    # X-Ray distributed tracing
enable_secrets_manager = true     # Use Secrets Manager
secrets_rotation_days  = 90       # Secret rotation interval
compliance_mode        = "none"   # Compliance level (none, basic, strict, pci, hipaa)

# Network Configuration (optional - uses default VPC if empty)
vpc_id     = ""    # VPC ID (leave empty for default VPC)
subnet_ids = []    # Subnet IDs (leave empty for default subnets)

# Custom Domain Configuration (optional)
custom_domain_name = ""    # Custom domain name
route53_zone_id    = ""    # Route53 zone ID

# Backup and Disaster Recovery
backup_retention_days      = 30     # Backup retention period
enable_cross_region_backup = false  # Cross-region backup
backup_region             = ""      # Secondary region for backups

# Service Mesh and Discovery (optional)
enable_service_discovery = false    # AWS Cloud Map
service_discovery_namespace = ""    # Cloud Map namespace
enable_app_mesh         = false    # AWS App Mesh
app_mesh_name          = ""        # App Mesh name

# Deployment Configuration
enable_blue_green_deployment = false
deployment_configuration = {
  maximum_percent         = 200    # Maximum tasks during deployment
  minimum_healthy_percent = 50     # Minimum healthy tasks during deployment
}

# Performance and Optimization
performance_mode = "standard"    # Performance mode (standard, optimized)

# Maintenance
maintenance_window = "sun:03:00-sun:04:00"    # Maintenance window

# Advanced Security (optional)
kms_key_id = ""    # Custom KMS key ID for encryption

# WAF Rules (if WAF is enabled)
waf_rules = [
  # {
  #   name     = "RateLimitRule"
  #   priority = 1
  #   action   = "BLOCK"
  # }
]

# Additional Tags
additional_tags = {
  Owner       = "DevOps Team"
  Project     = "Application Modernization"
  CostCenter  = "Engineering"
  Environment = "Development"
}