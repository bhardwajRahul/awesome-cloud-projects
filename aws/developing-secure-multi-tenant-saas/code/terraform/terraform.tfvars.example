# Multi-Tenant SaaS Infrastructure Configuration Example
# Copy this file to terraform.tfvars and customize the values for your deployment

# ==========================================
# Core Configuration
# ==========================================

# Project name - used as a prefix for all resources
project_name = "my-saas-platform"

# Deployment environment (dev, staging, prod)
environment = "dev"

# AWS region for resource deployment
aws_region = "us-east-1"

# ==========================================
# Cognito Configuration
# ==========================================

# Prefix for Cognito hosted UI domain (optional)
# If set, creates a hosted UI at: https://{prefix}.auth.{region}.amazoncognito.com
cognito_domain_prefix = "my-saas-auth"

# Callback URLs for Cognito authentication
cognito_callback_urls = [
  "http://localhost:3000/auth/callback",
  "https://my-app.com/auth/callback"
]

# Logout URLs for Cognito
cognito_logout_urls = [
  "http://localhost:3000/",
  "https://my-app.com/"
]

# ==========================================
# DynamoDB Configuration
# ==========================================

# Billing mode: PAY_PER_REQUEST or PROVISIONED
# PAY_PER_REQUEST is recommended for variable workloads
dynamodb_billing_mode = "PAY_PER_REQUEST"

# Enable point-in-time recovery for DynamoDB tables
enable_point_in_time_recovery = true

# Enable encryption at rest for DynamoDB tables
enable_dynamodb_encryption = true

# ==========================================
# Lambda Configuration
# ==========================================

# Lambda runtime version
lambda_runtime = "nodejs18.x"

# Lambda function timeout in seconds (1-900)
lambda_timeout = 30

# Lambda memory allocation in MB (128-10240)
lambda_memory_size = 256

# ==========================================
# AppSync Configuration
# ==========================================

# Primary authentication type for AppSync API
appsync_authentication_type = "AMAZON_COGNITO_USER_POOLS"

# Enable CloudWatch logging for AppSync
enable_appsync_logging = true

# AppSync log level: NONE, ERROR, ALL
appsync_log_level = "ERROR"

# ==========================================
# S3 Configuration
# ==========================================

# Enable versioning for S3 buckets
enable_s3_versioning = true

# Days before transitioning objects to IA storage
s3_lifecycle_transition_days = 30

# Days before expiring objects
s3_lifecycle_expiration_days = 365

# ==========================================
# CloudWatch Configuration
# ==========================================

# Log retention in days (1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653)
cloudwatch_log_retention_days = 14

# ==========================================
# Security Configuration
# ==========================================

# Enable deletion protection for critical resources
# Set to true for production environments
enable_deletion_protection = false

# KMS key deletion window in days (7-30)
kms_key_deletion_window = 7

# ==========================================
# Multi-Tenant Configuration
# ==========================================

# Default settings for new tenants
default_tenant_settings = {
  # User limits per plan
  max_users_trial        = 5
  max_users_basic        = 25
  max_users_professional = 100
  max_users_enterprise   = 1000
  
  # Project limits per plan
  max_projects_trial     = 3
  max_projects_basic     = 10
  max_projects_professional = 50
  max_projects_enterprise   = 500
  
  # Storage limits per plan (GB)
  max_storage_gb_trial      = 1
  max_storage_gb_basic      = 5
  max_storage_gb_professional = 25
  max_storage_gb_enterprise   = 100
  
  # API rate limits per plan (requests per minute)
  api_rate_limit_trial        = 100
  api_rate_limit_basic        = 500
  api_rate_limit_professional = 2000
  api_rate_limit_enterprise   = 10000
}

# ==========================================
# Monitoring Configuration
# ==========================================

# Enable X-Ray tracing for Lambda functions and AppSync
enable_xray_tracing = true

# Enable enhanced monitoring with custom metrics
# May incur additional costs
enable_enhanced_monitoring = false

# ==========================================
# Cost Optimization
# ==========================================

# Enable cost optimization features
enable_cost_optimization = true

# ==========================================
# Additional Tags
# ==========================================

# Additional tags to apply to all resources
additional_tags = {
  "Owner"       = "Platform Team"
  "CostCenter"  = "Engineering"
  "Compliance"  = "SOC2"
  "Backup"      = "Required"
}

# ==========================================
# Environment-Specific Examples
# ==========================================

# Development Environment Example:
# project_name = "myapp-dev"
# environment = "dev"
# enable_deletion_protection = false
# enable_enhanced_monitoring = false
# cloudwatch_log_retention_days = 7

# Staging Environment Example:
# project_name = "myapp-staging"
# environment = "staging"
# enable_deletion_protection = true
# enable_enhanced_monitoring = true
# cloudwatch_log_retention_days = 30

# Production Environment Example:
# project_name = "myapp-prod"
# environment = "prod"
# enable_deletion_protection = true
# enable_enhanced_monitoring = true
# cloudwatch_log_retention_days = 90
# kms_key_deletion_window = 30

# ==========================================
# Advanced Configuration Notes
# ==========================================

# For high-traffic production environments, consider:
# - Using provisioned DynamoDB with auto-scaling
# - Enabling Lambda provisioned concurrency
# - Setting up CloudFront for global distribution
# - Implementing WAF for additional security
# - Using VPC endpoints for private API access

# For compliance requirements, consider:
# - Extending log retention periods
# - Enabling additional audit logging
# - Implementing field-level encryption
# - Setting up automated compliance monitoring