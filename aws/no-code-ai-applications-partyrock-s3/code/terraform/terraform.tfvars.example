# Example Terraform variables file for PartyRock AI Applications with S3 and CloudFront
# Copy this file to terraform.tfvars and customize the values for your deployment

# AWS Configuration
# Specify the AWS region where you want to deploy resources
aws_region = "us-east-1"

# Environment and Project Settings
# Environment name for tagging and resource identification
environment = "dev"

# Project name used in resource naming and tagging
project_name = "partyrock-ai-app"

# S3 Bucket Configuration
# Prefix for the S3 bucket name (random suffix will be added automatically)
bucket_name_prefix = "my-partyrock-website"

# Enable versioning for data protection and recovery
enable_versioning = true

# Enable server-side encryption for security
enable_encryption = true

# Encryption algorithm: "AES256" for S3-managed keys or "aws:kms" for KMS-managed keys
encryption_algorithm = "AES256"

# Website Configuration
# Main page of your website
index_document = "index.html"

# Error page displayed for 404 and other errors
error_document = "error.html"

# Whether to upload sample website files
upload_sample_website = true

# PartyRock Application URL
# Replace with your actual PartyRock application URL after creating it
# Example: "https://partyrock.aws/u/your-username/your-app-id"
partyrock_app_url = "YOUR_PARTYROCK_APP_URL"

# CloudFront CDN Configuration
# Enable CloudFront for global content delivery and HTTPS
enable_cloudfront = true

# CloudFront price class determines global coverage and cost
# Options: "PriceClass_All", "PriceClass_200", "PriceClass_100"
# PriceClass_100 = Cheapest (US, Canada, Europe, Asia)
# PriceClass_200 = Mid-tier (includes South America, Australia, New Zealand)
# PriceClass_All = Most expensive (all edge locations worldwide)
cloudfront_price_class = "PriceClass_100"

# Default cache duration in seconds (86400 = 24 hours)
cloudfront_default_ttl = 86400

# Maximum cache duration in seconds (31536000 = 1 year)
cloudfront_max_ttl = 31536000

# Enable compression to reduce bandwidth and improve performance
enable_compression = true

# Security Configuration
# Enable public read access to the S3 bucket for website hosting
enable_public_access = true

# CORS configuration for web applications
allowed_origins = ["*"]
allowed_methods = ["GET", "HEAD"]
allowed_headers = ["*"]

# Resource Naming and Tagging
# Length of random string appended to resource names
random_id_length = 8

# Additional tags to apply to all resources
resource_tags = {
  Owner       = "your-name@company.com"
  Project     = "PartyRock AI Showcase"
  Environment = "Development"
  Team        = "AI/ML Team"
  CostCenter  = "Engineering"
  Backup      = "Daily"
}

# Advanced Configuration Examples (uncomment and customize as needed)

# Custom domain configuration (requires Route 53 hosted zone and ACM certificate)
# domain_name = "ai-app.example.com"
# ssl_certificate_arn = "arn:aws:acm:us-east-1:123456789012:certificate/abcd1234-5678-90ef-ghij-klmnopqrstuv"

# WAF configuration for additional security (requires separate WAF resource)
# enable_waf = true
# waf_web_acl_arn = "arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a"

# Advanced S3 configuration
# lifecycle_rules = {
#   transition_to_ia = {
#     days          = 30
#     storage_class = "STANDARD_IA"
#   }
#   transition_to_glacier = {
#     days          = 90
#     storage_class = "GLACIER"
#   }
#   expiration = {
#     days = 365
#   }
# }

# CloudWatch monitoring configuration
# enable_monitoring = true
# enable_detailed_monitoring = false

# Notification configuration
# notification_email = "admin@company.com"
# enable_slack_notifications = false
# slack_webhook_url = "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"