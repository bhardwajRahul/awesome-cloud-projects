version: 0.2
phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - pip install boto3 scikit-learn pandas numpy sagemaker
  build:
    commands:
      - echo "Starting model training..."
      - |
        python << 'PYTHON_EOF'
        import boto3
        import sagemaker
        import json
        import os
        from sagemaker.sklearn.estimator import SKLearn
        from sagemaker.model_package import ModelPackage
        
        # Initialize SageMaker session
        session = sagemaker.Session()
        role = os.environ['SAGEMAKER_ROLE_ARN']
        
        # Create training job
        sklearn_estimator = SKLearn(
            entry_point='train.py',
            role=role,
            instance_type='ml.m5.large',
            framework_version='1.0-1',
            py_version='py3',
            hyperparameters={
                'n_estimators': 100,
                'max_depth': 10
            }
        )
        
        # Submit training job
        training_job_name = f"fraud-detection-{os.environ['CODEBUILD_BUILD_NUMBER']}"
        sklearn_estimator.fit(
            inputs={'training': f"s3://{os.environ['BUCKET_NAME']}/training-data/"},
            job_name=training_job_name,
            wait=True
        )
        
        # Register model in Model Registry
        model_package = sklearn_estimator.create_model_package(
            model_package_group_name=os.environ['MODEL_PACKAGE_GROUP_NAME'],
            approval_status='PendingManualApproval',
            description=f"Fraud detection model trained from build {os.environ['CODEBUILD_BUILD_NUMBER']}"
        )
        
        # Save model package ARN for next stage
        with open('model_package_arn.txt', 'w') as f:
            f.write(model_package.model_package_arn)
        
        print(f"Model package created: {model_package.model_package_arn}")
        PYTHON_EOF
artifacts:
  files:
    - model_package_arn.txt