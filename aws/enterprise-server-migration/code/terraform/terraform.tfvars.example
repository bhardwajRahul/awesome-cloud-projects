# terraform.tfvars.example
# Example Terraform variables file for AWS Application Migration Service infrastructure
# Copy this file to terraform.tfvars and customize the values for your environment

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# AWS region where MGN infrastructure will be deployed
aws_region = "us-east-1"

# Environment name for resource tagging and naming
environment = "production"

# Project name for resource naming and tagging
project_name = "enterprise-migration"

# =============================================================================
# MGN REPLICATION SETTINGS
# =============================================================================

# Instance type for MGN replication servers
# Options: t3.micro, t3.small, t3.medium, t3.large, m5.large, m5.xlarge, etc.
mgn_replication_server_instance_type = "t3.small"

# EBS volume type for MGN staging areas
# Options: gp2, gp3, io1, io2
mgn_staging_disk_type = "gp3"

# Bandwidth throttling for MGN replication in Mbps (0 = no throttling)
# Range: 0-10000 Mbps
mgn_bandwidth_throttling = 0

# Data plane routing method for MGN replication
# Options: PRIVATE_IP, PUBLIC_IP
mgn_data_plane_routing = "PRIVATE_IP"

# Whether to create public IP for replication servers
mgn_create_public_ip = false

# Whether to associate default security group with replication servers
mgn_associate_default_security_group = true

# Whether to use dedicated replication servers
mgn_use_dedicated_replication_server = false

# EBS encryption setting for MGN staging volumes
# Options: DEFAULT, CUSTOM
mgn_ebs_encryption = "DEFAULT"

# =============================================================================
# MIGRATION WAVES CONFIGURATION
# =============================================================================

# Configuration for migration waves (customize based on your server tiers)
migration_waves = [
  {
    name        = "Wave-1-WebTier"
    description = "Web tier servers - load balancers, web servers, reverse proxies"
    servers     = []
  },
  {
    name        = "Wave-2-AppTier"
    description = "Application tier servers - application servers, middleware"
    servers     = []
  },
  {
    name        = "Wave-3-DatabaseTier"
    description = "Database tier servers - primary and secondary databases"
    servers     = []
  },
  {
    name        = "Wave-4-SupportTier"
    description = "Support tier servers - monitoring, logging, backup systems"
    servers     = []
  }
]

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Subnet ID for MGN staging area (optional - will use default if not provided)
# staging_subnet_id = "subnet-12345678"

# Additional security group IDs for replication servers
# replication_security_group_ids = ["sg-12345678", "sg-87654321"]

# =============================================================================
# LAUNCH TEMPLATE CONFIGURATION
# =============================================================================

# Right-sizing method for target instances
# Options: BASIC, IN_AWS
target_instance_type_right_sizing_method = "BASIC"

# Launch disposition for migrated instances
# Options: STARTED, STOPPED
launch_disposition = "STARTED"

# Whether to copy private IP addresses from source servers
copy_private_ip = false

# Whether to copy tags from source servers
copy_tags = true

# Whether to enable MAP auto-tagging for migrated instances
enable_map_auto_tagging = true

# Whether to use BYOL (Bring Your Own License) for operating system
licensing_os_byol = true

# =============================================================================
# POST-LAUNCH ACTIONS CONFIGURATION
# =============================================================================

# Post-launch actions deployment type
# Options: TEST_AND_CUTOVER, CUTOVER_ONLY
post_launch_actions_deployment = "TEST_AND_CUTOVER"

# CloudWatch log group name for post-launch actions (optional)
# cloudwatch_log_group_name = "/aws/mgn/post-launch-actions"

# S3 bucket for storing post-launch action logs (optional - will use created bucket if not specified)
# s3_log_bucket = "my-mgn-logs-bucket"

# S3 key prefix for post-launch action outputs
s3_output_key_prefix = "mgn-logs/"

# =============================================================================
# MONITORING AND ALERTING
# =============================================================================

# Whether to enable CloudWatch monitoring for MGN resources
enable_cloudwatch_monitoring = true

# SNS topic ARN for MGN notifications (optional)
# sns_topic_arn = "arn:aws:sns:us-east-1:123456789012:mgn-notifications"

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# KMS key ID for encrypting MGN resources (optional)
# kms_key_id = "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012"

# =============================================================================
# TAGGING CONFIGURATION
# =============================================================================

# Additional tags to apply to all resources
additional_tags = {
  CostCenter    = "IT-Migration"
  Owner         = "Platform-Team"
  Department    = "Information-Technology"
  BusinessUnit  = "Enterprise-Infrastructure"
  Compliance    = "SOC2-PCI"
}

# Additional tags for MGN staging area resources
staging_area_tags = {
  Purpose     = "MGN-Staging"
  DataClass   = "Confidential"
  Retention   = "30-Days"
}

# =============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT SCENARIOS
# =============================================================================

# Small-scale migration (< 50 servers)
# mgn_replication_server_instance_type = "t3.small"
# mgn_bandwidth_throttling = 0
# enable_cloudwatch_monitoring = true

# Medium-scale migration (50-200 servers)
# mgn_replication_server_instance_type = "t3.medium"
# mgn_bandwidth_throttling = 1000
# mgn_use_dedicated_replication_server = true
# enable_cloudwatch_monitoring = true

# Large-scale migration (200+ servers)
# mgn_replication_server_instance_type = "m5.large"
# mgn_bandwidth_throttling = 2000
# mgn_use_dedicated_replication_server = true
# enable_cloudwatch_monitoring = true

# High-security environment
# mgn_data_plane_routing = "PRIVATE_IP"
# mgn_create_public_ip = false
# mgn_ebs_encryption = "CUSTOM"
# kms_key_id = "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012"

# Cost-optimized configuration
# mgn_replication_server_instance_type = "t3.micro"
# mgn_staging_disk_type = "gp2"
# mgn_bandwidth_throttling = 500
# enable_cloudwatch_monitoring = false