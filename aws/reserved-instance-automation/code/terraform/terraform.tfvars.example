# Example Terraform Variables File for Reserved Instance Management Automation
# Copy this file to terraform.tfvars and customize the values for your environment

# AWS Configuration
aws_region = "us-east-1"

# Project Configuration
project_name = "ri-management"
environment  = "dev"

# Notification Configuration
notification_email = "your-email@example.com"
# slack_webhook_url = "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"

# RI Management Thresholds
utilization_threshold     = 80    # Alert when RI utilization falls below this percentage
expiration_warning_days   = 90    # Send warning alerts X days before expiration
critical_expiration_days  = 30    # Send critical alerts X days before expiration

# Lambda Configuration
lambda_timeout             = 300  # Lambda timeout in seconds
lambda_memory_size         = 256  # Lambda memory in MB
lambda_reserved_concurrency = null # Optional: Set reserved concurrency limit

# Scheduling (using cron expressions)
daily_analysis_schedule         = "cron(0 8 * * ? *)"    # Daily at 8 AM UTC
weekly_recommendations_schedule = "cron(0 9 ? * MON *)"  # Monday at 9 AM UTC
weekly_monitoring_schedule      = "cron(0 10 ? * MON *)" # Monday at 10 AM UTC

# Storage Configuration
s3_bucket_versioning       = true
s3_bucket_lifecycle_days   = 30   # Days before transitioning to IA storage

# Monitoring Configuration
cloudwatch_log_retention_days    = 14    # CloudWatch log retention period
enable_xray_tracing             = false  # Enable AWS X-Ray tracing
dynamodb_point_in_time_recovery = false  # Enable DynamoDB PITR

# Cost Explorer API
enable_cost_explorer_api = true  # Enable Cost Explorer API (may incur charges)

# Additional Tags
additional_tags = {
  Owner       = "FinOps Team"
  CostCenter  = "12345"
  Application = "Cost Management"
}