AWSTemplateFormatVersion: '2010-09-09'
Description: 'Aurora Global Database with Multi-Master Replication and Write Forwarding - Creates a global database cluster spanning multiple regions with automated replication and write forwarding capabilities'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Global Database Configuration"
        Parameters:
          - GlobalDatabaseIdentifier
          - DatabaseEngine
          - EngineVersion
          - MasterUsername
          - MasterUserPassword
      - Label:
          default: "Regional Configuration"
        Parameters:
          - PrimaryRegion
          - SecondaryRegion1
          - SecondaryRegion2
          - DatabaseInstanceClass
      - Label:
          default: "High Availability Configuration"
        Parameters:
          - BackupRetentionPeriod
          - PreferredBackupWindow
          - PreferredMaintenanceWindow
          - DeletionProtection
      - Label:
          default: "Monitoring and Security"
        Parameters:
          - EnablePerformanceInsights
          - PerformanceInsightsRetentionPeriod
          - EnableCloudWatchLogsExports
          - MonitoringInterval
      - Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - DatabaseSubnetGroupName
          - DatabaseSecurityGroupIds
    ParameterLabels:
      GlobalDatabaseIdentifier:
        default: "Global Database Identifier"
      DatabaseEngine:
        default: "Database Engine"
      EngineVersion:
        default: "Engine Version"
      MasterUsername:
        default: "Master Username"
      MasterUserPassword:
        default: "Master User Password"
      PrimaryRegion:
        default: "Primary Region"
      SecondaryRegion1:
        default: "Secondary Region 1"
      SecondaryRegion2:
        default: "Secondary Region 2"
      DatabaseInstanceClass:
        default: "Database Instance Class"
      BackupRetentionPeriod:
        default: "Backup Retention Period"
      PreferredBackupWindow:
        default: "Preferred Backup Window"
      PreferredMaintenanceWindow:
        default: "Preferred Maintenance Window"
      DeletionProtection:
        default: "Deletion Protection"
      EnablePerformanceInsights:
        default: "Enable Performance Insights"
      PerformanceInsightsRetentionPeriod:
        default: "Performance Insights Retention Period"
      EnableCloudWatchLogsExports:
        default: "Enable CloudWatch Logs Exports"
      MonitoringInterval:
        default: "Enhanced Monitoring Interval"
      VpcId:
        default: "VPC ID"
      DatabaseSubnetGroupName:
        default: "Database Subnet Group Name"
      DatabaseSecurityGroupIds:
        default: "Database Security Group IDs"

Parameters:
  # Global Database Configuration
  GlobalDatabaseIdentifier:
    Type: String
    Default: !Sub 'global-ecommerce-db-${AWS::StackName}'
    Description: 'Unique identifier for the Aurora Global Database cluster'
    MinLength: 1
    MaxLength: 63
    AllowedPattern: '^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$'
    ConstraintDescription: 'Must begin with a letter and contain only alphanumeric characters and hyphens'

  DatabaseEngine:
    Type: String
    Default: 'aurora-mysql'
    AllowedValues:
      - 'aurora-mysql'
      - 'aurora-postgresql'
    Description: 'Aurora database engine type'

  EngineVersion:
    Type: String
    Default: '8.0.mysql_aurora.3.02.0'
    Description: 'Aurora database engine version'
    AllowedPattern: '^[0-9]+\.[0-9]+\.(mysql_aurora|postgres)\.[0-9]+\.[0-9]+$'
    ConstraintDescription: 'Must be a valid Aurora engine version'

  MasterUsername:
    Type: String
    Default: 'globaladmin'
    Description: 'Master username for Aurora clusters'
    MinLength: 1
    MaxLength: 63
    AllowedPattern: '^[a-zA-Z][a-zA-Z0-9]*$'
    ConstraintDescription: 'Must begin with a letter and contain only alphanumeric characters'

  MasterUserPassword:
    Type: String
    NoEcho: true
    Description: 'Master password for Aurora clusters (minimum 8 characters)'
    MinLength: 8
    MaxLength: 128
    AllowedPattern: '^[a-zA-Z0-9!@#$%^&*()_+\-=\[\]{};:,.<>?]*$'
    ConstraintDescription: 'Must contain only printable ASCII characters excluding /, ", and @'

  # Regional Configuration
  PrimaryRegion:
    Type: String
    Default: 'us-east-1'
    Description: 'Primary region for the global database'
    AllowedValues:
      - 'us-east-1'
      - 'us-east-2'
      - 'us-west-1'
      - 'us-west-2'
      - 'eu-west-1'
      - 'eu-west-2'
      - 'eu-central-1'
      - 'ap-southeast-1'
      - 'ap-southeast-2'
      - 'ap-northeast-1'
      - 'ap-northeast-2'
      - 'ap-south-1'
      - 'ca-central-1'
      - 'sa-east-1'

  SecondaryRegion1:
    Type: String
    Default: 'eu-west-1'
    Description: 'First secondary region for the global database'
    AllowedValues:
      - 'us-east-1'
      - 'us-east-2'
      - 'us-west-1'
      - 'us-west-2'
      - 'eu-west-1'
      - 'eu-west-2'
      - 'eu-central-1'
      - 'ap-southeast-1'
      - 'ap-southeast-2'
      - 'ap-northeast-1'
      - 'ap-northeast-2'
      - 'ap-south-1'
      - 'ca-central-1'
      - 'sa-east-1'

  SecondaryRegion2:
    Type: String
    Default: 'ap-southeast-1'
    Description: 'Second secondary region for the global database'
    AllowedValues:
      - 'us-east-1'
      - 'us-east-2'
      - 'us-west-1'
      - 'us-west-2'
      - 'eu-west-1'
      - 'eu-west-2'
      - 'eu-central-1'
      - 'ap-southeast-1'
      - 'ap-southeast-2'
      - 'ap-northeast-1'
      - 'ap-northeast-2'
      - 'ap-south-1'
      - 'ca-central-1'
      - 'sa-east-1'

  DatabaseInstanceClass:
    Type: String
    Default: 'db.r5.large'
    Description: 'Database instance class for Aurora instances'
    AllowedValues:
      - 'db.r5.large'
      - 'db.r5.xlarge'
      - 'db.r5.2xlarge'
      - 'db.r5.4xlarge'
      - 'db.r5.8xlarge'
      - 'db.r5.12xlarge'
      - 'db.r5.16xlarge'
      - 'db.r5.24xlarge'
      - 'db.r6g.large'
      - 'db.r6g.xlarge'
      - 'db.r6g.2xlarge'
      - 'db.r6g.4xlarge'
      - 'db.r6g.8xlarge'
      - 'db.r6g.12xlarge'
      - 'db.r6g.16xlarge'

  # High Availability Configuration
  BackupRetentionPeriod:
    Type: Number
    Default: 7
    MinValue: 1
    MaxValue: 35
    Description: 'Number of days to retain automated backups'

  PreferredBackupWindow:
    Type: String
    Default: '07:00-09:00'
    Description: 'Preferred backup window (UTC)'
    AllowedPattern: '^[0-9]{2}:[0-9]{2}-[0-9]{2}:[0-9]{2}$'
    ConstraintDescription: 'Must be in format HH:MM-HH:MM'

  PreferredMaintenanceWindow:
    Type: String
    Default: 'sun:09:00-sun:11:00'
    Description: 'Preferred maintenance window (UTC)'
    AllowedPattern: '^[a-z]{3}:[0-9]{2}:[0-9]{2}-[a-z]{3}:[0-9]{2}:[0-9]{2}$'
    ConstraintDescription: 'Must be in format ddd:HH:MM-ddd:HH:MM'

  DeletionProtection:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: 'Enable deletion protection for Aurora clusters'

  # Monitoring and Security
  EnablePerformanceInsights:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: 'Enable Performance Insights for Aurora instances'

  PerformanceInsightsRetentionPeriod:
    Type: Number
    Default: 7
    AllowedValues:
      - 7
      - 31
      - 93
      - 186
      - 372
      - 731
    Description: 'Performance Insights retention period in days'

  EnableCloudWatchLogsExports:
    Type: CommaDelimitedList
    Default: 'audit,error,general,slowquery'
    Description: 'List of log types to export to CloudWatch (MySQL)'

  MonitoringInterval:
    Type: Number
    Default: 60
    AllowedValues:
      - 0
      - 1
      - 5
      - 10
      - 15
      - 30
      - 60
    Description: 'Enhanced monitoring interval in seconds (0 to disable)'

  # Network Configuration
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: 'VPC ID where Aurora clusters will be deployed'

  DatabaseSubnetGroupName:
    Type: String
    Description: 'Name of the database subnet group for Aurora clusters'

  DatabaseSecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: 'Security group IDs for Aurora clusters'

# Conditions for conditional resource creation
Conditions:
  IsPrimaryRegion: !Equals [!Ref 'AWS::Region', !Ref PrimaryRegion]
  IsSecondaryRegion1: !Equals [!Ref 'AWS::Region', !Ref SecondaryRegion1]
  IsSecondaryRegion2: !Equals [!Ref 'AWS::Region', !Ref SecondaryRegion2]
  IsMySQL: !Equals [!Ref DatabaseEngine, 'aurora-mysql']
  IsPostgreSQL: !Equals [!Ref DatabaseEngine, 'aurora-postgresql']
  EnablePI: !Equals [!Ref EnablePerformanceInsights, 'true']
  EnableDeletionProtection: !Equals [!Ref DeletionProtection, 'true']
  EnableEnhancedMonitoring: !Not [!Equals [!Ref MonitoringInterval, 0]]

Resources:
  # IAM Role for Enhanced Monitoring
  EnhancedMonitoringRole:
    Type: AWS::IAM::Role
    Condition: EnableEnhancedMonitoring
    Properties:
      RoleName: !Sub 'AuroraGlobalDB-EnhancedMonitoring-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      Tags:
        - Key: Name
          Value: !Sub 'AuroraGlobalDB-EnhancedMonitoring-${AWS::StackName}'
        - Key: Purpose
          Value: 'Aurora Global Database Enhanced Monitoring'

  # Aurora Global Database Cluster
  GlobalDatabaseCluster:
    Type: AWS::RDS::GlobalCluster
    Condition: IsPrimaryRegion
    Properties:
      GlobalClusterIdentifier: !Ref GlobalDatabaseIdentifier
      Engine: !Ref DatabaseEngine
      EngineVersion: !Ref EngineVersion
      DeletionProtection: !Ref DeletionProtection
      StorageEncrypted: true
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot

  # Primary Aurora Cluster
  PrimaryAuroraCluster:
    Type: AWS::RDS::DBCluster
    Condition: IsPrimaryRegion
    Properties:
      DBClusterIdentifier: !Sub '${GlobalDatabaseIdentifier}-primary'
      GlobalClusterIdentifier: !Ref GlobalDatabaseCluster
      Engine: !Ref DatabaseEngine
      EngineVersion: !Ref EngineVersion
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      DBSubnetGroupName: !Ref DatabaseSubnetGroupName
      VpcSecurityGroupIds: !Ref DatabaseSecurityGroupIds
      DeletionProtection: !Ref DeletionProtection
      StorageEncrypted: true
      EnableCloudwatchLogsExports: !If
        - IsMySQL
        - !Ref EnableCloudWatchLogsExports
        - !If
          - IsPostgreSQL
          - ['postgresql']
          - !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Sub '${GlobalDatabaseIdentifier}-primary'
        - Key: Role
          Value: 'Primary'
        - Key: GlobalDatabase
          Value: !Ref GlobalDatabaseIdentifier
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot

  # Primary Cluster Writer Instance
  PrimaryWriterInstance:
    Type: AWS::RDS::DBInstance
    Condition: IsPrimaryRegion
    Properties:
      DBInstanceIdentifier: !Sub '${GlobalDatabaseIdentifier}-primary-writer'
      DBClusterIdentifier: !Ref PrimaryAuroraCluster
      DBInstanceClass: !Ref DatabaseInstanceClass
      Engine: !Ref DatabaseEngine
      EngineVersion: !Ref EngineVersion
      EnablePerformanceInsights: !Ref EnablePerformanceInsights
      PerformanceInsightsRetentionPeriod: !If
        - EnablePI
        - !Ref PerformanceInsightsRetentionPeriod
        - !Ref 'AWS::NoValue'
      MonitoringInterval: !Ref MonitoringInterval
      MonitoringRoleArn: !If
        - EnableEnhancedMonitoring
        - !GetAtt EnhancedMonitoringRole.Arn
        - !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Sub '${GlobalDatabaseIdentifier}-primary-writer'
        - Key: Role
          Value: 'Writer'
        - Key: Cluster
          Value: 'Primary'
        - Key: GlobalDatabase
          Value: !Ref GlobalDatabaseIdentifier
    DeletionPolicy: Delete

  # Primary Cluster Reader Instance
  PrimaryReaderInstance:
    Type: AWS::RDS::DBInstance
    Condition: IsPrimaryRegion
    Properties:
      DBInstanceIdentifier: !Sub '${GlobalDatabaseIdentifier}-primary-reader'
      DBClusterIdentifier: !Ref PrimaryAuroraCluster
      DBInstanceClass: !Ref DatabaseInstanceClass
      Engine: !Ref DatabaseEngine
      EngineVersion: !Ref EngineVersion
      EnablePerformanceInsights: !Ref EnablePerformanceInsights
      PerformanceInsightsRetentionPeriod: !If
        - EnablePI
        - !Ref PerformanceInsightsRetentionPeriod
        - !Ref 'AWS::NoValue'
      MonitoringInterval: !Ref MonitoringInterval
      MonitoringRoleArn: !If
        - EnableEnhancedMonitoring
        - !GetAtt EnhancedMonitoringRole.Arn
        - !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Sub '${GlobalDatabaseIdentifier}-primary-reader'
        - Key: Role
          Value: 'Reader'
        - Key: Cluster
          Value: 'Primary'
        - Key: GlobalDatabase
          Value: !Ref GlobalDatabaseIdentifier
    DeletionPolicy: Delete

  # Secondary Aurora Cluster 1 (with Write Forwarding)
  SecondaryAuroraCluster1:
    Type: AWS::RDS::DBCluster
    Condition: IsSecondaryRegion1
    Properties:
      DBClusterIdentifier: !Sub '${GlobalDatabaseIdentifier}-secondary-1'
      GlobalClusterIdentifier: !Ref GlobalDatabaseIdentifier
      Engine: !Ref DatabaseEngine
      EngineVersion: !Ref EngineVersion
      DBSubnetGroupName: !Ref DatabaseSubnetGroupName
      VpcSecurityGroupIds: !Ref DatabaseSecurityGroupIds
      DeletionProtection: !Ref DeletionProtection
      GlobalWriteForwardingRequested: true
      StorageEncrypted: true
      EnableCloudwatchLogsExports: !If
        - IsMySQL
        - !Ref EnableCloudWatchLogsExports
        - !If
          - IsPostgreSQL
          - ['postgresql']
          - !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Sub '${GlobalDatabaseIdentifier}-secondary-1'
        - Key: Role
          Value: 'Secondary'
        - Key: WriteForwarding
          Value: 'Enabled'
        - Key: GlobalDatabase
          Value: !Ref GlobalDatabaseIdentifier
    DeletionPolicy: Delete

  # Secondary Cluster 1 Writer Instance
  Secondary1WriterInstance:
    Type: AWS::RDS::DBInstance
    Condition: IsSecondaryRegion1
    Properties:
      DBInstanceIdentifier: !Sub '${GlobalDatabaseIdentifier}-secondary-1-writer'
      DBClusterIdentifier: !Ref SecondaryAuroraCluster1
      DBInstanceClass: !Ref DatabaseInstanceClass
      Engine: !Ref DatabaseEngine
      EngineVersion: !Ref EngineVersion
      EnablePerformanceInsights: !Ref EnablePerformanceInsights
      PerformanceInsightsRetentionPeriod: !If
        - EnablePI
        - !Ref PerformanceInsightsRetentionPeriod
        - !Ref 'AWS::NoValue'
      MonitoringInterval: !Ref MonitoringInterval
      MonitoringRoleArn: !If
        - EnableEnhancedMonitoring
        - !GetAtt EnhancedMonitoringRole.Arn
        - !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Sub '${GlobalDatabaseIdentifier}-secondary-1-writer'
        - Key: Role
          Value: 'Writer-WriteForwarding'
        - Key: Cluster
          Value: 'Secondary-1'
        - Key: GlobalDatabase
          Value: !Ref GlobalDatabaseIdentifier
    DeletionPolicy: Delete

  # Secondary Cluster 1 Reader Instance
  Secondary1ReaderInstance:
    Type: AWS::RDS::DBInstance
    Condition: IsSecondaryRegion1
    Properties:
      DBInstanceIdentifier: !Sub '${GlobalDatabaseIdentifier}-secondary-1-reader'
      DBClusterIdentifier: !Ref SecondaryAuroraCluster1
      DBInstanceClass: !Ref DatabaseInstanceClass
      Engine: !Ref DatabaseEngine
      EngineVersion: !Ref EngineVersion
      EnablePerformanceInsights: !Ref EnablePerformanceInsights
      PerformanceInsightsRetentionPeriod: !If
        - EnablePI
        - !Ref PerformanceInsightsRetentionPeriod
        - !Ref 'AWS::NoValue'
      MonitoringInterval: !Ref MonitoringInterval
      MonitoringRoleArn: !If
        - EnableEnhancedMonitoring
        - !GetAtt EnhancedMonitoringRole.Arn
        - !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Sub '${GlobalDatabaseIdentifier}-secondary-1-reader'
        - Key: Role
          Value: 'Reader'
        - Key: Cluster
          Value: 'Secondary-1'
        - Key: GlobalDatabase
          Value: !Ref GlobalDatabaseIdentifier
    DeletionPolicy: Delete

  # Secondary Aurora Cluster 2 (with Write Forwarding)
  SecondaryAuroraCluster2:
    Type: AWS::RDS::DBCluster
    Condition: IsSecondaryRegion2
    Properties:
      DBClusterIdentifier: !Sub '${GlobalDatabaseIdentifier}-secondary-2'
      GlobalClusterIdentifier: !Ref GlobalDatabaseIdentifier
      Engine: !Ref DatabaseEngine
      EngineVersion: !Ref EngineVersion
      DBSubnetGroupName: !Ref DatabaseSubnetGroupName
      VpcSecurityGroupIds: !Ref DatabaseSecurityGroupIds
      DeletionProtection: !Ref DeletionProtection
      GlobalWriteForwardingRequested: true
      StorageEncrypted: true
      EnableCloudwatchLogsExports: !If
        - IsMySQL
        - !Ref EnableCloudWatchLogsExports
        - !If
          - IsPostgreSQL
          - ['postgresql']
          - !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Sub '${GlobalDatabaseIdentifier}-secondary-2'
        - Key: Role
          Value: 'Secondary'
        - Key: WriteForwarding
          Value: 'Enabled'
        - Key: GlobalDatabase
          Value: !Ref GlobalDatabaseIdentifier
    DeletionPolicy: Delete

  # Secondary Cluster 2 Writer Instance
  Secondary2WriterInstance:
    Type: AWS::RDS::DBInstance
    Condition: IsSecondaryRegion2
    Properties:
      DBInstanceIdentifier: !Sub '${GlobalDatabaseIdentifier}-secondary-2-writer'
      DBClusterIdentifier: !Ref SecondaryAuroraCluster2
      DBInstanceClass: !Ref DatabaseInstanceClass
      Engine: !Ref DatabaseEngine
      EngineVersion: !Ref EngineVersion
      EnablePerformanceInsights: !Ref EnablePerformanceInsights
      PerformanceInsightsRetentionPeriod: !If
        - EnablePI
        - !Ref PerformanceInsightsRetentionPeriod
        - !Ref 'AWS::NoValue'
      MonitoringInterval: !Ref MonitoringInterval
      MonitoringRoleArn: !If
        - EnableEnhancedMonitoring
        - !GetAtt EnhancedMonitoringRole.Arn
        - !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Sub '${GlobalDatabaseIdentifier}-secondary-2-writer'
        - Key: Role
          Value: 'Writer-WriteForwarding'
        - Key: Cluster
          Value: 'Secondary-2'
        - Key: GlobalDatabase
          Value: !Ref GlobalDatabaseIdentifier
    DeletionPolicy: Delete

  # Secondary Cluster 2 Reader Instance
  Secondary2ReaderInstance:
    Type: AWS::RDS::DBInstance
    Condition: IsSecondaryRegion2
    Properties:
      DBInstanceIdentifier: !Sub '${GlobalDatabaseIdentifier}-secondary-2-reader'
      DBClusterIdentifier: !Ref SecondaryAuroraCluster2
      DBInstanceClass: !Ref DatabaseInstanceClass
      Engine: !Ref DatabaseEngine
      EngineVersion: !Ref EngineVersion
      EnablePerformanceInsights: !Ref EnablePerformanceInsights
      PerformanceInsightsRetentionPeriod: !If
        - EnablePI
        - !Ref PerformanceInsightsRetentionPeriod
        - !Ref 'AWS::NoValue'
      MonitoringInterval: !Ref MonitoringInterval
      MonitoringRoleArn: !If
        - EnableEnhancedMonitoring
        - !GetAtt EnhancedMonitoringRole.Arn
        - !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Sub '${GlobalDatabaseIdentifier}-secondary-2-reader'
        - Key: Role
          Value: 'Reader'
        - Key: Cluster
          Value: 'Secondary-2'
        - Key: GlobalDatabase
          Value: !Ref GlobalDatabaseIdentifier
    DeletionPolicy: Delete

  # CloudWatch Dashboard for Global Database Monitoring
  GlobalDatabaseDashboard:
    Type: AWS::CloudWatch::Dashboard
    Condition: IsPrimaryRegion
    Properties:
      DashboardName: !Sub 'Aurora-Global-Database-${AWS::StackName}'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/RDS", "DatabaseConnections", "DBClusterIdentifier", "${GlobalDatabaseIdentifier}-primary" ],
                  [ ".", ".", ".", "${GlobalDatabaseIdentifier}-secondary-1" ],
                  [ ".", ".", ".", "${GlobalDatabaseIdentifier}-secondary-2" ]
                ],
                "period": 300,
                "stat": "Average",
                "region": "${AWS::Region}",
                "title": "Global Database Connections",
                "view": "timeSeries",
                "stacked": false
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/RDS", "AuroraGlobalDBReplicationLag", "DBClusterIdentifier", "${GlobalDatabaseIdentifier}-secondary-1" ],
                  [ ".", ".", ".", "${GlobalDatabaseIdentifier}-secondary-2" ]
                ],
                "period": 300,
                "stat": "Average",
                "region": "${AWS::Region}",
                "title": "Global Database Replication Lag",
                "view": "timeSeries",
                "stacked": false,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/RDS", "CPUUtilization", "DBClusterIdentifier", "${GlobalDatabaseIdentifier}-primary" ],
                  [ ".", ".", ".", "${GlobalDatabaseIdentifier}-secondary-1" ],
                  [ ".", ".", ".", "${GlobalDatabaseIdentifier}-secondary-2" ]
                ],
                "period": 300,
                "stat": "Average",
                "region": "${AWS::Region}",
                "title": "CPU Utilization",
                "view": "timeSeries",
                "stacked": false,
                "yAxis": {
                  "left": {
                    "min": 0,
                    "max": 100
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/RDS", "DatabaseConnections", "DBInstanceIdentifier", "${GlobalDatabaseIdentifier}-primary-writer" ],
                  [ ".", ".", ".", "${GlobalDatabaseIdentifier}-primary-reader" ],
                  [ ".", ".", ".", "${GlobalDatabaseIdentifier}-secondary-1-writer" ],
                  [ ".", ".", ".", "${GlobalDatabaseIdentifier}-secondary-1-reader" ],
                  [ ".", ".", ".", "${GlobalDatabaseIdentifier}-secondary-2-writer" ],
                  [ ".", ".", ".", "${GlobalDatabaseIdentifier}-secondary-2-reader" ]
                ],
                "period": 300,
                "stat": "Average",
                "region": "${AWS::Region}",
                "title": "Instance-Level Database Connections",
                "view": "timeSeries",
                "stacked": false
              }
            }
          ]
        }

  # CloudWatch Alarms for Global Database Monitoring
  ReplicationLagAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsPrimaryRegion
    Properties:
      AlarmName: !Sub 'Aurora-GlobalDB-ReplicationLag-${AWS::StackName}'
      AlarmDescription: 'Aurora Global Database replication lag is high'
      MetricName: AuroraGlobalDBReplicationLag
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 1000
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBClusterIdentifier
          Value: !Sub '${GlobalDatabaseIdentifier}-secondary-1'
      AlarmActions:
        - !Ref GlobalDatabaseSNSTopic
      TreatMissingData: notBreaching

  CPUUtilizationAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsPrimaryRegion
    Properties:
      AlarmName: !Sub 'Aurora-GlobalDB-CPUUtilization-${AWS::StackName}'
      AlarmDescription: 'Aurora Global Database CPU utilization is high'
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBClusterIdentifier
          Value: !Sub '${GlobalDatabaseIdentifier}-primary'
      AlarmActions:
        - !Ref GlobalDatabaseSNSTopic
      TreatMissingData: notBreaching

  # SNS Topic for Global Database Alerts
  GlobalDatabaseSNSTopic:
    Type: AWS::SNS::Topic
    Condition: IsPrimaryRegion
    Properties:
      TopicName: !Sub 'Aurora-GlobalDB-Alerts-${AWS::StackName}'
      DisplayName: 'Aurora Global Database Alerts'
      KmsMasterKeyId: alias/aws/sns

  # Parameter Store entries for connection strings
  PrimaryWriterEndpointParameter:
    Type: AWS::SSM::Parameter
    Condition: IsPrimaryRegion
    Properties:
      Name: !Sub '/aurora/global-db/${AWS::StackName}/primary/writer-endpoint'
      Type: String
      Value: !GetAtt PrimaryAuroraCluster.Endpoint.Address
      Description: 'Primary cluster writer endpoint for Aurora Global Database'
      Tags:
        GlobalDatabase: !Ref GlobalDatabaseIdentifier
        Role: 'Primary-Writer'

  PrimaryReaderEndpointParameter:
    Type: AWS::SSM::Parameter
    Condition: IsPrimaryRegion
    Properties:
      Name: !Sub '/aurora/global-db/${AWS::StackName}/primary/reader-endpoint'
      Type: String
      Value: !GetAtt PrimaryAuroraCluster.ReadEndpoint.Address
      Description: 'Primary cluster reader endpoint for Aurora Global Database'
      Tags:
        GlobalDatabase: !Ref GlobalDatabaseIdentifier
        Role: 'Primary-Reader'

  Secondary1WriterEndpointParameter:
    Type: AWS::SSM::Parameter
    Condition: IsSecondaryRegion1
    Properties:
      Name: !Sub '/aurora/global-db/${AWS::StackName}/secondary-1/writer-endpoint'
      Type: String
      Value: !GetAtt SecondaryAuroraCluster1.Endpoint.Address
      Description: 'Secondary cluster 1 writer endpoint with write forwarding'
      Tags:
        GlobalDatabase: !Ref GlobalDatabaseIdentifier
        Role: 'Secondary-1-Writer'

  Secondary2WriterEndpointParameter:
    Type: AWS::SSM::Parameter
    Condition: IsSecondaryRegion2
    Properties:
      Name: !Sub '/aurora/global-db/${AWS::StackName}/secondary-2/writer-endpoint'
      Type: String
      Value: !GetAtt SecondaryAuroraCluster2.Endpoint.Address
      Description: 'Secondary cluster 2 writer endpoint with write forwarding'
      Tags:
        GlobalDatabase: !Ref GlobalDatabaseIdentifier
        Role: 'Secondary-2-Writer'

Outputs:
  # Global Database Information
  GlobalDatabaseIdentifier:
    Description: 'Aurora Global Database identifier'
    Value: !Ref GlobalDatabaseIdentifier
    Export:
      Name: !Sub '${AWS::StackName}-GlobalDatabaseIdentifier'

  GlobalDatabaseArn:
    Condition: IsPrimaryRegion
    Description: 'Aurora Global Database ARN'
    Value: !Sub 'arn:aws:rds::${AWS::AccountId}:global-cluster:${GlobalDatabaseIdentifier}'
    Export:
      Name: !Sub '${AWS::StackName}-GlobalDatabaseArn'

  # Primary Cluster Outputs
  PrimaryClusterIdentifier:
    Condition: IsPrimaryRegion
    Description: 'Primary Aurora cluster identifier'
    Value: !Ref PrimaryAuroraCluster
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryClusterIdentifier'

  PrimaryWriterEndpoint:
    Condition: IsPrimaryRegion
    Description: 'Primary cluster writer endpoint'
    Value: !GetAtt PrimaryAuroraCluster.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryWriterEndpoint'

  PrimaryReaderEndpoint:
    Condition: IsPrimaryRegion
    Description: 'Primary cluster reader endpoint'
    Value: !GetAtt PrimaryAuroraCluster.ReadEndpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryReaderEndpoint'

  PrimaryWriterPort:
    Condition: IsPrimaryRegion
    Description: 'Primary cluster writer port'
    Value: !GetAtt PrimaryAuroraCluster.Endpoint.Port
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryWriterPort'

  # Secondary Cluster 1 Outputs
  Secondary1ClusterIdentifier:
    Condition: IsSecondaryRegion1
    Description: 'Secondary cluster 1 identifier'
    Value: !Ref SecondaryAuroraCluster1
    Export:
      Name: !Sub '${AWS::StackName}-Secondary1ClusterIdentifier'

  Secondary1WriterEndpoint:
    Condition: IsSecondaryRegion1
    Description: 'Secondary cluster 1 writer endpoint (with write forwarding)'
    Value: !GetAtt SecondaryAuroraCluster1.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-Secondary1WriterEndpoint'

  Secondary1ReaderEndpoint:
    Condition: IsSecondaryRegion1
    Description: 'Secondary cluster 1 reader endpoint'
    Value: !GetAtt SecondaryAuroraCluster1.ReadEndpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-Secondary1ReaderEndpoint'

  # Secondary Cluster 2 Outputs
  Secondary2ClusterIdentifier:
    Condition: IsSecondaryRegion2
    Description: 'Secondary cluster 2 identifier'
    Value: !Ref SecondaryAuroraCluster2
    Export:
      Name: !Sub '${AWS::StackName}-Secondary2ClusterIdentifier'

  Secondary2WriterEndpoint:
    Condition: IsSecondaryRegion2
    Description: 'Secondary cluster 2 writer endpoint (with write forwarding)'
    Value: !GetAtt SecondaryAuroraCluster2.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-Secondary2WriterEndpoint'

  Secondary2ReaderEndpoint:
    Condition: IsSecondaryRegion2
    Description: 'Secondary cluster 2 reader endpoint'
    Value: !GetAtt SecondaryAuroraCluster2.ReadEndpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-Secondary2ReaderEndpoint'

  # Monitoring Outputs
  DashboardURL:
    Condition: IsPrimaryRegion
    Description: 'CloudWatch Dashboard URL for Global Database monitoring'
    Value: !Sub 'https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=Aurora-Global-Database-${AWS::StackName}'
    Export:
      Name: !Sub '${AWS::StackName}-DashboardURL'

  SNSTopicArn:
    Condition: IsPrimaryRegion
    Description: 'SNS Topic ARN for Global Database alerts'
    Value: !Ref GlobalDatabaseSNSTopic
    Export:
      Name: !Sub '${AWS::StackName}-SNSTopicArn'

  # Configuration Information
  DatabaseEngine:
    Description: 'Aurora database engine'
    Value: !Ref DatabaseEngine
    Export:
      Name: !Sub '${AWS::StackName}-DatabaseEngine'

  EngineVersion:
    Description: 'Aurora database engine version'
    Value: !Ref EngineVersion
    Export:
      Name: !Sub '${AWS::StackName}-EngineVersion'

  MasterUsername:
    Description: 'Master username for Aurora clusters'
    Value: !Ref MasterUsername
    Export:
      Name: !Sub '${AWS::StackName}-MasterUsername'

  WriteForwardingStatus:
    Description: 'Write forwarding status for secondary clusters'
    Value: 'Enabled'
    Export:
      Name: !Sub '${AWS::StackName}-WriteForwardingStatus'

  # Deployment Information
  DeploymentRegion:
    Description: 'Current deployment region'
    Value: !Ref 'AWS::Region'
    Export:
      Name: !Sub '${AWS::StackName}-DeploymentRegion'

  StackName:
    Description: 'CloudFormation stack name'
    Value: !Ref 'AWS::StackName'
    Export:
      Name: !Sub '${AWS::StackName}-StackName'

  # Cost Optimization Information
  EstimatedMonthlyCost:
    Description: 'Estimated monthly cost for Aurora Global Database (based on db.r5.large instances)'
    Value: 'Approximately $500-800 USD per month for 3 regions with 6 instances'
    Export:
      Name: !Sub '${AWS::StackName}-EstimatedMonthlyCost'