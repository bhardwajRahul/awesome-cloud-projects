AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infrastructure as Code for AWS Database Migration Service (DMS) with comprehensive monitoring and alerting'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "DMS Replication Instance Configuration"
        Parameters:
          - ReplicationInstanceClass
          - AllocatedStorage
          - MultiAZ
          - PubliclyAccessible
          - AutoMinorVersionUpgrade
      - Label:
          default: "Source Database Configuration"
        Parameters:
          - SourceDatabaseEngine
          - SourceServerName
          - SourcePort
          - SourceDatabaseName
          - SourceUsername
          - SourcePassword
          - SourceSSLMode
      - Label:
          default: "Target Database Configuration"
        Parameters:
          - TargetDatabaseEngine
          - TargetServerName
          - TargetPort
          - TargetDatabaseName
          - TargetUsername
          - TargetPassword
          - TargetSSLMode
      - Label:
          default: "Migration Configuration"
        Parameters:
          - MigrationType
          - TargetTablePrepMode
          - EnableValidation
          - ValidationMode
      - Label:
          default: "Monitoring and Alerting"
        Parameters:
          - NotificationEmail
          - EnableEventSubscription
          - CDCLatencyThreshold
      - Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - SubnetIds
    ParameterLabels:
      ReplicationInstanceClass:
        default: "Replication Instance Class"
      AllocatedStorage:
        default: "Allocated Storage (GB)"
      MultiAZ:
        default: "Multi-AZ Deployment"
      PubliclyAccessible:
        default: "Publicly Accessible"
      AutoMinorVersionUpgrade:
        default: "Auto Minor Version Upgrade"
      SourceDatabaseEngine:
        default: "Source Database Engine"
      SourceServerName:
        default: "Source Server Name"
      SourcePort:
        default: "Source Port"
      SourceDatabaseName:
        default: "Source Database Name"
      SourceUsername:
        default: "Source Username"
      SourcePassword:
        default: "Source Password"
      SourceSSLMode:
        default: "Source SSL Mode"
      TargetDatabaseEngine:
        default: "Target Database Engine"
      TargetServerName:
        default: "Target Server Name"
      TargetPort:
        default: "Target Port"
      TargetDatabaseName:
        default: "Target Database Name"
      TargetUsername:
        default: "Target Username"
      TargetPassword:
        default: "Target Password"
      TargetSSLMode:
        default: "Target SSL Mode"
      MigrationType:
        default: "Migration Type"
      TargetTablePrepMode:
        default: "Target Table Preparation Mode"
      EnableValidation:
        default: "Enable Data Validation"
      ValidationMode:
        default: "Validation Mode"
      NotificationEmail:
        default: "Notification Email"
      EnableEventSubscription:
        default: "Enable Event Subscription"
      CDCLatencyThreshold:
        default: "CDC Latency Threshold (seconds)"
      VpcId:
        default: "VPC ID"
      SubnetIds:
        default: "Subnet IDs"

Parameters:
  # DMS Replication Instance Configuration
  ReplicationInstanceClass:
    Type: String
    Default: dms.t3.medium
    AllowedValues:
      - dms.t3.micro
      - dms.t3.small
      - dms.t3.medium
      - dms.t3.large
      - dms.c5.large
      - dms.c5.xlarge
      - dms.c5.2xlarge
      - dms.c5.4xlarge
      - dms.r5.large
      - dms.r5.xlarge
      - dms.r5.2xlarge
      - dms.r5.4xlarge
    Description: The compute and memory capacity of the replication instance

  AllocatedStorage:
    Type: Number
    Default: 100
    MinValue: 20
    MaxValue: 6144
    Description: The amount of storage (in gigabytes) to allocate for the replication instance

  MultiAZ:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: Specifies whether the replication instance is a Multi-AZ deployment

  PubliclyAccessible:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: Specifies the accessibility options for the replication instance

  AutoMinorVersionUpgrade:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: Indicates that minor engine upgrades are applied automatically

  # Source Database Configuration
  SourceDatabaseEngine:
    Type: String
    Default: mysql
    AllowedValues:
      - mysql
      - oracle-ee
      - oracle-se2
      - oracle-se1
      - oracle-se
      - postgres
      - mariadb
      - aurora
      - aurora-postgresql
      - redshift
      - s3
      - db2
      - azuredb
      - sybase
      - dynamodb
      - mongodb
      - kinesis
      - kafka
      - elasticsearch
      - docdb
      - sqlserver
    Description: The type of engine for the source endpoint

  SourceServerName:
    Type: String
    Description: The name of the server where the source database resides
    ConstraintDescription: Must be a valid hostname or IP address

  SourcePort:
    Type: Number
    Default: 3306
    MinValue: 1
    MaxValue: 65535
    Description: The port used by the source database

  SourceDatabaseName:
    Type: String
    Description: The name of the source database
    ConstraintDescription: Must be a valid database name

  SourceUsername:
    Type: String
    Description: The user name to be used to login to the source database
    ConstraintDescription: Must be a valid database username

  SourcePassword:
    Type: String
    NoEcho: true
    Description: The password to be used to login to the source database
    MinLength: 8
    ConstraintDescription: Must be at least 8 characters

  SourceSSLMode:
    Type: String
    Default: require
    AllowedValues: [none, require, verify-ca, verify-full]
    Description: The SSL mode to use for the source connection

  # Target Database Configuration
  TargetDatabaseEngine:
    Type: String
    Default: mysql
    AllowedValues:
      - mysql
      - oracle-ee
      - oracle-se2
      - oracle-se1
      - oracle-se
      - postgres
      - mariadb
      - aurora
      - aurora-postgresql
      - redshift
      - s3
      - db2
      - sybase
      - dynamodb
      - kinesis
      - elasticsearch
      - docdb
      - sqlserver
    Description: The type of engine for the target endpoint

  TargetServerName:
    Type: String
    Description: The name of the server where the target database resides
    ConstraintDescription: Must be a valid hostname or IP address

  TargetPort:
    Type: Number
    Default: 3306
    MinValue: 1
    MaxValue: 65535
    Description: The port used by the target database

  TargetDatabaseName:
    Type: String
    Description: The name of the target database
    ConstraintDescription: Must be a valid database name

  TargetUsername:
    Type: String
    Description: The user name to be used to login to the target database
    ConstraintDescription: Must be a valid database username

  TargetPassword:
    Type: String
    NoEcho: true
    Description: The password to be used to login to the target database
    MinLength: 8
    ConstraintDescription: Must be at least 8 characters

  TargetSSLMode:
    Type: String
    Default: require
    AllowedValues: [none, require, verify-ca, verify-full]
    Description: The SSL mode to use for the target connection

  # Migration Configuration
  MigrationType:
    Type: String
    Default: full-load-and-cdc
    AllowedValues: [full-load, cdc, full-load-and-cdc]
    Description: The migration type for the replication task

  TargetTablePrepMode:
    Type: String
    Default: DROP_AND_CREATE
    AllowedValues: [NOTHING, DROP_AND_CREATE, TRUNCATE_BEFORE_LOAD]
    Description: The action to take on the target table before the task starts

  EnableValidation:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: Enable data validation for the migration task

  ValidationMode:
    Type: String
    Default: ROW_LEVEL
    AllowedValues: [ROW_LEVEL, TABLE_LEVEL]
    Description: The validation mode for data validation

  # Monitoring and Alerting
  NotificationEmail:
    Type: String
    Description: Email address for DMS event notifications
    AllowedPattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    ConstraintDescription: Must be a valid email address

  EnableEventSubscription:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: Enable DMS event subscription for monitoring

  CDCLatencyThreshold:
    Type: Number
    Default: 300
    MinValue: 60
    MaxValue: 3600
    Description: CDC latency threshold in seconds for CloudWatch alarms

  # Network Configuration
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The VPC ID where DMS resources will be created

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnet IDs for the DMS subnet group (must span multiple AZs)

Conditions:
  # Condition to check if event subscription should be created
  CreateEventSubscription: !Equals [!Ref EnableEventSubscription, 'true']
  
  # Condition to check if data validation should be enabled
  EnableDataValidation: !Equals [!Ref EnableValidation, 'true']
  
  # Condition to check if Multi-AZ deployment is enabled
  IsMultiAZ: !Equals [!Ref MultiAZ, 'true']

Resources:
  # SNS Topic for DMS Event Notifications
  DMSNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${AWS::StackName}-dms-notifications'
      DisplayName: 'DMS Migration Notifications'
      KmsMasterKeyId: alias/aws/sns

  # SNS Topic Subscription for Email Notifications
  DMSEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref DMSNotificationTopic
      Protocol: email
      Endpoint: !Ref NotificationEmail

  # DMS Subnet Group
  DMSSubnetGroup:
    Type: AWS::DMS::ReplicationSubnetGroup
    Properties:
      ReplicationSubnetGroupIdentifier: !Sub '${AWS::StackName}-dms-subnet-group'
      ReplicationSubnetGroupDescription: 'DMS subnet group for database migration'
      SubnetIds: !Ref SubnetIds
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-dms-subnet-group'
        - Key: Project
          Value: DatabaseMigration
        - Key: Environment
          Value: Production

  # DMS Replication Instance
  DMSReplicationInstance:
    Type: AWS::DMS::ReplicationInstance
    Properties:
      ReplicationInstanceIdentifier: !Sub '${AWS::StackName}-dms-replication-instance'
      ReplicationInstanceClass: !Ref ReplicationInstanceClass
      AllocatedStorage: !Ref AllocatedStorage
      ReplicationSubnetGroupIdentifier: !Ref DMSSubnetGroup
      MultiAZ: !Ref MultiAZ
      PubliclyAccessible: !Ref PubliclyAccessible
      AutoMinorVersionUpgrade: !Ref AutoMinorVersionUpgrade
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-dms-replication-instance'
        - Key: Project
          Value: DatabaseMigration
        - Key: Environment
          Value: Production

  # Source Database Endpoint
  DMSSourceEndpoint:
    Type: AWS::DMS::Endpoint
    Properties:
      EndpointIdentifier: !Sub '${AWS::StackName}-source-endpoint'
      EndpointType: source
      EngineName: !Ref SourceDatabaseEngine
      ServerName: !Ref SourceServerName
      Port: !Ref SourcePort
      DatabaseName: !Ref SourceDatabaseName
      Username: !Ref SourceUsername
      Password: !Ref SourcePassword
      SslMode: !Ref SourceSSLMode
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-source-endpoint'
        - Key: Project
          Value: DatabaseMigration
        - Key: Type
          Value: Source

  # Target Database Endpoint
  DMSTargetEndpoint:
    Type: AWS::DMS::Endpoint
    Properties:
      EndpointIdentifier: !Sub '${AWS::StackName}-target-endpoint'
      EndpointType: target
      EngineName: !Ref TargetDatabaseEngine
      ServerName: !Ref TargetServerName
      Port: !Ref TargetPort
      DatabaseName: !Ref TargetDatabaseName
      Username: !Ref TargetUsername
      Password: !Ref TargetPassword
      SslMode: !Ref TargetSSLMode
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-target-endpoint'
        - Key: Project
          Value: DatabaseMigration
        - Key: Type
          Value: Target

  # DMS Replication Task
  DMSReplicationTask:
    Type: AWS::DMS::ReplicationTask
    DependsOn:
      - DMSReplicationInstance
      - DMSSourceEndpoint
      - DMSTargetEndpoint
    Properties:
      ReplicationTaskIdentifier: !Sub '${AWS::StackName}-migration-task'
      SourceEndpointArn: !Ref DMSSourceEndpoint
      TargetEndpointArn: !Ref DMSTargetEndpoint
      ReplicationInstanceArn: !Ref DMSReplicationInstance
      MigrationType: !Ref MigrationType
      TableMappings: !Sub |
        {
          "rules": [
            {
              "rule-type": "selection",
              "rule-id": "1",
              "rule-name": "include-all-tables",
              "object-locator": {
                "schema-name": "%",
                "table-name": "%"
              },
              "rule-action": "include",
              "filters": []
            }
          ]
        }
      ReplicationTaskSettings: !Sub |
        {
          "TargetMetadata": {
            "TargetSchema": "",
            "SupportLobs": true,
            "FullLobMode": false,
            "LobChunkSize": 0,
            "LimitedSizeLobMode": true,
            "LobMaxSize": 32,
            "InlineLobMaxSize": 0,
            "LoadMaxFileSize": 0,
            "ParallelLoadThreads": 0,
            "ParallelLoadBufferSize": 0,
            "BatchApplyEnabled": false,
            "TaskRecoveryTableEnabled": false,
            "ParallelApplyThreads": 0,
            "ParallelApplyBufferSize": 0,
            "ParallelApplyQueuesPerThread": 0
          },
          "FullLoadSettings": {
            "TargetTablePrepMode": "${TargetTablePrepMode}",
            "CreatePkAfterFullLoad": false,
            "StopTaskCachedChangesApplied": false,
            "StopTaskCachedChangesNotApplied": false,
            "MaxFullLoadSubTasks": 8,
            "TransactionConsistencyTimeout": 600,
            "CommitRate": 10000
          },
          "Logging": {
            "EnableLogging": true,
            "LogComponents": [
              {
                "Id": "SOURCE_UNLOAD",
                "Severity": "LOGGER_SEVERITY_DEFAULT"
              },
              {
                "Id": "TARGET_LOAD",
                "Severity": "LOGGER_SEVERITY_DEFAULT"
              },
              {
                "Id": "SOURCE_CAPTURE",
                "Severity": "LOGGER_SEVERITY_DEFAULT"
              },
              {
                "Id": "TARGET_APPLY",
                "Severity": "LOGGER_SEVERITY_DEFAULT"
              }
            ]
          },
          "ControlTablesSettings": {
            "ControlSchema": "",
            "HistoryTimeslotInMinutes": 5,
            "HistoryTableEnabled": false,
            "SuspendedTablesTableEnabled": false,
            "StatusTableEnabled": false
          },
          "StreamBufferSettings": {
            "StreamBufferCount": 3,
            "StreamBufferSizeInMB": 8,
            "CtrlStreamBufferSizeInMB": 5
          },
          "ChangeProcessingDdlHandlingPolicy": {
            "HandleSourceTableDropped": true,
            "HandleSourceTableTruncated": true,
            "HandleSourceTableAltered": true
          },
          "ErrorBehavior": {
            "DataErrorPolicy": "LOG_ERROR",
            "DataTruncationErrorPolicy": "LOG_ERROR",
            "DataErrorEscalationPolicy": "SUSPEND_TABLE",
            "DataErrorEscalationCount": 0,
            "TableErrorPolicy": "SUSPEND_TABLE",
            "TableErrorEscalationPolicy": "STOP_TASK",
            "TableErrorEscalationCount": 0,
            "RecoverableErrorCount": -1,
            "RecoverableErrorInterval": 5,
            "RecoverableErrorThrottling": true,
            "RecoverableErrorThrottlingMax": 1800,
            "RecoverableErrorStopRetryAfterThrottlingMax": true,
            "ApplyErrorDeletePolicy": "IGNORE_RECORD",
            "ApplyErrorInsertPolicy": "LOG_ERROR",
            "ApplyErrorUpdatePolicy": "LOG_ERROR",
            "ApplyErrorEscalationPolicy": "LOG_ERROR",
            "ApplyErrorEscalationCount": 0,
            "ApplyErrorFailOnTruncationDdl": false,
            "FullLoadIgnoreConflicts": true,
            "FailOnTransactionConsistencyBreached": false,
            "FailOnNoTablesCaptured": true
          },
          "ChangeProcessingTuning": {
            "BatchApplyPreserveTransaction": true,
            "BatchApplyTimeoutMin": 1,
            "BatchApplyTimeoutMax": 30,
            "BatchApplyMemoryLimit": 500,
            "BatchSplitSize": 0,
            "MinTransactionSize": 1000,
            "CommitTimeout": 1,
            "MemoryLimitTotal": 1024,
            "MemoryKeepTime": 60,
            "StatementCacheSize": 50
          },
          "ValidationSettings": {
            "EnableValidation": ${EnableValidation},
            "ValidationMode": "${ValidationMode}",
            "ThreadCount": 5,
            "PartitionSize": 10000,
            "FailureMaxCount": 10000,
            "RecordFailureDelayInMinutes": 5,
            "RecordSuspendDelayInMinutes": 30,
            "MaxKeyColumnSize": 8096,
            "TableFailureMaxCount": 1000,
            "ValidationOnly": false,
            "HandleCollationDiff": false,
            "RecordFailureDelayLimitInMinutes": 0,
            "SkipLobColumns": false,
            "ValidationPartialLobSize": 0,
            "ValidationQueryCdcDelaySeconds": 0
          },
          "PostProcessingRules": null,
          "CharacterSetSettings": null,
          "LoopbackPreventionSettings": null,
          "BeforeImageSettings": null
        }
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-migration-task'
        - Key: Project
          Value: DatabaseMigration
        - Key: Environment
          Value: Production

  # DMS Event Subscription
  DMSEventSubscription:
    Type: AWS::DMS::EventSubscription
    Condition: CreateEventSubscription
    Properties:
      SubscriptionName: !Sub '${AWS::StackName}-dms-events'
      SnsTopicArn: !Ref DMSNotificationTopic
      SourceType: replication-task
      EventCategories:
        - failure
        - creation
        - deletion
        - state change
      SourceIds:
        - !Ref DMSReplicationTask
      Enabled: true
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-dms-events'
        - Key: Project
          Value: DatabaseMigration

  # CloudWatch Alarm for DMS Task Failure
  DMSTaskFailureAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${AWS::StackName}-DMS-Task-Failure'
      AlarmDescription: 'Alert when DMS task fails'
      MetricName: ReplicationTaskStatus
      Namespace: AWS/DMS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref DMSNotificationTopic
      Dimensions:
        - Name: ReplicationTaskIdentifier
          Value: !Ref DMSReplicationTask
      TreatMissingData: notBreaching

  # CloudWatch Alarm for High CDC Latency
  DMSHighLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${AWS::StackName}-DMS-High-Latency'
      AlarmDescription: 'Alert when DMS replication latency is high'
      MetricName: CDCLatencySource
      Namespace: AWS/DMS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: !Ref CDCLatencyThreshold
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref DMSNotificationTopic
      Dimensions:
        - Name: ReplicationTaskIdentifier
          Value: !Ref DMSReplicationTask
      TreatMissingData: notBreaching

  # CloudWatch Alarm for DMS Instance CPU Utilization
  DMSCPUUtilizationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${AWS::StackName}-DMS-High-CPU'
      AlarmDescription: 'Alert when DMS replication instance CPU is high'
      MetricName: CPUUtilization
      Namespace: AWS/DMS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref DMSNotificationTopic
      Dimensions:
        - Name: ReplicationInstanceIdentifier
          Value: !Ref DMSReplicationInstance
      TreatMissingData: notBreaching

  # CloudWatch Alarm for DMS Instance Memory Utilization
  DMSMemoryUtilizationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${AWS::StackName}-DMS-High-Memory'
      AlarmDescription: 'Alert when DMS replication instance memory is high'
      MetricName: FreeableMemory
      Namespace: AWS/DMS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 209715200  # 200 MB in bytes
      ComparisonOperator: LessThanThreshold
      AlarmActions:
        - !Ref DMSNotificationTopic
      Dimensions:
        - Name: ReplicationInstanceIdentifier
          Value: !Ref DMSReplicationInstance
      TreatMissingData: notBreaching

  # CloudWatch Log Group for DMS
  DMSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/dms/${AWS::StackName}'
      RetentionInDays: 30
      KmsKeyId: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/logs'

Outputs:
  # DMS Resource Outputs
  DMSReplicationInstanceArn:
    Description: 'ARN of the DMS replication instance'
    Value: !Ref DMSReplicationInstance
    Export:
      Name: !Sub '${AWS::StackName}-ReplicationInstance-Arn'

  DMSReplicationInstanceId:
    Description: 'ID of the DMS replication instance'
    Value: !Ref DMSReplicationInstance
    Export:
      Name: !Sub '${AWS::StackName}-ReplicationInstance-Id'

  DMSSourceEndpointArn:
    Description: 'ARN of the source database endpoint'
    Value: !Ref DMSSourceEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-SourceEndpoint-Arn'

  DMSTargetEndpointArn:
    Description: 'ARN of the target database endpoint'
    Value: !Ref DMSTargetEndpoint
    Export:
      Name: !Sub '${AWS::StackName}-TargetEndpoint-Arn'

  DMSReplicationTaskArn:
    Description: 'ARN of the DMS replication task'
    Value: !Ref DMSReplicationTask
    Export:
      Name: !Sub '${AWS::StackName}-ReplicationTask-Arn'

  DMSReplicationTaskId:
    Description: 'ID of the DMS replication task'
    Value: !Ref DMSReplicationTask
    Export:
      Name: !Sub '${AWS::StackName}-ReplicationTask-Id'

  # Monitoring Outputs
  SNSTopicArn:
    Description: 'ARN of the SNS topic for DMS notifications'
    Value: !Ref DMSNotificationTopic
    Export:
      Name: !Sub '${AWS::StackName}-SNSTopic-Arn'

  DMSEventSubscriptionName:
    Description: 'Name of the DMS event subscription'
    Value: !If [CreateEventSubscription, !Ref DMSEventSubscription, 'Event subscription not created']
    Export:
      Name: !Sub '${AWS::StackName}-EventSubscription-Name'

  # CloudWatch Alarm Outputs
  TaskFailureAlarmName:
    Description: 'Name of the CloudWatch alarm for task failures'
    Value: !Ref DMSTaskFailureAlarm
    Export:
      Name: !Sub '${AWS::StackName}-TaskFailureAlarm-Name'

  HighLatencyAlarmName:
    Description: 'Name of the CloudWatch alarm for high latency'
    Value: !Ref DMSHighLatencyAlarm
    Export:
      Name: !Sub '${AWS::StackName}-HighLatencyAlarm-Name'

  CPUUtilizationAlarmName:
    Description: 'Name of the CloudWatch alarm for high CPU utilization'
    Value: !Ref DMSCPUUtilizationAlarm
    Export:
      Name: !Sub '${AWS::StackName}-CPUAlarm-Name'

  MemoryUtilizationAlarmName:
    Description: 'Name of the CloudWatch alarm for high memory utilization'
    Value: !Ref DMSMemoryUtilizationAlarm
    Export:
      Name: !Sub '${AWS::StackName}-MemoryAlarm-Name'

  # Network Configuration Outputs
  DMSSubnetGroupId:
    Description: 'ID of the DMS subnet group'
    Value: !Ref DMSSubnetGroup
    Export:
      Name: !Sub '${AWS::StackName}-SubnetGroup-Id'

  # Log Group Output
  DMSLogGroupName:
    Description: 'Name of the CloudWatch log group for DMS'
    Value: !Ref DMSLogGroup
    Export:
      Name: !Sub '${AWS::StackName}-LogGroup-Name'

  # Configuration Summary
  MigrationConfiguration:
    Description: 'Summary of migration configuration'
    Value: !Sub |
      Migration Type: ${MigrationType}
      Source Engine: ${SourceDatabaseEngine}
      Target Engine: ${TargetDatabaseEngine}
      Validation Enabled: ${EnableValidation}
      Multi-AZ: ${MultiAZ}
      Instance Class: ${ReplicationInstanceClass}

  # Next Steps
  NextSteps:
    Description: 'Next steps for managing the DMS migration'
    Value: |
      1. Test database endpoint connections using AWS CLI or Console
      2. Start the replication task when ready to begin migration
      3. Monitor task progress through CloudWatch metrics and logs
      4. Verify data validation results
      5. Switch application traffic to target database when migration is complete
      6. Clean up resources after successful migration