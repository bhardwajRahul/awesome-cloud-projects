{
  "_comment": "CDK configuration for Computer Vision Solutions with Amazon Rekognition",
  "_description": "This configuration file defines CDK application settings, feature flags, and context values for the computer vision solution deployment.",
  
  "app": "python app.py",
  "watch": {
    "include": [
      "**"
    ],
    "exclude": [
      "README.md",
      "cdk*.json",
      "requirements*.txt",
      "source.bat",
      "**/__pycache__",
      "**/*.pyc",
      ".venv/**",
      ".git/**",
      ".pytest_cache/**",
      "**/*.egg-info/**",
      "dist/**",
      "build/**"
    ]
  },
  "context": {
    "_comment_context": "Context values provide configuration and feature flags for the CDK application",
    
    "_deployment_configuration": "Default deployment settings",
    "unique_suffix": "demo",
    "environment": "development",
    "region": "us-east-1",
    "account": null,
    "owner": "CDK",
    "cost_center": "Engineering",
    
    "_rekognition_configuration": "Amazon Rekognition specific settings",
    "rekognition": {
      "face_collection_retention_days": 365,
      "confidence_thresholds": {
        "face_detection": 80,
        "object_detection": 75,
        "text_detection": 80,
        "moderation": 60
      },
      "max_labels": 20,
      "max_faces": 5
    },
    
    "_storage_configuration": "S3 bucket and lifecycle settings",
    "storage": {
      "image_retention_days": 90,
      "results_transition_to_ia_days": 30,
      "results_transition_to_glacier_days": 90,
      "enable_versioning": true
    },
    
    "_compute_configuration": "Lambda function settings",
    "compute": {
      "lambda_timeout_minutes": 5,
      "lambda_memory_mb": 512,
      "log_retention_days": 30
    },
    
    "_api_configuration": "API Gateway settings",
    "api": {
      "throttling_rate_limit": 100,
      "throttling_burst_limit": 200,
      "enable_logging": true,
      "enable_tracing": true,
      "cors_enabled": true
    },
    
    "_feature_flags": "CDK feature flags for enabling/disabling specific features",
    "@aws-cdk/aws-lambda:recognizeLayerVersion": true,
    "@aws-cdk/aws-lambda:recognizeVersionProps": true,
    "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": true,
    "@aws-cdk/aws-rds:lowercaseDbIdentifier": true,
    "@aws-cdk/aws-efs:defaultEncryptionAtRest": true,
    "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
    "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
    "@aws-cdk/aws-apigateway:disableCloudWatchRole": false,
    "@aws-cdk/core:enablePartitionLiterals": true,
    "@aws-cdk/core:enableStackNameDuplicates": true,
    "@aws-cdk/core:target-partitions": ["aws", "aws-cn"],
    "@aws-cdk/core:stackRelativeExports": true,
    "@aws-cdk/core:checkSecretUsage": true,
    "@aws-cdk/core:validationReportMethod": true,
    "@aws-cdk/aws-codeguruprofiler:pythonProfilingVersionUpdateV2": true,
    "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": true,
    "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": true,
    "@aws-cdk/aws-iam:minimizePolicies": true,
    "@aws-cdk/core:validateSnapshotRemovalPolicy": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": true,
    "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
    "@aws-cdk/aws-route53-patters:useCertificate": true,
    "@aws-cdk/customresources:installLatestAwsSdkDefault": false,
    "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": true,
    "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": true,
    "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": true,
    "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": true,
    "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": true,
    "@aws-cdk/aws-redshift:columnId": true,
    "@aws-cdk/aws-stepfunctions-tasks:enableLoggingForLambdaInvoke": true,
    "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": true,
    "@aws-cdk/aws-apigateway:requestValidatorUniqueId": true,
    "@aws-cdk/aws-kms:aliasNameRef": true,
    "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": true,
    "@aws-cdk/core:includePrefixInUniqueNameGeneration": true,
    "@aws-cdk/aws-opensearchservice:enableLogging": true,
    "@aws-cdk/aws-neptune:defaultAssociatedRoles": true,
    "@aws-cdk/aws-elasticloadbalancingv2:enableEndpointSlbDeletionProtection": true,
    "@aws-cdk/aws-events:eventsTargetQueueSameAccount": true,
    "@aws-cdk/aws-iam:standardizedServicePrincipals": true,
    "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": true,
    "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": true,
    "@aws-cdk/aws-s3:keepNotificationInImportedBucket": false,
    "@aws-cdk/aws-ecs:reduceRunTaskPermissions": true,
    "@aws-cdk/aws-events:compareEventsTargetAwsApi": true,
    "@aws-cdk/aws-ecs:enableExecuteCommandLogging": true,
    "@aws-cdk/aws-autoscaling:enableDefaultInstanceWarmup": true,
    
    "_experimental_features": "Experimental features and alpha modules",
    "@aws-cdk/aws-lambda-python-alpha:usingBundling": true,
    "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": true,
    
    "_security_settings": "Security-related configuration",
    "security": {
      "enforce_ssl": true,
      "block_public_access": true,
      "enable_encryption": true,
      "enable_access_logging": true,
      "min_tls_version": "1.2"
    },
    
    "_monitoring_settings": "Monitoring and observability configuration",
    "monitoring": {
      "enable_detailed_monitoring": true,
      "enable_xray_tracing": true,
      "create_alarms": true,
      "log_level": "INFO"
    },
    
    "_tags": "Default tags applied to all resources",
    "tags": {
      "Project": "ComputerVisionSolutions",
      "Application": "RekognitionAnalysis",
      "ManagedBy": "CDK",
      "Purpose": "ComputerVisionPipeline"
    }
  },
  
  "_build_configuration": "Build and deployment settings",
  "build": {
    "commands": [
      "echo 'Build phase - installing dependencies'",
      "pip install -r requirements.txt",
      "echo 'Running security checks'",
      "python -m safety check",
      "echo 'Running linting'",
      "python -m flake8 --max-line-length=88 --ignore=E203,W503 .",
      "echo 'Running type checking'",
      "python -m mypy app.py --ignore-missing-imports",
      "echo 'Build completed successfully'"
    ]
  },
  
  "_validation": "Validation and testing configuration",
  "validation": {
    "enable_policy_validation": true,
    "enable_resource_validation": true,
    "enable_security_validation": true
  },
  
  "_output_configuration": "Output and artifact settings",
  "output": {
    "version_reporting": true,
    "path_metadata": true,
    "tree_metadata": true
  },
  
  "_compatibility": "Compatibility and version settings",
  "version_reporting": true,
  "path_metadata": true,
  "asset_metadata": true,
  "analytics": false,
  "notices": true,
  
  "_deployment_targets": "Available deployment environments",
  "environments": {
    "development": {
      "account": null,
      "region": "us-east-1",
      "unique_suffix": "dev",
      "environment": "development"
    },
    "staging": {
      "account": null,
      "region": "us-east-1",
      "unique_suffix": "staging",
      "environment": "staging"
    },
    "production": {
      "account": null,
      "region": "us-east-1",
      "unique_suffix": "prod",
      "environment": "production"
    }
  }
}