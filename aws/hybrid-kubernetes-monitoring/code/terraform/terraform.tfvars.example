# ==============================================================================
# EXAMPLE TERRAFORM VARIABLES FILE
# ==============================================================================
# Copy this file to terraform.tfvars and customize the values for your environment
# DO NOT commit terraform.tfvars to version control as it may contain sensitive information

# ==============================================================================
# CORE CONFIGURATION
# ==============================================================================

# AWS region for deployment
aws_region = "us-west-2"

# Environment name (dev, staging, prod)
environment = "dev"

# Project owner for cost allocation and management
owner = "platform-team"

# Project name for resource naming
project_name = "hybrid-monitoring"

# Custom cluster name (optional - will be generated if not provided)
# cluster_name = "my-hybrid-cluster"

# ==============================================================================
# EKS CLUSTER CONFIGURATION
# ==============================================================================

# Kubernetes version for the EKS cluster
kubernetes_version = "1.31"

# Cluster API server endpoint access configuration
cluster_endpoint_private_access = true
cluster_endpoint_public_access  = true

# CIDR blocks that can access the public API server endpoint
# For production, restrict this to your organization's IP ranges
cluster_endpoint_public_access_cidrs = ["0.0.0.0/0"]

# Control plane logging configuration
cluster_enabled_log_types = ["api", "audit", "authenticator", "controllerManager", "scheduler"]

# Log retention period in days
cluster_log_retention_days = 14

# ==============================================================================
# HYBRID NODE CONFIGURATION
# ==============================================================================

# CIDR blocks for on-premises hybrid nodes
# Customize these to match your on-premises network configuration
remote_node_networks = ["10.100.0.0/16"]

# CIDR blocks for pods running on hybrid nodes
# Ensure these don't overlap with your VPC CIDR or node networks
remote_pod_networks = ["10.101.0.0/16"]

# ==============================================================================
# VPC AND NETWORKING CONFIGURATION
# ==============================================================================

# VPC CIDR block for the EKS cluster
vpc_cidr = "10.0.0.0/16"

# Availability zones to use (leave empty to use first 3 AZs in region)
availability_zones = []

# Public subnet CIDR blocks (for EKS control plane and load balancers)
public_subnet_cidrs = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]

# Private subnet CIDR blocks (for Fargate workloads)
private_subnet_cidrs = ["10.0.11.0/24", "10.0.12.0/24", "10.0.13.0/24"]

# Use single NAT gateway for cost optimization (set to false for high availability)
single_nat_gateway = true

# ==============================================================================
# FARGATE CONFIGURATION
# ==============================================================================

# Name of the Fargate profile
fargate_profile_name = "cloud-workloads"

# Namespace selectors for Fargate profile
fargate_namespace_selectors = [
  {
    namespace = "cloud-apps"
    labels    = {}
  },
  {
    namespace = "kube-system"
    labels = {
      "app.kubernetes.io/name" = "aws-load-balancer-controller"
    }
  }
]

# ==============================================================================
# CLOUDWATCH OBSERVABILITY CONFIGURATION
# ==============================================================================

# CloudWatch Observability addon version
cloudwatch_addon_version = "v2.1.0-eksbuild.1"

# Enable Container Insights for detailed monitoring
container_insights_enabled = true

# Enable Application Signals for APM (optional)
application_signals_enabled = false

# Enable CloudWatch dashboards
cloudwatch_dashboard_enabled = true

# Enable CloudWatch alarms
cloudwatch_alarms_enabled = true

# Custom metrics namespace
custom_metrics_namespace = "EKS/HybridMonitoring"

# ==============================================================================
# MONITORING AND ALERTING CONFIGURATION
# ==============================================================================

# CPU utilization threshold for alarms (percentage)
high_cpu_threshold = 80

# Memory utilization threshold for alarms (percentage)
high_memory_threshold = 80

# Number of evaluation periods for alarms
alarm_evaluation_periods = 2

# SNS topic ARN for alarm notifications (optional)
# sns_topic_arn = "arn:aws:sns:us-west-2:123456789012:eks-alerts"

# ==============================================================================
# SECURITY CONFIGURATION
# ==============================================================================

# Enable cluster encryption for secrets
cluster_encryption_enabled = true

# KMS key deletion window in days
kms_key_deletion_window = 30

# Additional security group IDs to attach to cluster (optional)
additional_security_group_ids = []

# ==============================================================================
# ADDON CONFIGURATION
# ==============================================================================

# Install AWS Load Balancer Controller addon
install_aws_load_balancer_controller = true

# Install Amazon EBS CSI driver addon
install_ebs_csi_driver = true

# Install Amazon EFS CSI driver addon (optional)
install_efs_csi_driver = false

# ==============================================================================
# SAMPLE APPLICATION CONFIGURATION
# ==============================================================================

# Deploy sample applications for testing monitoring
deploy_sample_applications = true

# Number of replicas for sample applications
sample_app_replicas = 2

# ==============================================================================
# COST OPTIMIZATION CONFIGURATION
# ==============================================================================

# Enable cost optimization features
enable_cost_optimization = true

# Enable Spot instances for managed node groups (if added later)
enable_spot_instances = false

# ==============================================================================
# ADDITIONAL TAGS
# ==============================================================================

# Additional tags to apply to all resources
additional_tags = {
  # CostCenter    = "engineering"
  # Department    = "platform"
  # Application   = "monitoring"
  # BusinessUnit  = "infrastructure"
}