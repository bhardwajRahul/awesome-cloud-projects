# SimSpace Weaver Simulation Schema for Smart City Digital Twin
# This schema defines the spatial simulation configuration for urban modeling

name: "${project_name}-digital-twin-simulation"
description: "Smart city digital twin simulation integrating real-time IoT sensor data"

# Spatial domain configuration
spatial_domains:
  # Main city grid domain
  - name: city_grid
    description: "Primary urban area with traffic, weather, and infrastructure sensors"
    partitioning_strategy: grid_partitioning
    dimensions:
      x: 5000  # 5km x 5km area
      y: 5000
      z: 200   # Include vertical space for buildings/weather
    coordinate_system: "WGS84"
    units: "meters"
    
  # Downtown business district
  - name: downtown_district
    description: "High-density downtown area with detailed traffic modeling"
    partitioning_strategy: grid_partitioning
    dimensions:
      x: 1000
      y: 1000
      z: 500   # Tall buildings
    coordinate_system: "WGS84"
    units: "meters"
    
  # Residential area
  - name: residential_zone
    description: "Residential neighborhoods with lower traffic density"
    partitioning_strategy: grid_partitioning
    dimensions:
      x: 2000
      y: 2000
      z: 100
    coordinate_system: "WGS84"
    units: "meters"

# Partitioning strategies for distributed simulation
partitioning_strategies:
  grid_partitioning:
    type: "grid"
    grid_size: 8  # 8x8 grid of partitions
    overlap: 50   # 50m overlap between partitions
    load_balancing: "dynamic"
    migration_threshold: 0.8
    
  # Alternative partitioning for high-density areas
  adaptive_partitioning:
    type: "adaptive"
    initial_partitions: 16
    max_partitions: 64
    min_partition_size: 100
    max_partition_size: 1000
    rebalance_interval: 300  # seconds

# Simulation applications
apps:
  # Traffic flow simulation
  - name: traffic_simulation
    type: spatial
    executable: "traffic_sim.py"
    instances: 8
    resources:
      memory: "2GB"
      cpu: "1000m"
    environment:
      SIMULATION_SPEED: "1.0"
      UPDATE_INTERVAL: "30"
      MAX_VEHICLES: "10000"
    input_topics:
      - "sensor/traffic/+/data"
    output_topics:
      - "simulation/traffic/predictions"
      - "simulation/traffic/optimization"
    
  # Weather impact modeling
  - name: weather_simulation
    type: spatial
    executable: "weather_sim.py"
    instances: 4
    resources:
      memory: "1GB"
      cpu: "500m"
    environment:
      WEATHER_MODEL: "advanced"
      FORECAST_HORIZON: "3600"
    input_topics:
      - "sensor/weather/+/data"
    output_topics:
      - "simulation/weather/forecast"
      - "simulation/weather/impact"
    
  # Utility infrastructure monitoring
  - name: utility_monitoring
    type: spatial
    executable: "utility_sim.py"
    instances: 2
    resources:
      memory: "1GB"
      cpu: "500m"
    environment:
      UTILITY_TYPES: "water,electric,gas"
      MONITORING_INTERVAL: "60"
    input_topics:
      - "sensor/utility/+/data"
    output_topics:
      - "simulation/utility/status"
      - "simulation/utility/alerts"
    
  # Emergency response optimization
  - name: emergency_response
    type: spatial
    executable: "emergency_sim.py"
    instances: 2
    resources:
      memory: "1GB"
      cpu: "500m"
    environment:
      RESPONSE_OPTIMIZATION: "true"
      ROUTE_CALCULATION: "dynamic"
    input_topics:
      - "sensor/emergency/+/data"
      - "simulation/traffic/predictions"
    output_topics:
      - "simulation/emergency/routes"
      - "simulation/emergency/eta"
    
  # Pedestrian flow modeling
  - name: pedestrian_simulation
    type: spatial
    executable: "pedestrian_sim.py"
    instances: 4
    resources:
      memory: "1GB"
      cpu: "500m"
    environment:
      MAX_PEDESTRIANS: "50000"
      SOCIAL_DISTANCING: "false"
    input_topics:
      - "sensor/pedestrian/+/data"
    output_topics:
      - "simulation/pedestrian/flow"
      - "simulation/pedestrian/density"

# Simulation configuration
simulation_config:
  # Time settings
  time:
    start_time: "2024-01-01T00:00:00Z"
    simulation_speed: 1.0  # Real-time
    max_duration: "86400"  # 24 hours in seconds
    time_step: 1.0         # 1 second steps
    
  # Physics and behavior settings
  physics:
    gravity: 9.81
    air_density: 1.225
    temperature_base: 15.0  # Celsius
    
  # Entity limits
  limits:
    max_vehicles: 100000
    max_pedestrians: 500000
    max_sensors: 10000
    max_events: 1000000
    
  # Data retention
  data_retention:
    simulation_logs: "7d"
    entity_states: "24h"
    aggregated_metrics: "30d"
    
  # Performance settings
  performance:
    target_fps: 30
    max_cpu_usage: 80
    memory_limit: "16GB"
    network_bandwidth: "1Gbps"

# IoT sensor integration
iot_integration:
  # Sensor types and their simulation mappings
  sensor_mappings:
    traffic:
      - sensor_type: "vehicle_count"
        simulation_entity: "traffic_flow"
        update_frequency: 30
        data_transformation: "linear"
      - sensor_type: "average_speed"
        simulation_entity: "traffic_speed"
        update_frequency: 30
        data_transformation: "weighted_average"
        
    weather:
      - sensor_type: "temperature"
        simulation_entity: "ambient_temperature"
        update_frequency: 300
        data_transformation: "interpolation"
      - sensor_type: "humidity"
        simulation_entity: "air_humidity"
        update_frequency: 300
        data_transformation: "interpolation"
      - sensor_type: "wind_speed"
        simulation_entity: "wind_field"
        update_frequency: 300
        data_transformation: "vector_field"
        
    parking:
      - sensor_type: "occupied_spaces"
        simulation_entity: "parking_occupancy"
        update_frequency: 60
        data_transformation: "discrete"
        
    air_quality:
      - sensor_type: "pm2_5"
        simulation_entity: "air_pollutants"
        update_frequency: 600
        data_transformation: "diffusion_model"
  
  # Data validation rules
  validation_rules:
    traffic:
      vehicle_count: { min: 0, max: 1000, required: true }
      average_speed: { min: 0, max: 120, required: true }
    weather:
      temperature: { min: -40, max: 50, required: true }
      humidity: { min: 0, max: 100, required: true }
    parking:
      occupied_spaces: { min: 0, max: 500, required: true }

# Output configuration
outputs:
  # Real-time data streams
  streams:
    - name: "traffic_optimization"
      format: "json"
      frequency: "30s"
      destination: "kinesis://traffic-optimization-stream"
      
    - name: "city_performance"
      format: "json"
      frequency: "5m"
      destination: "s3://simulation-results/performance/"
      
    - name: "predictive_analytics"
      format: "json"
      frequency: "15m"
      destination: "lambda://analytics-processor"
  
  # Batch outputs
  batch_outputs:
    - name: "daily_summary"
      format: "parquet"
      frequency: "daily"
      destination: "s3://simulation-results/daily/"
      
    - name: "performance_metrics"
      format: "csv"
      frequency: "hourly"
      destination: "s3://simulation-results/metrics/"

# Monitoring and alerting
monitoring:
  # Performance metrics
  metrics:
    - name: "simulation_fps"
      threshold: { min: 25, max: 35 }
      alert_threshold: { min: 20, max: 40 }
      
    - name: "memory_usage"
      threshold: { max: 80 }
      alert_threshold: { max: 90 }
      
    - name: "entity_count"
      threshold: { max: 500000 }
      alert_threshold: { max: 600000 }
  
  # Health checks
  health_checks:
    - name: "sensor_connectivity"
      interval: "60s"
      timeout: "10s"
      
    - name: "simulation_progress"
      interval: "300s"
      timeout: "30s"
  
  # Alerting
  alerts:
    sns_topic: "arn:aws:sns:us-east-1:123456789012:simulation-alerts"
    email_notifications: true
    slack_webhook: ""  # Optional

# Resource management
resources:
  # Compute resources
  compute:
    instance_type: "c5.2xlarge"
    min_instances: 2
    max_instances: 20
    auto_scaling: true
    spot_instances: false
    
  # Storage resources
  storage:
    simulation_data: "1TB"
    logs: "100GB"
    checkpoints: "50GB"
    
  # Network resources
  network:
    vpc_id: ""  # Will be filled by Terraform
    subnet_ids: []  # Will be filled by Terraform
    security_groups: []  # Will be filled by Terraform

# Disaster recovery and backup
backup:
  enabled: true
  frequency: "daily"
  retention: "30d"
  cross_region: false
  encryption: true

# Security settings
security:
  encryption_at_rest: true
  encryption_in_transit: true
  access_control: "iam"
  audit_logging: true
  vulnerability_scanning: true

# Tags for resource management
tags:
  Project: "Smart City Digital Twin"
  Environment: "production"
  Owner: "smart-city-team"
  CostCenter: "urban-planning"
  Backup: "required"

# Schema version and compatibility
schema_version: "1.0"
compatibility:
  min_simspace_version: "1.0.0"
  max_simspace_version: "2.0.0"