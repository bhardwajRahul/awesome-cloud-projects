{
  "app": "python app.py",
  "watch": {
    "include": [
      "**"
    ],
    "exclude": [
      "README.md",
      "cdk*.json",
      "requirements*.txt",
      "source.bat",
      "**/__pycache__",
      "**/*.pyc",
      "tests/**",
      ".venv/**",
      ".git/**",
      ".pytest_cache/**",
      "**/.DS_Store"
    ]
  },
  "context": {
    "@aws-cdk/aws-lambda:recognizeLayerVersion": true,
    "@aws-cdk/core:checkSecretUsage": true,
    "@aws-cdk/core:target-partitions": [
      "aws",
      "aws-cn"
    ],
    "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": true,
    "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": true,
    "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": true,
    "@aws-cdk/aws-iam:minimizePolicies": true,
    "@aws-cdk/core:validateSnapshotRemovalPolicy": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": true,
    "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
    "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
    "@aws-cdk/aws-apigateway:disableCloudWatchRole": true,
    "@aws-cdk/core:enablePartitionLiterals": true,
    "@aws-cdk/aws-events:eventsTargetQueueSameAccount": true,
    "@aws-cdk/aws-iam:standardizedServicePrincipals": true,
    "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": true,
    "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": true,
    "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
    "@aws-cdk/aws-route53-patters:useCertificate": true,
    "@aws-cdk/customresources:installLatestAwsSdkDefault": false,
    "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": true,
    "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": true,
    "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": true,
    "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": true,
    "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": true,
    "@aws-cdk/aws-redshift:columnId": true,
    "@aws-cdk/aws-stepfunctions-tasks:enableLogging": true,
    "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": true,
    "@aws-cdk/aws-apigateway:requestValidatorUniqueId": true,
    "@aws-cdk/aws-kms:aliasNameRef": true,
    "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": true,
    "@aws-cdk/core:includePrefixInUniqueNameGeneration": true,
    "@aws-cdk/aws-efs:denyAnonymousAccess": true,
    "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": true,
    "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": true,
    "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": true,
    "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": true,
    "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": true,
    "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": true,
    "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": true,
    "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": true,
    "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": true,
    "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": true,
    "@aws-cdk/aws-eks:nodegroupNameAttribute": true,
    "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": true,
    "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": true,
    "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueFalse": true,
    "aws-cdk:enableDiffNoFail": true
  },
  "build": "python -m py_compile app.py",
  "require-approval": "never",
  "toolkits": [
    {
      "name": "default",
      "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/default/version"
    }
  ],
  "feature-flags": {
    "@aws-cdk/core:enableStackNameDuplicates": true,
    "aws-cdk:enableDiffNoFail": true,
    "@aws-cdk/core:stackRelativeExports": true
  },
  "parameters": {
    "project_name": "smartcity-dtwin",
    "environment": "dev",
    "stack_name": "smart-city-digital-twins"
  },
  "tags": {
    "Project": "SmartCityDigitalTwins",
    "Application": "UrbanPlanning",
    "ManagedBy": "CDK",
    "Environment": "Development",
    "CostCenter": "UrbanPlanning"
  },
  "profile": "default",
  "lookups": [
    "ssm:account={ACCOUNT}:parameterName={PARAMETER_NAME}:region={REGION}",
    "secretsmanager:secret-arn:account={ACCOUNT}:region={REGION}:secret-name={SECRET_NAME}",
    "vpc-provider:account={ACCOUNT}:filter={FILTER}:region={REGION}:returnAsymmetricSubnets={RETURN_ASYMMETRIC_SUBNETS}",
    "ami:account={ACCOUNT}:filters={FILTERS}:region={REGION}",
    "availability-zones:account={ACCOUNT}:region={REGION}",
    "hosted-zone:account={ACCOUNT}:domainName={DOMAIN_NAME}:region={REGION}",
    "load-balancer:account={ACCOUNT}:loadBalancerArn={LOAD_BALANCER_ARN}:loadBalancerTags={LOAD_BALANCER_TAGS}:loadBalancerType={LOAD_BALANCER_TYPE}:region={REGION}",
    "load-balancer-listener:account={ACCOUNT}:listenerArn={LISTENER_ARN}:listenerPort={LISTENER_PORT}:listenerProtocol={LISTENER_PROTOCOL}:loadBalancerArn={LOAD_BALANCER_ARN}:loadBalancerTags={LOAD_BALANCER_TAGS}:loadBalancerType={LOAD_BALANCER_TYPE}:region={REGION}",
    "security-group:account={ACCOUNT}:region={REGION}:securityGroupId={SECURITY_GROUP_ID}",
    "key-provider:account={ACCOUNT}:aliasName={ALIAS_NAME}:region={REGION}"
  ],
  "version-reporting": true,
  "path-metadata": true,
  "asset-metadata": true,
  "notices": true,
  "bundling": {
    "stacks": []
  },
  "debug": false
}