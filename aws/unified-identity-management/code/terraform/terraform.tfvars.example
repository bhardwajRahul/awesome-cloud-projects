# Example Terraform variables file for Hybrid Identity Management
# Copy this file to terraform.tfvars and customize the values

#================================================================================
# BASIC CONFIGURATION
#================================================================================

# AWS region where resources will be created
aws_region = "us-east-1"

# Environment name (dev, staging, prod)
environment = "dev"

# Project name used for resource naming and tagging
project_name = "hybrid-identity"

#================================================================================
# NETWORKING CONFIGURATION
#================================================================================

# CIDR block for the VPC
vpc_cidr = "10.0.0.0/16"

# CIDR blocks for public subnets (used for NAT gateways)
public_subnet_cidrs = ["10.0.1.0/24", "10.0.2.0/24"]

# CIDR blocks for private subnets (used for directory services, RDS, WorkSpaces)
private_subnet_cidrs = ["10.0.10.0/24", "10.0.20.0/24"]

#================================================================================
# DIRECTORY SERVICE CONFIGURATION
#================================================================================

# Fully qualified domain name for the AWS Managed Microsoft AD
directory_name = "corp.local"

# Password for the directory administrator account
# Leave empty to auto-generate a secure password
directory_password = "MySecurePassword123!"

# Edition of AWS Managed Microsoft AD (Standard or Enterprise)
# Standard: $0.20/hour per DC, Enterprise: $1.00/hour per DC
directory_edition = "Standard"

# Description for the directory
directory_description = "Hybrid Identity Management Directory for Development"

#================================================================================
# WORKSPACES CONFIGURATION
#================================================================================

# Enable Amazon WorkSpaces integration
enable_workspaces = true

# WorkSpaces bundle ID for virtual desktops
# wsb-bh8rsxt14 = Standard Windows 10 Bundle
# wsb-3t36q0xfc = Standard Windows 11 Bundle
workspaces_bundle_id = "wsb-bh8rsxt14"

# Enable Amazon WorkDocs integration with WorkSpaces
enable_workdocs = true

# Allow users to manage their own WorkSpaces (restart, rebuild, etc.)
enable_self_service_permissions = true

#================================================================================
# RDS CONFIGURATION
#================================================================================

# Enable RDS SQL Server with Directory Service integration
enable_rds = true

# RDS instance class
# Recommended: db.t3.medium for development, db.m5.large+ for production
rds_instance_class = "db.t3.medium"

# Allocated storage for RDS instance (GB)
rds_allocated_storage = 200

# Storage type (standard, gp2, gp3, io1, io2)
rds_storage_type = "gp2"

# SQL Server engine version
# Check AWS documentation for latest supported versions
rds_engine_version = "15.00.4236.7.v1"

# Backup retention period (days)
rds_backup_retention_period = 7

# Preferred backup window (UTC)
rds_backup_window = "03:00-04:00"

# Preferred maintenance window (UTC)
rds_maintenance_window = "sun:04:00-sun:05:00"

#================================================================================
# SECURITY CONFIGURATION
#================================================================================

# Enable enhanced monitoring for RDS
enable_enhanced_monitoring = true

# Monitoring interval for RDS enhanced monitoring (0, 1, 5, 10, 15, 30, 60 seconds)
monitoring_interval = 60

# Enable deletion protection for RDS instance
enable_deletion_protection = false

# Enable storage encryption for RDS instance
enable_storage_encryption = true

# Enable CloudTrail for directory service auditing
enable_cloudtrail = true

#================================================================================
# TRUST RELATIONSHIP CONFIGURATION (OPTIONAL)
#================================================================================

# Enable trust relationship with on-premises Active Directory
# Requires VPN or Direct Connect connectivity
enable_on_premises_trust = false

# FQDN of on-premises Active Directory domain (required if trust enabled)
# on_premises_domain_name = "onprem.corp.local"

# List of DNS server IP addresses for on-premises domain (required if trust enabled)
# on_premises_dns_ips = ["10.1.1.10", "10.1.1.11"]

# Password for the trust relationship (leave empty to auto-generate)
# trust_password = "MyTrustPassword123!"

# Direction of trust relationship
# Options: "One-Way: Outgoing", "One-Way: Incoming", "Two-Way"
trust_direction = "Two-Way"

#================================================================================
# TEST USER CONFIGURATION
#================================================================================

# Create test users in the directory for validation
create_test_users = true

# List of test users to create (used for WorkSpaces testing)
test_users = [
  {
    username    = "testuser1"
    given_name  = "Test"
    surname     = "User1"
    email       = "testuser1@corp.local"
    description = "Test user for hybrid identity validation"
  },
  {
    username    = "workspacesuser"
    given_name  = "WorkSpaces"
    surname     = "User"
    email       = "workspacesuser@corp.local"
    description = "Test user for WorkSpaces validation"
  }
]

#================================================================================
# RESOURCE TAGS
#================================================================================

# Default tags applied to all resources
default_tags = {
  Project     = "hybrid-identity-management"
  Environment = "dev"
  ManagedBy   = "terraform"
  Purpose     = "hybrid-identity-testing"
  Owner       = "platform-team"
  CostCenter  = "IT-Infrastructure"
}