# =============================================================================
# MediaConnect Workflow Configuration Example
# Copy this file to terraform.tfvars and customize for your environment
# =============================================================================

# Environment and Project Settings
environment  = "dev"                    # Options: dev, staging, prod
project_name = "media-workflow"         # Alphanumeric and hyphens only

# =============================================================================
# NOTIFICATION SETTINGS (REQUIRED)
# =============================================================================

# Email address for receiving MediaConnect alerts
# You will receive a confirmation email that must be accepted
notification_email = "your-email@example.com"

# =============================================================================
# MEDIACONNECT NETWORK CONFIGURATION
# =============================================================================

# CIDR block for source IP whitelist - IMPORTANT SECURITY SETTING
# Default allows all IPs - restrict this to your encoder's IP range
# Examples:
#   Single IP: "203.0.113.5/32"
#   IP range:   "203.0.113.0/24"
#   Multiple:   Use multiple flows for different sources
source_whitelist_cidr = "0.0.0.0/0"

# Port for receiving the live stream (1024-65535)
ingest_port = 5000

# Destination IPs for stream outputs
# These should be your downstream systems that will receive the stream
primary_output_destination = "10.0.0.100"
backup_output_destination  = "10.0.0.101"

# Ports for stream outputs (1024-65535)
primary_output_port = 5001
backup_output_port  = 5002

# =============================================================================
# MONITORING THRESHOLDS
# =============================================================================

# Packet loss percentage that triggers HIGH severity alerts
# Typical values: 0.05-0.2% for broadcast quality
packet_loss_threshold = 0.1

# Jitter in milliseconds that triggers MEDIUM severity alerts  
# Typical values: 20-100ms depending on content type
jitter_threshold_ms = 50

# Packet loss threshold for triggering automated workflows
# Should be lower than packet_loss_threshold for early detection
workflow_trigger_threshold = 0.05

# =============================================================================
# LAMBDA FUNCTION CONFIGURATION
# =============================================================================

# Lambda function timeout in seconds (1-900)
lambda_timeout = 60

# Lambda function memory in MB (128-10240)
# Higher memory = faster execution but higher cost
lambda_memory_size = 256

# =============================================================================
# STEP FUNCTIONS CONFIGURATION
# =============================================================================

# Step Functions workflow type
# EXPRESS: Low latency, high throughput (recommended for real-time monitoring)
# STANDARD: More features, longer retention, higher cost per execution
step_functions_type = "EXPRESS"

# =============================================================================
# ADDITIONAL RESOURCE TAGS
# =============================================================================

# Add custom tags to all resources (optional)
additional_tags = {
  Owner       = "MediaOps"
  CostCenter  = "Broadcasting"
  Compliance  = "SOC2"
}

# =============================================================================
# CONFIGURATION EXAMPLES FOR DIFFERENT USE CASES
# =============================================================================

# Example 1: Production Broadcasting Environment
# environment = "prod"
# source_whitelist_cidr = "198.51.100.0/24"  # Your encoder subnet
# packet_loss_threshold = 0.05               # Strict threshold
# jitter_threshold_ms = 30                   # Low jitter tolerance
# lambda_memory_size = 512                   # Higher performance

# Example 2: Development/Testing Environment  
# environment = "dev"
# source_whitelist_cidr = "0.0.0.0/0"       # Allow any source for testing
# packet_loss_threshold = 0.2               # Relaxed threshold
# jitter_threshold_ms = 100                 # Higher tolerance
# lambda_memory_size = 128                  # Cost optimization

# Example 3: Live Event Broadcasting
# environment = "prod"
# project_name = "live-event-2024"
# packet_loss_threshold = 0.03              # Very strict
# jitter_threshold_ms = 25                  # Very low tolerance
# step_functions_type = "EXPRESS"           # Fast response
# notification_email = "noc@broadcaster.com"

# Example 4: Multi-Region Setup (deploy in multiple regions)
# For disaster recovery, deploy this configuration in multiple AWS regions
# Update output destinations to region-specific IPs