"""
Setup configuration for the Secure Content Delivery CDK Python application.

This package implements a secure content delivery solution using AWS CloudFront
and AWS WAF for comprehensive web application protection.

Recipe: content-delivery-cloudfront-waf
Generated by: AWS CDK Generator v1.3
"""

import setuptools
from typing import List


def get_requirements() -> List[str]:
    """Read requirements from requirements.txt file."""
    with open("requirements.txt", "r", encoding="utf-8") as requirements_file:
        requirements = []
        for line in requirements_file:
            line = line.strip()
            # Skip comments and empty lines
            if line and not line.startswith("#"):
                # Remove inline comments
                if "#" in line:
                    line = line.split("#")[0].strip()
                requirements.append(line)
        return requirements


def get_long_description() -> str:
    """Read long description from README.md if it exists."""
    try:
        with open("README.md", "r", encoding="utf-8") as readme_file:
            return readme_file.read()
    except FileNotFoundError:
        return __doc__


setuptools.setup(
    name="secure-content-delivery-cdk",
    version="1.0.0",
    author="AWS CDK Generator",
    author_email="aws-cdk-generator@example.com",
    description="CDK Python application for secure content delivery with CloudFront and WAF",
    long_description=get_long_description(),
    long_description_content_type="text/markdown",
    url="https://github.com/aws-samples/aws-cdk-examples",
    
    # Package configuration
    packages=setuptools.find_packages(),
    py_modules=["app"],
    
    # Entry points
    entry_points={
        "console_scripts": [
            "secure-content-delivery=app:main",
        ],
    },
    
    # Dependencies
    install_requires=get_requirements(),
    
    # Python version requirement
    python_requires=">=3.8",
    
    # Package classifiers
    classifiers=[
        "Development Status :: 5 - Production/Stable",
        "Intended Audience :: Developers",
        "Intended Audience :: System Administrators",
        "License :: OSI Approved :: Apache Software License",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Topic :: System :: Systems Administration",
        "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
        "Topic :: Security",
        "Typing :: Typed",
    ],
    
    # Keywords for package discovery
    keywords=[
        "aws",
        "cdk",
        "cloudfront",
        "waf",
        "security",
        "content-delivery",
        "infrastructure",
        "cloud",
        "devops",
        "automation"
    ],
    
    # Project URLs
    project_urls={
        "Documentation": "https://docs.aws.amazon.com/cdk/",
        "Source": "https://github.com/aws/aws-cdk",
        "Tracker": "https://github.com/aws/aws-cdk/issues",
        "AWS CDK": "https://aws.amazon.com/cdk/",
        "AWS CloudFront": "https://aws.amazon.com/cloudfront/",
        "AWS WAF": "https://aws.amazon.com/waf/",
    },
    
    # Additional metadata
    license="Apache-2.0",
    platforms=["any"],
    zip_safe=False,
    include_package_data=True,
    
    # Test configuration
    test_suite="tests",
    tests_require=[
        "pytest>=7.4.0",
        "pytest-cov>=4.1.0",
        "moto>=4.2.0",  # For mocking AWS services in tests
    ],
    
    # Optional dependencies
    extras_require={
        "dev": [
            "mypy>=1.8.0",
            "black>=23.0.0",
            "flake8>=6.0.0",
            "isort>=5.12.0",
            "pytest>=7.4.0",
            "pytest-cov>=4.1.0",
            "bandit>=1.7.5",
            "pre-commit>=3.5.0",
        ],
        "docs": [
            "sphinx>=7.1.0",
            "sphinx-rtd-theme>=1.3.0",
            "sphinx-autodoc-typehints>=1.24.0",
        ],
        "test": [
            "pytest>=7.4.0",
            "pytest-cov>=4.1.0",
            "pytest-mock>=3.12.0",
            "moto>=4.2.0",
            "boto3-stubs[essential]>=1.34.0",
        ],
    },
)