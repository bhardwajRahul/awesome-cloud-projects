[2025-07-16 08:41:53] [INFO] Running Claude restoration for serverless-api-patterns-lambda-authorizers-api-gateway from directory: /Users/mzazon/Dev/GitHub/recipes/aws/serverless-api-patterns-lambda-authorizers-api-gateway
file:///Users/mzazon/.nvm/versions/node/v24.3.0/lib/node_modules/@anthropic-ai/claude-code/cli.js:2605
`))!==-1){let D=A.slice(0,Q);A=A.slice(Q+1);let I=this.processLine(D);if(I)yield I}}if(A){let B=this.processLine(A);if(B)yield B}}processLine(A){try{let B=JSON.parse(A);if(B.type!=="user"&&B.type!=="control_request")P6A(`Error: Expected message type 'user' or 'control', got '${B.type}'`);if(B.type==="control_request"){if(!B.request)P6A("Error: Missing request on control_request");return B}if(B.message.role!=="user")P6A(`Error: Expected message role 'user', got '${B.message.role}'`);return B}catch(B){console.error(`Error parsing streaming input line: ${A}: ${B}`),process.exit(1)}}}function P6A(A){console.error(A),process.exit(1)}class _6A{returned;queue=[];readResolve;readReject;isDone=!1;hasError;started=!1;constructor(A){this.returned=A}[Symbol.asyncIterator](){if(this.started)throw new Error("Stream can only be iterated once");return this.started=!0,this}next(){if(this.queue.length>0)return Promise.resolve({done:!1,value:this.queue.shift()});if(this.isDone)return Promise.resolve({done:!0,value:void 0});if(this.hasError)return Promise.reject(this.hasError);return new Promise((A,B)=>{this.readResolve=A,this.readReject=B})}enqueue(A){if(this.readResolve){let B=this.readResolve;this.readResolve=void 0,this.readReject=void 0,B({done:!1,value:A})}else this.queue.push(A)}done(){if(this.isDone=!0,this.readResolve){let A=this.readResolve;this.readResolve=void 0,this.readReject=void 0,A({done:!0,value:void 0})}}error(A){if(this.hasError=A,this.readReject){let B=this.readReject;this.readResolve=void 0,this.readReject=void 0,B(A)}}return(){if(this.isDone=!0,this.returned)this.returned();return Promise.resolve({done:!0,value:void 0})}}var xA8=v.object({tool_name:v.string().describe("The name of the tool requesting permission"),input:v.record(v.unknown()).describe("The input for the tool"),tool_use_id:v.string().optional().describe("The unique tool use request ID")}),cb6=v.object({behavior:v.literal("allow"),updatedInput:v.record(v.unknown())}),pb6=v.object({behavior:v.literal("deny"),message:v.string()}),Bd2=v.union([cb6,pb6]);function Qd2(A,B){let Q={type:"permissionPromptTool",permissionPromptToolName:B,toolResult:A};switch(A.behavior){case"allow":return{...A,decisionReason:Q};case"deny":return{...A,decisionReason:Q,ruleSuggestions:null}}}import{randomUUID as Dd2}from"node:crypto";async function*Id2({commands:A,permissionContext:B,prompt:Q,cwd:D,tools:I,mcpClients:Z,verbose:G=!1,maxTurns:F,permissionPromptTool:Y,initialMessages:W=[],customSystemPrompt:J,appendSystemPrompt:C,userSpecifiedModel:X,fallbackModel:V,getQueuedCommands:K=()=>[],removeQueuedCommands:E=()=>{},abortController:z}){if(!process.env.CLAUDE_CODE_ENTRYPOINT)process.env.CLAUDE_CODE_ENTRYPOINT="sdk-cli";XX(D);let q=Date.now(),M=X?Vu(X):x5(),[R,P,L]=await Promise.all([jy(I,M,Array.from(B.additionalWorkingDirectories)),_G(),ZV()]),O=[...J?[J]:R,...C?[C]:[]],j=Zd2(W),m={messages:j,setMessages:()=>{},onChangeAPIKey:()=>{},options:{commands:A,debug:!1,tools:I,verbose:G,mainLoopModel:M,maxThinkingTokens:jE(j),mcpClients:Z,mcpResources:{},ideInstallationStatus:null,isNonInteractiveSession:!0,theme:YA().theme},getToolPermissionContext:()=>B,getQueuedCommands:()=>[],removeQueuedCommands:()=>{},abortController:z??new AbortController,readFileState:{},setInProgressToolUseIDs:()=>{},setToolPermissionContext:()=>{},agentId:yB()},y=[...j,...(await cp(Q,"prompt",()=>{},{...m,messages:j},null,null)).messages],p=jE(y);if(p>0)m={messages:y,setMessages:()=>{},onChangeAPIKey:()=>{},options:{commands:A,debug:!1,tools:I,verbose:G,mainLoopModel:M,maxThinkingTokens:p,mcpClients:Z,mcpResources:{},ideInstallationStatus:null,isNonInteractiveSession:!0,theme:YA().theme},getToolPermissionContext:()=>B,abortController:new AbortController,readFileState:{},setToolPermissionContext:()=>{},getQueuedCommands:K,removeQueuedCommands:E,setInProgressToolUseIDs:()=>{},agentId:yB()};let d=async(W1,y1,k1,IA,VA)=>{let i1=await oM(W1,y1,k1,IA,VA);if(i1.behavior==="allow"||i1.behavior==="deny")return i1;if(Y)for await(let j1 of Y.call({tool_name:W1.name,input:y1,tool_use_id:VA},k1,d,IA)){if(j1.type!=="result")continue;if(z?.signal.aborted)return{behavior:"deny",message:"Permission prompt was aborted.",decisionReason:{type:"permissionPromptTool",permissionPromptToolName:W1.name,toolResult:j1},ruleSuggestions:null};let B1=Y.mapToolResultToToolResultBlockParam(j1.data,"1");if(!B1.content||!Array.isArray(B1.content)||!B1.content[0]||B1.content[0].type!=="text"||typeof B1.content[0].text!=="string")throw new Error('Permission prompt tool returned an invalid result. Expected a single text block param with type="text" and a string text value.');return Qd2(Bd2.parse(w4(B1.content[0].text)),Y.name)}return i1};yield{type:"system",subtype:"init",cwd:D,session_id:yB(),tools:I.map((W1)=>W1.name),mcp_servers:Z.map((W1)=>({name:W1.name,status:W1.type})),model:M,permissionMode:B.mode,apiKeySource:QF(!0).source};let t=Oc,s=0;for await(let W1 of qE(y,O,P,L,d,m,void 0,V)){if(W1.type==="assistant"||W1.type==="user")y.push(W1),await oF1(y);switch(W1.type){case"assistant":case"progress":case"user":yield*lb6(W1);break;case"stream_event":if(W1.event.type==="message_start")t=wk(t,W1.event.message.usage);if(W1.event.type==="message_delta")t=wk(t,W1.event.usage);break;case"attachment":case"stream_request_start":case"system":break}if(W1.type==="user"&&F&&++s>=F){yield{type:"result",subtype:"error_max_turns",duration_ms:Date.now()-q,duration_api_ms:CS(),is_error:!1,num_turns:s,session_id:yB(),total_cost_usd:IN(),usage:t};return}}let f=aI(y);if(!f||f.type!=="assistant"){yield{type:"result",subtype:"error_during_execution",duration_ms:Date.now()-q,duration_api_ms:CS(),is_error:!1,num_turns:s,session_id:yB(),total_cost_usd:IN(),usage:t};return}let o=aI(f.message.content);if(o?.type!=="text"&&o?.type!=="thinking"&&o?.type!=="redacted_thinking")throw new Error(`Expected first content item to be text or thinking, but got ${JSON.stringify(f.message.content[0],null,2)}`);yield{type:"result",subtype:"success",is_error:Boolean(f.isApiErrorMessage),duration_ms:Date.now()-q,duration_api_ms:CS(),num_turns:y.length-1,result:o.type==="text"?o.text:"",session_id:yB(),total_cost_usd:IN(),usage:t}}function*lb6(A){switch(A.type){case"assistant":for(let B of t3([A]))yield{type:"assistant",message:B.message,parent_tool_use_id:null,session_id:yB()};return;case"progress":if(A.data.type!=="agent_progress")return;for(let B of t3([A.data.message]))switch(B.type){case"assistant":yield{type:"assistant",message:B.message,parent_tool_use_id:A.parentToolUseID,session_id:yB()};break;case"user":yield{type:"user",message:B.message,parent_tool_use_id:A.parentToolUseID,session_id:yB()};break}break;case"user":for(let B of t3([A]))yield{type:"user",message:B.message,parent_tool_use_id:null,session_id:yB()};return;default:}}function Zd2(A){return A.flatMap((B)=>{switch(B.type){case"assistant":return[{type:"assistant",message:B.message,uuid:Dd2(),timestamp:new Date().toISOString()}];case"user":return[{type:"user",message:B.message,uuid:Dd2(),timestamp:new Date().toISOString()}];default:return[]}})}function Gd2(A){return A.flatMap((B)=>{switch(B.type){case"assistant":return[{type:"assistant",message:B.message,session_id:yB(),parent_tool_use_id:null}];case"user":return[{type:"user",message:B.message,session_id:yB(),parent_tool_use_id:null}];default:return[]}})}import{cwd as ab6}from"process";var ib6=G1(H1(),1);var j6A=G1(H1(),1);var nb6=v.object({id:v.string(),title:v.string(),description:v.string(),status:v.enum(["open","in_progress","completed","cancelled"]),repo:v.object({name:v.string(),owner:v.object({login:v.string()}),default_branch:v.string().optional()}).nullable(),turns:v.array(v.string()),created_at:v.string(),updated_at:v.string()}),S08=v.array(nb6);async function Fd2(A,B,Q,D,I,Z,G,F){let Y=[];if(F.continue)try{E1("tengu_continue_print",{});let z=await CP(void 0,Z.concat(G));if(z)Y=z.messages}catch(z){b1(z instanceof Error?z:new Error(String(z))),process.exit(1)}if(!1){if(F.teleport)try{}catch(z){}}if(F.resume)try{E1("tengu_resume_print",{});let z=PK(F.resume);if(!z){if(process.stderr.write(`Error: --resume requires a valid session ID when used with --print


Error: Expected first content item to be text or thinking, but got undefined
    at Id2 (file:///Users/mzazon/.nvm/versions/node/v24.3.0/lib/node_modules/@anthropic-ai/claude-code/cli.js:2605:5839)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async z (file:///Users/mzazon/.nvm/versions/node/v24.3.0/lib/node_modules/@anthropic-ai/claude-code/cli.js:2620:483)

Node.js v24.3.0
[2025-07-16 08:45:19] [ERROR] Claude restoration failed for serverless-api-patterns-lambda-authorizers-api-gateway (exit code: 1)
[2025-07-16 08:45:19] [ERROR] Usage limit detected, stopping script to allow resume
