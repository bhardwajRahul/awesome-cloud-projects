# GraphQL Schema for Blog Platform
# This schema defines the complete API contract for a blog platform with real-time capabilities

# Blog Post type with all necessary fields
type BlogPost {
    id: ID!
    title: String!
    content: String!
    author: String!
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
    tags: [String]
    published: Boolean!
}

# Input type for creating new blog posts
input CreateBlogPostInput {
    title: String!
    content: String!
    tags: [String]
    published: Boolean = false
}

# Input type for updating existing blog posts
input UpdateBlogPostInput {
    id: ID!
    title: String
    content: String
    tags: [String]
    published: Boolean
}

# Query operations for reading data
type Query {
    # Get a single blog post by ID
    getBlogPost(id: ID!): BlogPost
    
    # List all published blog posts with pagination
    listBlogPosts(limit: Int, nextToken: String): BlogPostConnection
    
    # List blog posts by a specific author with pagination
    listBlogPostsByAuthor(
        author: String!, 
        limit: Int, 
        nextToken: String
    ): BlogPostConnection
}

# Mutation operations for modifying data
type Mutation {
    # Create a new blog post
    createBlogPost(input: CreateBlogPostInput!): BlogPost
    
    # Update an existing blog post (author-restricted)
    updateBlogPost(input: UpdateBlogPostInput!): BlogPost
    
    # Delete a blog post (author-restricted)
    deleteBlogPost(id: ID!): BlogPost
}

# Subscription operations for real-time updates
type Subscription {
    # Subscribe to new blog post creation events
    onCreateBlogPost: BlogPost
        @aws_subscribe(mutations: ["createBlogPost"])
    
    # Subscribe to blog post update events
    onUpdateBlogPost: BlogPost
        @aws_subscribe(mutations: ["updateBlogPost"])
    
    # Subscribe to blog post deletion events
    onDeleteBlogPost: BlogPost
        @aws_subscribe(mutations: ["deleteBlogPost"])
}

# Connection type for pagination support
type BlogPostConnection {
    items: [BlogPost]
    nextToken: String
}

# Schema definition specifying operation types
schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}