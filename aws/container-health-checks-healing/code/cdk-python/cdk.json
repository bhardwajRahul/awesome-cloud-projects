{
  "app": "python3 app.py",
  "watch": {
    "include": [
      "**"
    ],
    "exclude": [
      "README.md",
      "cdk*.json",
      "requirements*.txt",
      "source.bat",
      "**/__pycache__",
      "**/*.pyc",
      "**/*.pyo",
      "**/*.pyd",
      "**/.git",
      "**/.venv",
      "**/.env",
      "**/node_modules",
      "**/cdk.out",
      "**/.pytest_cache",
      "**/.coverage",
      "**/htmlcov",
      "**/*.egg-info",
      "**/dist",
      "**/build"
    ]
  },
  "context": {
    "@aws-cdk/aws-lambda:recognizeLayerVersion": true,
    "@aws-cdk/core:checkSecretUsage": true,
    "@aws-cdk/core:target-partitions": [
      "aws",
      "aws-cn"
    ],
    "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": true,
    "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": true,
    "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": true,
    "@aws-cdk/aws-iam:minimizePolicies": true,
    "@aws-cdk/core:validateSnapshotRemovalPolicy": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": true,
    "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
    "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
    "@aws-cdk/aws-apigateway:disableCloudWatchRole": true,
    "@aws-cdk/core:enablePartitionLiterals": true,
    "@aws-cdk/aws-events:eventsTargetQueueSameAccount": true,
    "@aws-cdk/aws-iam:standardizedServicePrincipals": true,
    "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": true,
    "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": true,
    "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
    "@aws-cdk/aws-route53-patters:useCertificate": true,
    "@aws-cdk/customresources:installLatestAwsSdkDefault": false,
    "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": true,
    "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": true,
    "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": true,
    "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": true,
    "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": true,
    "@aws-cdk/aws-redshift:columnId": true,
    "@aws-cdk/aws-stepfunctions-tasks:enableLogging": true,
    "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": true,
    "@aws-cdk/aws-apigateway:requestValidatorUniqueId": true,
    "@aws-cdk/aws-kms:aliasNameRef": true,
    "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": true,
    "@aws-cdk/core:includePrefixInUniqueNameGeneration": true,
    "@aws-cdk/aws-efs:denyAnonymousAccess": true,
    "@aws-cdk/aws-opensearchservice:enableLogging": true,
    "@aws-cdk/aws-lambda:baseEnvironmentVariables": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": true,
    "@aws-cdk/aws-lambda:configureSqsEventSourceMapping": true,
    "@aws-cdk/aws-iam:permissionsBoundaryTransform": true,
    "@aws-cdk/aws-elasticloadbalancingv2:enableGrpcHealthCheck": true,
    "@aws-cdk/aws-ec2:prefixInterfaceEndpointServiceName": true,
    "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": true,
    "@aws-cdk/aws-applicationautoscaling:generateConfigurationOnProps": true,
    "@aws-cdk/aws-kinesisfirehose:deliveryStreamUseNewName": true,
    "@aws-cdk/aws-route53:geolocationContinentGeoLocationTypeAsString": true,
    "@aws-cdk/aws-stepfunctions:allowEmptyDefinition": true,
    "@aws-cdk/aws-events:newRuleDisableCloudwatchRole": true,
    "@aws-cdk/aws-s3objectlambda:useObjectLambdaTargetGroupName": true,
    "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": true,
    "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": false,
    "@aws-cdk/aws-stepfunctions-tasks:useNewSfnRunTask": false,
    "@aws-cdk/aws-lambda:supportInlineCode": true
  },
  "build": {
    "commands": [
      "pip install -r requirements.txt",
      "python -m pytest tests/ -v --tb=short",
      "python -m black --check .",
      "python -m flake8 .",
      "python -m mypy ."
    ]
  },
  "deploy": {
    "commands": [
      "pip install -r requirements.txt"
    ]
  },
  "diff": {
    "commands": [
      "pip install -r requirements.txt"
    ]
  },
  "destroy": {
    "commands": [
      "pip install -r requirements.txt"
    ]
  },
  "synth": {
    "commands": [
      "pip install -r requirements.txt"
    ]
  },
  "metadata": {
    "project": {
      "name": "Container Health Checks and Self-Healing Applications",
      "description": "CDK Python application for implementing comprehensive container health checks and self-healing applications using AWS ECS, ALB, CloudWatch, and Lambda",
      "version": "1.0.0",
      "author": "AWS CDK Recipe Generator",
      "tags": [
        "containers",
        "health-checks",
        "self-healing",
        "ecs",
        "fargate",
        "load-balancer",
        "monitoring",
        "auto-scaling",
        "cloudwatch",
        "lambda"
      ]
    },
    "aws": {
      "services": [
        "ECS",
        "Application Load Balancer",
        "CloudWatch",
        "Lambda",
        "Auto Scaling",
        "VPC",
        "IAM",
        "CloudWatch Logs"
      ],
      "regions": [
        "us-east-1",
        "us-west-2",
        "eu-west-1",
        "ap-southeast-1"
      ],
      "estimated-cost": {
        "monthly": "$50-100",
        "description": "Cost varies based on container usage, load balancer traffic, and Lambda invocations"
      }
    },
    "cdk": {
      "version": "2.110.0+",
      "language": "python",
      "constructs": [
        "aws-ec2",
        "aws-ecs",
        "aws-elasticloadbalancingv2",
        "aws-cloudwatch",
        "aws-lambda",
        "aws-iam",
        "aws-applicationautoscaling",
        "aws-logs"
      ]
    }
  }
}