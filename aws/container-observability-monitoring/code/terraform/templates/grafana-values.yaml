adminPassword: "${admin_password}"

persistence:
  enabled: true
  size: ${storage_size}
  storageClassName: "gp2"
  accessModes:
    - ReadWriteOnce

service:
  type: ${enable_loadbalancer ? "LoadBalancer" : "ClusterIP"}
  port: 80
  targetPort: 3000

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 512Mi

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus-server:80
      access: proxy
      isDefault: true
      editable: true
    - name: CloudWatch
      type: cloudwatch
      jsonData:
        authType: arn
        defaultRegion: ${region}
        customMetricsNamespaces: 'AWS/ContainerInsights,AWS/ECS,AWS/EKS,AWS/Lambda'
      editable: true

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
    - name: 'container-observability'
      orgId: 1
      folder: 'Container Observability'
      type: file
      disableDeletion: false
      editable: true
      options:
        path: /var/lib/grafana/dashboards/container-observability
    - name: 'kubernetes'
      orgId: 1
      folder: 'Kubernetes'
      type: file
      disableDeletion: false
      editable: true
      options:
        path: /var/lib/grafana/dashboards/kubernetes

dashboards:
  container-observability:
    eks-cluster-overview:
      gnetId: 3119
      revision: 2
      datasource: Prometheus
    kubernetes-cluster-monitoring:
      gnetId: 7249
      revision: 1
      datasource: Prometheus
    kubernetes-pod-overview:
      gnetId: 6417
      revision: 1
      datasource: Prometheus
    node-exporter-full:
      gnetId: 1860
      revision: 29
      datasource: Prometheus
  kubernetes:
    kubernetes-cluster-overview:
      gnetId: 7249
      revision: 1
      datasource: Prometheus
    kubernetes-deployment-overview:
      gnetId: 8588
      revision: 1
      datasource: Prometheus
    kubernetes-node-overview:
      gnetId: 6417
      revision: 1
      datasource: Prometheus

grafana.ini:
  server:
    root_url: http://localhost:3000
    serve_from_sub_path: true
  analytics:
    check_for_updates: false
    reporting_enabled: false
  security:
    admin_password: "${admin_password}"
    disable_gravatar: true
  users:
    allow_sign_up: false
    auto_assign_org: true
    auto_assign_org_id: 1
    auto_assign_org_role: Viewer
  auth.anonymous:
    enabled: false
  log:
    mode: console
  paths:
    data: /var/lib/grafana/data
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning

env:
  GF_EXPLORE_ENABLED: true
  GF_PANELS_DISABLE_SANITIZE_HTML: true
  GF_LOG_FILTERS: rendering:debug
  GF_DATE_FORMATS_DEFAULT_TIMEZONE: UTC

envFromSecret: ""
envRenderSecret: {}

extraConfigmapMounts: []
extraSecretMounts: []

extraVolumeMounts: []
extraVolumes: []

initChownData:
  enabled: true
  image:
    repository: busybox
    tag: "1.31.1"
    pullPolicy: IfNotPresent
  resources: {}

plugins:
  - grafana-clock-panel
  - grafana-simple-json-datasource
  - grafana-worldmap-panel
  - grafana-piechart-panel

notifiers: {}

sidecar:
  dashboards:
    enabled: true
    searchNamespace: ALL
    label: grafana_dashboard
    labelValue: "1"
    folder: /tmp/dashboards
    folderAnnotation: grafana_folder
    provider:
      disableDelete: false
      allowUiUpdates: false
  datasources:
    enabled: true
    searchNamespace: ALL
    label: grafana_datasource
    labelValue: "1"

serviceMonitor:
  enabled: true
  path: /metrics
  interval: 30s
  scrapeTimeout: 30s