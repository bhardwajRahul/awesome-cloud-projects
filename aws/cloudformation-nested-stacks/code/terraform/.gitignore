# ==============================================================================
# Terraform .gitignore
# This file specifies intentionally untracked files that Git should ignore
# ==============================================================================

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore Mac OS generated files
.DS_Store
.DS_Store?

# Ignore Windows generated files
Thumbs.db
ehthumbs.db
Desktop.ini

# Ignore Linux generated files
*~

# Ignore temporary files
*.tmp
*.temp
*.log

# Ignore backup files
*.backup
*.bak

# Ignore editor-specific files
# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# VS Code
.vscode/
*.code-workspace

# IntelliJ IDEA
.idea/
*.iml
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Atom
.atom/

# Archives
*.zip
*.tar.gz
*.rar

# Environment files
.env
.env.local
.env.*.local

# Certificate files (if any)
*.pem
*.key
*.crt
*.p12
*.pfx

# Terraform lock file (optional - some teams prefer to commit this)
# .terraform.lock.hcl

# AWS credentials (if stored locally)
.aws/
credentials
config

# SSH keys
id_rsa
id_rsa.pub
*.ppk

# Python files (if using Python scripts)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg

# Node.js files (if using Node.js scripts)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Ruby files (if using Ruby scripts)
*.gem
*.rbc
/.config
/coverage/
/InstalledFiles
/pkg/
/spec/reports/
/spec/examples.txt
/test/tmp/
/test/version_tmp/
/tmp/

# Go files (if using Go applications)
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool
*.out

# Dependency directories
vendor/

# Custom application files
user_data_custom.sh
deploy_custom.sh
destroy_custom.sh

# Documentation build files
docs/_build/
docs/.doctrees/

# Coverage reports
htmlcov/
.coverage
.coverage.*
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Terraform module cache
.terraform.d/

# Terraform workspace files
terraform.tfstate.d/

# Local development files
local.tf
local.tfvars
dev.tf
dev.tfvars
test.tf
test.tfvars

# Security scanner reports
bandit-report.txt
safety-report.txt
semgrep-report.json

# Infrastructure diagrams (generated)
diagram.png
architecture.svg
infra-map.html

# Performance test results
performance-results/
load-test-results/

# Monitoring and alerting configurations (if sensitive)
monitoring/alerts/custom/
grafana/dashboards/custom/

# Database migration files (if any)
migrations/local/
migrations/test/

# Certificate authority files
ca/
certs/private/

# Docker files (if used for local development)
.dockerignore
docker-compose.override.yml
docker-compose.local.yml

# Kubernetes files (if used for local development)
kubeconfig
k8s-local/
k8s-dev/

# Ansible files (if used for configuration management)
ansible/inventory/local
ansible/group_vars/local/
ansible/host_vars/*/vault.yml

# Packer files (if used for AMI building)
packer/builds/
*.box

# Vagrant files (if used for local development)
.vagrant/
Vagrantfile.local

# Makefiles with sensitive data
Makefile.local
Makefile.secrets