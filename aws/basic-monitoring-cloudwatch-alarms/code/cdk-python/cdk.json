{
  "app": "python app.py",
  "watch": {
    "include": [
      "**"
    ],
    "exclude": [
      "README.md",
      "cdk*.json",
      "requirements*.txt",
      "source.bat",
      "**/__pycache__",
      "**/*.pyc",
      ".venv/**",
      "node_modules/**",
      ".git/**",
      ".pytest_cache/**",
      ".coverage",
      "htmlcov/**",
      "dist/**",
      "build/**",
      "*.egg-info/**",
      ".tox/**",
      ".mypy_cache/**",
      ".bandit",
      ".pre-commit-config.yaml"
    ]
  },
  "context": {
    "@aws-cdk/aws-lambda:recognizeLayerVersion": true,
    "@aws-cdk/core:checkSecretUsage": true,
    "@aws-cdk/core:target-partitions": [
      "aws",
      "aws-cn"
    ],
    "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": true,
    "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": true,
    "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": true,
    "@aws-cdk/aws-iam:minimizePolicies": true,
    "@aws-cdk/core:validateSnapshotRemovalPolicy": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": true,
    "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
    "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
    "@aws-cdk/aws-apigateway:disableCloudWatchRole": true,
    "@aws-cdk/core:enablePartitionLiterals": true,
    "@aws-cdk/aws-events:eventsTargetQueueSameAccount": true,
    "@aws-cdk/aws-iam:standardizedServicePrincipals": true,
    "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": true,
    "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": true,
    "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
    "@aws-cdk/aws-route53-patters:useCertificate": true,
    "@aws-cdk/customresources:installLatestAwsSdkDefault": false,
    "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": true,
    "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": true,
    "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": true,
    "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": true,
    "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": true,
    "@aws-cdk/aws-redshift:columnId": true,
    "@aws-cdk/aws-stepfunctions-tasks:enableLogging": true,
    "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": true,
    "@aws-cdk/aws-apigateway:requestValidatorUniqueId": true,
    "@aws-cdk/aws-kms:aliasNameRef": true,
    "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": true,
    "@aws-cdk/core:includePrefixInUniqueNameGeneration": true,
    "@aws-cdk/aws-efs:denyAnonymousAccess": true,
    "@aws-cdk/aws-opensearchservice:enableLogging": true,
    "@aws-cdk/aws-s3:enforceSSL": true,
    "@aws-cdk/aws-s3:disallowInsecureConnections": true,
    "@aws-cdk/aws-elasticloadbalancingv2:enableEndpointSliceSupport": true,
    "@aws-cdk/aws-elasticloadbalancingv2:dropInvalidHeaderFields": true,
    "@aws-cdk/aws-elasticloadbalancingv2:enableGrpcSupport": true,
    "@aws-cdk/aws-elasticloadbalancingv2:disableElasticLoadBalancingV2Log": true,
    "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": true,
    "@aws-cdk/core:stackRelativeExports": true,
    "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": true,
    "@aws-cdk/aws-apigateway:requestValidatorUniqueId": true
  },
  "metadata": {
    "aws:cdk:path": "BasicMonitoringStack"
  },
  "version": "2.168.0",
  "build": {
    "commands": [
      "python -m pip install --upgrade pip",
      "python -m pip install -r requirements.txt",
      "python -m pytest tests/ -v --cov=app --cov-report=html --cov-report=term-missing",
      "python -m black --check .",
      "python -m flake8 .",
      "python -m mypy .",
      "python -m bandit -r ."
    ]
  },
  "testing": {
    "unit": {
      "commands": [
        "python -m pytest tests/unit/ -v --cov=app --cov-report=html"
      ]
    },
    "integration": {
      "commands": [
        "python -m pytest tests/integration/ -v"
      ]
    }
  },
  "deployment": {
    "require-approval": "never",
    "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
    "app-stacks": [
      "BasicMonitoringStack"
    ],
    "hotswap": true,
    "hotswap-fallback": true,
    "watch": true,
    "concurrency": 1,
    "asset-metadata": true,
    "path-metadata": true,
    "version-reporting": true,
    "staging": true,
    "cache": true,
    "rollback": true,
    "notices": true,
    "diff": true,
    "deploy": true,
    "destroy": true
  },
  "feature_flags": {
    "@aws-cdk/core:enableStackNameDuplicates": true,
    "@aws-cdk/core:enableDiffNoFail": true,
    "@aws-cdk/core:stackRelativeExports": true,
    "@aws-cdk/aws-ecr-assets:dockerIgnoreSupport": true,
    "@aws-cdk/aws-secretsmanager:parseOwnedSecretName": true,
    "@aws-cdk/aws-kms:defaultKeyPolicies": true,
    "@aws-cdk/aws-s3:grantWriteWithoutAcl": true,
    "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": true,
    "@aws-cdk/aws-rds:lowercaseDbIdentifier": true,
    "@aws-cdk/aws-efs:defaultEncryptionAtRest": true,
    "@aws-cdk/aws-lambda:recognizeVersionProps": true,
    "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": true,
    "@aws-cdk/core:target-partitions": [
      "aws",
      "aws-cn"
    ]
  },
  "plugins": {
    "cdk-nag": {
      "enabled": true,
      "rules": {
        "AwsSolutions-IAM4": {
          "enabled": true,
          "reason": "Managed policies are acceptable for this use case"
        },
        "AwsSolutions-IAM5": {
          "enabled": true,
          "reason": "Wildcard permissions are limited and necessary for CloudWatch"
        },
        "AwsSolutions-SNS2": {
          "enabled": true,
          "reason": "SNS encryption is not required for this basic monitoring setup"
        },
        "AwsSolutions-SNS3": {
          "enabled": true,
          "reason": "SNS SSL requirement is not needed for basic email notifications"
        }
      }
    }
  },
  "output": {
    "format": "json",
    "file": "cdk.out"
  },
  "debug": {
    "verbose": false,
    "trace": false
  },
  "profile": "default",
  "lookups": true,
  "bundling": {
    "stacks": ["*"]
  },
  "asset-metadata": false,
  "path-metadata": false,
  "version-reporting": false,
  "staging": false,
  "cli-help": {
    "examples": [
      {
        "command": "cdk deploy",
        "description": "Deploy the basic monitoring stack"
      },
      {
        "command": "cdk deploy --parameters NotificationEmail=your-email@example.com",
        "description": "Deploy with a specific notification email"
      },
      {
        "command": "cdk diff",
        "description": "Compare deployed stack with current state"
      },
      {
        "command": "cdk destroy",
        "description": "Destroy the deployed stack"
      },
      {
        "command": "cdk synth",
        "description": "Synthesize the CloudFormation template"
      }
    ]
  }
}