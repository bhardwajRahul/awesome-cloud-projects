# GraphQL Schema for Real-Time Data Synchronization
# This schema defines the API contract for real-time data operations
# with built-in subscription support for live updates

# Data item type representing synchronized data objects
type DataItem {
    id: ID!
    title: String!
    content: String!
    timestamp: String!
    version: Int!
}

# Query operations for reading data
type Query {
    # Get a single data item by ID
    getDataItem(id: ID!): DataItem
    
    # List all data items (use with caution in production)
    listDataItems: [DataItem]
}

# Mutation operations for modifying data
# These operations automatically trigger real-time subscriptions
type Mutation {
    # Create a new data item
    createDataItem(input: CreateDataItemInput!): DataItem
    
    # Update an existing data item
    updateDataItem(input: UpdateDataItemInput!): DataItem
    
    # Delete a data item
    deleteDataItem(id: ID!): DataItem
}

# Real-time subscription operations
# Clients can subscribe to these to receive live updates
type Subscription {
    # Triggered when a new data item is created
    onDataItemCreated: DataItem
        @aws_subscribe(mutations: ["createDataItem"])
    
    # Triggered when a data item is updated
    onDataItemUpdated: DataItem
        @aws_subscribe(mutations: ["updateDataItem"])
    
    # Triggered when a data item is deleted
    onDataItemDeleted: DataItem
        @aws_subscribe(mutations: ["deleteDataItem"])
    
    # Optional: Combined subscription for all data changes
    onDataItemChanged: DataItem
        @aws_subscribe(mutations: ["createDataItem", "updateDataItem", "deleteDataItem"])
}

# Input type for creating new data items
input CreateDataItemInput {
    title: String!
    content: String!
}

# Input type for updating existing data items
input UpdateDataItemInput {
    id: ID!
    title: String
    content: String
}

# Schema directive for AppSync subscriptions
directive @aws_subscribe(mutations: [String!]!) on FIELD_DEFINITION

# Schema directive for authentication (if needed)
directive @aws_auth(cognito_groups: [String!]!) on FIELD_DEFINITION

# Schema directive for caching control
directive @aws_cache_control(maxAge: Int!, scope: CacheControlScope!) on FIELD_DEFINITION

enum CacheControlScope {
    PUBLIC
    PRIVATE
}