# GraphQL Schema for Real-Time Data Synchronization
# AWS AppSync GraphQL API with real-time subscriptions for automatic data synchronization

# DataItem type representing the core data structure
type DataItem {
    id: ID!
    title: String!
    content: String!
    timestamp: String!
    version: Int!
}

# Query operations for reading data
type Query {
    # Get a single data item by ID
    getDataItem(id: ID!): DataItem
    
    # List all data items with optional limit
    listDataItems(limit: Int): [DataItem]
}

# Mutation operations for writing data
type Mutation {
    # Create a new data item
    createDataItem(input: CreateDataItemInput!): DataItem
    
    # Update an existing data item
    updateDataItem(input: UpdateDataItemInput!): DataItem
    
    # Delete a data item by ID
    deleteDataItem(id: ID!): DataItem
}

# Real-time subscription operations
# These automatically trigger WebSocket notifications to all connected clients
type Subscription {
    # Subscribe to new data item creation events
    onDataItemCreated: DataItem
        @aws_subscribe(mutations: ["createDataItem"])
    
    # Subscribe to data item update events
    onDataItemUpdated: DataItem
        @aws_subscribe(mutations: ["updateDataItem"])
    
    # Subscribe to data item deletion events
    onDataItemDeleted: DataItem
        @aws_subscribe(mutations: ["deleteDataItem"])
}

# Input types for mutations
input CreateDataItemInput {
    title: String!
    content: String!
}

input UpdateDataItemInput {
    id: ID!
    title: String
    content: String
}