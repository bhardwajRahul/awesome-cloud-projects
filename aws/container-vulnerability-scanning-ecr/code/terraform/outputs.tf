# ECR Repository Outputs
output "ecr_repository_arn" {
  description = "ARN of the ECR repository"
  value       = aws_ecr_repository.main.arn
}

output "ecr_repository_name" {
  description = "Name of the ECR repository"
  value       = aws_ecr_repository.main.name
}

output "ecr_repository_uri" {
  description = "URI of the ECR repository"
  value       = aws_ecr_repository.main.repository_url
}

output "ecr_repository_registry_id" {
  description = "Registry ID of the ECR repository"
  value       = aws_ecr_repository.main.registry_id
}

# Docker commands for pushing images
output "docker_login_command" {
  description = "Command to authenticate Docker with ECR"
  value       = "aws ecr get-login-password --region ${data.aws_region.current.name} | docker login --username AWS --password-stdin ${aws_ecr_repository.main.repository_url}"
}

output "docker_build_command" {
  description = "Sample command to build and tag a Docker image"
  value       = "docker build -t ${aws_ecr_repository.main.repository_url}:latest ."
}

output "docker_push_command" {
  description = "Sample command to push a Docker image to ECR"
  value       = "docker push ${aws_ecr_repository.main.repository_url}:latest"
}

# Inspector Configuration Outputs
output "inspector_enabled" {
  description = "Whether Amazon Inspector is enabled for ECR scanning"
  value       = var.enable_inspector
}

output "inspector_rescan_duration" {
  description = "Inspector rescan duration configuration"
  value       = var.enable_inspector ? var.inspector_rescan_duration : null
}

output "enhanced_scanning_enabled" {
  description = "Whether enhanced scanning is enabled"
  value       = var.enable_inspector && length(aws_ecr_registry_scanning_configuration.main) > 0
}

# SNS Topic Outputs
output "sns_topic_arn" {
  description = "ARN of the SNS topic for vulnerability alerts"
  value       = var.enable_email_notifications && var.email_address != null ? aws_sns_topic.vulnerability_alerts[0].arn : null
}

output "sns_topic_name" {
  description = "Name of the SNS topic for vulnerability alerts"
  value       = var.enable_email_notifications && var.email_address != null ? aws_sns_topic.vulnerability_alerts[0].name : null
}

output "email_subscription_pending" {
  description = "Whether email subscription requires confirmation"
  value       = var.enable_email_notifications && var.email_address != null ? "Please check your email and confirm the SNS subscription" : null
}

# CloudWatch Outputs
output "cloudwatch_log_group_name" {
  description = "Name of the CloudWatch log group for Inspector findings"
  value       = aws_cloudwatch_log_group.inspector_findings.name
}

output "cloudwatch_log_group_arn" {
  description = "ARN of the CloudWatch log group for Inspector findings"
  value       = aws_cloudwatch_log_group.inspector_findings.arn
}

output "critical_vulnerability_alarm_arn" {
  description = "ARN of the critical vulnerability CloudWatch alarm"
  value       = var.enable_cloudwatch_alarms ? aws_cloudwatch_metric_alarm.critical_vulnerabilities[0].arn : null
}

output "high_vulnerability_alarm_arn" {
  description = "ARN of the high vulnerability CloudWatch alarm"
  value       = var.enable_cloudwatch_alarms ? aws_cloudwatch_metric_alarm.high_vulnerabilities[0].arn : null
}

# EventBridge Outputs
output "eventbridge_rule_arn" {
  description = "ARN of the EventBridge rule for Inspector findings"
  value       = var.enable_eventbridge_notifications ? aws_cloudwatch_event_rule.inspector_findings[0].arn : null
}

output "eventbridge_rule_name" {
  description = "Name of the EventBridge rule for Inspector findings"
  value       = var.enable_eventbridge_notifications ? aws_cloudwatch_event_rule.inspector_findings[0].name : null
}

# Account and Region Information
output "aws_account_id" {
  description = "AWS account ID where resources are deployed"
  value       = data.aws_caller_identity.current.account_id
}

output "aws_region" {
  description = "AWS region where resources are deployed"
  value       = data.aws_region.current.name
}

# Resource Naming
output "random_suffix" {
  description = "Random suffix used for resource naming"
  value       = local.random_suffix
}

# CLI Commands for Verification
output "scan_results_command" {
  description = "Command to view scan results for the repository"
  value       = "aws ecr describe-image-scan-findings --repository-name ${aws_ecr_repository.main.name} --image-id imageTag=latest"
}

output "list_images_command" {
  description = "Command to list images in the repository"
  value       = "aws ecr list-images --repository-name ${aws_ecr_repository.main.name}"
}

output "inspector_findings_command" {
  description = "Command to view Inspector findings"
  value       = "aws inspector2 list-findings --filter-criteria '{\"ecrImageRepositoryName\":[{\"comparison\":\"EQUALS\",\"value\":\"${aws_ecr_repository.main.name}\"}]}'"
}

# Security and Compliance Information
output "encryption_configuration" {
  description = "ECR repository encryption configuration"
  value = {
    encryption_type = "AES256"
    enabled         = true
  }
}

output "scanning_configuration" {
  description = "ECR repository scanning configuration"
  value = {
    scan_on_push       = var.enable_scan_on_push
    enhanced_scanning  = var.enable_inspector
    continuous_scan    = var.enable_continuous_scanning
  }
}

# Cost Optimization Information
output "lifecycle_policy_enabled" {
  description = "Whether lifecycle policy is enabled for cost optimization"
  value       = length(aws_ecr_lifecycle_policy.main) > 0 || length(aws_ecr_lifecycle_policy.default) > 0
}

# Next Steps and Important Notes
output "next_steps" {
  description = "Important next steps after deployment"
  value = [
    "1. Confirm email subscription if notifications are enabled",
    "2. Build and push a container image to test scanning",
    "3. Review scan findings in the AWS Console or via CLI",
    "4. Configure additional EventBridge targets as needed",
    "5. Set up automated remediation workflows based on findings"
  ]
}

output "important_notes" {
  description = "Important information about the deployed resources"
  value = [
    "Enhanced scanning charges apply based on Inspector pricing",
    "Initial scans may take 5-10 minutes to complete",
    "Continuous scanning monitors for new vulnerabilities over time",
    "Review and customize lifecycle policies for cost optimization",
    "Consider implementing automated remediation based on findings"
  ]
}