{
  "app": "python3 app.py",
  "watch": {
    "include": [
      "**"
    ],
    "exclude": [
      "README.md",
      "cdk*.json",
      "requirements*.txt",
      "source.bat",
      "**/__pycache__",
      "**/*.pyc",
      "**/.pytest_cache",
      "**/.coverage",
      "**/.tox",
      "**/node_modules",
      "**/dist",
      "**/build",
      "**/*.egg-info",
      "**/.git",
      "**/.github",
      "**/*.tmp",
      "**/*.temp",
      "**/cdk.out",
      "**/logs",
      "**/*.log"
    ]
  },
  "context": {
    "@aws-cdk/aws-lambda:recognizeLayerVersion": true,
    "@aws-cdk/aws-lambda:recognizeVersionProps": true,
    "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": true,
    "@aws-cdk/aws-apigateway:disableCloudWatchRole": false,
    "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": true,
    "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": true,
    "@aws-cdk/aws-iam:minimizePolicies": true,
    "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": true,
    "@aws-cdk/aws-lambda:recognizeRemovalPolicy": true,
    "@aws-cdk/aws-logs:uniqueLogGroupName": true,
    "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
    "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
    "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
    "@aws-cdk/aws-sqs:fifoThroughputLimit": true,
    "@aws-cdk/core:enableStackNameDuplicates": true,
    "@aws-cdk/core:stackRelativeExports": true,
    "@aws-cdk/core:target-partitions": [
      "aws",
      "aws-cn"
    ],
    "@aws-cdk/core:checkSecretUsage": true,
    "@aws-cdk/core:enablePartitionLiterals": true,
    "@aws-cdk/core:validateSnapshotRemovalPolicy": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": true,
    "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
    "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
    "@aws-cdk/aws-apigateway:disableCloudWatchRole": false,
    "@aws-cdk/core:enableStackNameDuplicates": true,
    "@aws-cdk/core:stackRelativeExports": true,
    "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": true,
    "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": true,
    "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": true,
    "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": true,
    "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": true,
    "@aws-cdk/aws-redshift:columnId": true,
    "@aws-cdk/aws-stepfunctions-tasks:enableLogging": true,
    "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": true,
    "@aws-cdk/aws-apigateway:requestValidatorUniqueId": true,
    "@aws-cdk/aws-kms:aliasNameRef": true,
    "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": true,
    "@aws-cdk/aws-lambda:removeDependencyOnZipFile": true,
    "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": true,
    "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForSourceAction": true,
    "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": true,
    "@aws-cdk/aws-events:eventsTargetQueueSameAccount": true,
    "@aws-cdk/aws-iam:standardizedServicePrincipals": true,
    "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": true,
    "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
    "@aws-cdk/aws-route53-patters:useCertificate": true,
    "@aws-cdk/customresources:installLatestAwsSdkDefault": false,
    "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": true,
    "@aws-cdk/aws-elasticloadbalancingv2:redirectEmptyPath": true,
    "@aws-cdk/aws-events-targets:sqsQueueMessageRetentionPeriod": true
  },
  "project": {
    "type": "app",
    "language": "python",
    "name": "quantum-computing-pipeline",
    "description": "Hybrid quantum-classical computing pipeline with Amazon Braket and Lambda",
    "version": "1.0.0",
    "author": "AWS CDK Team",
    "license": "Apache-2.0"
  },
  "build": {
    "exclude": [
      "**/*.pyc",
      "**/__pycache__",
      "**/.pytest_cache",
      "**/.coverage",
      "**/.tox",
      "**/node_modules",
      "**/dist",
      "**/build",
      "**/*.egg-info",
      "**/.git",
      "**/.github",
      "**/*.tmp",
      "**/*.temp",
      "**/cdk.out",
      "**/logs",
      "**/*.log",
      "**/.DS_Store",
      "**/Thumbs.db"
    ]
  },
  "deployment": {
    "account": "${CDK_DEFAULT_ACCOUNT}",
    "region": "${CDK_DEFAULT_REGION}",
    "requireApproval": "broadening",
    "rollback": true,
    "hotswap": false,
    "profile": "default"
  },
  "environments": {
    "dev": {
      "account": "${CDK_DEFAULT_ACCOUNT}",
      "region": "${CDK_DEFAULT_REGION}",
      "project_name": "quantum-pipeline-dev",
      "log_level": "DEBUG",
      "enable_tracing": true,
      "enable_detailed_monitoring": true
    },
    "staging": {
      "account": "${CDK_DEFAULT_ACCOUNT}",
      "region": "${CDK_DEFAULT_REGION}",
      "project_name": "quantum-pipeline-staging",
      "log_level": "INFO",
      "enable_tracing": true,
      "enable_detailed_monitoring": true
    },
    "prod": {
      "account": "${CDK_DEFAULT_ACCOUNT}",
      "region": "${CDK_DEFAULT_REGION}",
      "project_name": "quantum-pipeline-prod",
      "log_level": "WARN",
      "enable_tracing": true,
      "enable_detailed_monitoring": true
    }
  },
  "feature_flags": {
    "@aws-cdk/core:enablePartitionLiterals": true,
    "@aws-cdk/core:target-partitions": [
      "aws",
      "aws-cn"
    ],
    "@aws-cdk/aws-lambda:recognizeLayerVersion": true,
    "@aws-cdk/aws-lambda:recognizeVersionProps": true,
    "@aws-cdk/aws-lambda:recognizeRemovalPolicy": true,
    "@aws-cdk/aws-lambda:removeDependencyOnZipFile": true,
    "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
    "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
    "@aws-cdk/aws-iam:minimizePolicies": true,
    "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": true,
    "@aws-cdk/aws-iam:standardizedServicePrincipals": true,
    "@aws-cdk/aws-logs:uniqueLogGroupName": true,
    "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": true,
    "@aws-cdk/aws-apigateway:disableCloudWatchRole": false,
    "@aws-cdk/aws-apigateway:requestValidatorUniqueId": true,
    "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": true,
    "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": true,
    "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": true,
    "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": true,
    "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": true,
    "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": true,
    "@aws-cdk/aws-events:eventsTargetQueueSameAccount": true,
    "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
    "@aws-cdk/aws-sqs:fifoThroughputLimit": true,
    "@aws-cdk/core:enableStackNameDuplicates": true,
    "@aws-cdk/core:stackRelativeExports": true,
    "@aws-cdk/core:checkSecretUsage": true,
    "@aws-cdk/core:validateSnapshotRemovalPolicy": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": true,
    "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": true,
    "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": true,
    "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": true,
    "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": true,
    "@aws-cdk/aws-redshift:columnId": true,
    "@aws-cdk/aws-stepfunctions-tasks:enableLogging": true,
    "@aws-cdk/aws-kms:aliasNameRef": true,
    "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": true,
    "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForSourceAction": true,
    "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": true,
    "@aws-cdk/aws-route53-patters:useCertificate": true,
    "@aws-cdk/customresources:installLatestAwsSdkDefault": false,
    "@aws-cdk/aws-elasticloadbalancingv2:redirectEmptyPath": true,
    "@aws-cdk/aws-events-targets:sqsQueueMessageRetentionPeriod": true
  },
  "quantum_computing": {
    "supported_devices": {
      "simulators": [
        "local:braket/braket.devices.braket_sv_v2/BraketSvV2",
        "arn:aws:braket:::device/quantum-simulator/amazon/sv1",
        "arn:aws:braket:::device/quantum-simulator/amazon/tn1",
        "arn:aws:braket:::device/quantum-simulator/amazon/dm1"
      ],
      "qpus": [
        "arn:aws:braket:us-east-1::device/qpu/rigetti/Aspen-M-3",
        "arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1",
        "arn:aws:braket:us-east-1::device/qpu/ionq/Forte-1",
        "arn:aws:braket:us-west-1::device/qpu/rigetti/Aspen-M-3",
        "arn:aws:braket:eu-west-2::device/qpu/ionq/Aria-1"
      ]
    },
    "default_configurations": {
      "small_problems": {
        "max_qubits": 8,
        "device_type": "simulator",
        "instance_type": "ml.m5.large",
        "timeout_minutes": 30
      },
      "medium_problems": {
        "max_qubits": 16,
        "device_type": "simulator",
        "instance_type": "ml.m5.xlarge",
        "timeout_minutes": 60
      },
      "large_problems": {
        "max_qubits": 32,
        "device_type": "qpu",
        "instance_type": "ml.m5.2xlarge",
        "timeout_minutes": 120
      }
    },
    "algorithm_types": [
      "variational_quantum_eigensolver",
      "quantum_approximate_optimization_algorithm",
      "quantum_machine_learning",
      "quantum_chemistry_simulation",
      "quantum_optimization"
    ],
    "supported_frameworks": [
      "pennylane",
      "qiskit",
      "cirq",
      "braket-sdk"
    ]
  },
  "monitoring": {
    "metrics": {
      "namespace": "QuantumPipeline",
      "retention_days": 30,
      "detailed_monitoring": true
    },
    "logging": {
      "level": "INFO",
      "retention_days": 7,
      "structured_logging": true
    },
    "alarms": {
      "job_failure_threshold": 3,
      "efficiency_threshold": 0.3,
      "evaluation_periods": 2,
      "notification_enabled": true
    },
    "dashboards": {
      "auto_refresh": true,
      "refresh_interval": 60,
      "widgets": [
            "quantum_pipeline_activity",
            "optimization_performance",
            "error_rates",
            "cost_tracking"
      ]
    }
  },
  "security": {
    "encryption": {
      "s3_encryption": "S3_MANAGED",
      "lambda_env_encryption": true,
      "cloudwatch_encryption": true
    },
    "access_control": {
      "least_privilege": true,
      "cross_account_access": false,
      "mfa_required": false
    },
    "compliance": {
      "gdpr_compliance": true,
      "hipaa_compliance": false,
      "soc2_compliance": true
    }
  },
  "cost_optimization": {
    "s3_lifecycle": {
      "transition_to_ia_days": 30,
      "transition_to_glacier_days": 90,
      "expiration_days": 365
    },
    "lambda_optimization": {
      "provisioned_concurrency": false,
      "memory_optimization": true,
      "timeout_optimization": true
    },
    "monitoring_costs": {
      "budget_alerts": true,
      "cost_anomaly_detection": true,
      "usage_reporting": true
    }
  },
  "testing": {
    "unit_tests": {
      "framework": "pytest",
      "coverage_threshold": 80,
      "parallel_execution": true
    },
    "integration_tests": {
      "framework": "pytest",
      "mock_aws_services": true,
      "test_environments": ["dev", "staging"]
    },
    "performance_tests": {
      "framework": "locust",
      "load_testing": true,
      "benchmark_testing": true
    }
  },
  "deployment_options": {
    "blue_green": {
      "enabled": false,
      "rollback_on_failure": true,
      "health_check_timeout": 300
    },
    "canary": {
      "enabled": false,
      "traffic_percentage": 10,
      "duration_minutes": 5
    },
    "rollback": {
      "automatic": true,
      "failure_threshold": 5,
      "monitoring_period": 600
    }
  },
  "notifications": {
    "email": {
      "enabled": false,
      "recipients": []
    },
    "slack": {
      "enabled": false,
      "webhook_url": "",
      "channel": "#quantum-pipeline"
    },
    "sns": {
      "enabled": true,
      "topic_arn": "",
      "protocol": "email"
    }
  },
  "backup_and_recovery": {
    "s3_versioning": true,
    "cross_region_replication": false,
    "backup_retention_days": 30,
    "point_in_time_recovery": true
  },
  "tags": {
    "Project": "QuantumComputingPipeline",
    "Environment": "${ENVIRONMENT}",
    "Owner": "QuantumTeam",
    "CostCenter": "Research",
    "Compliance": "Standard",
    "Backup": "Required",
    "Monitoring": "Enhanced",
    "Purpose": "QuantumComputing"
  }
}