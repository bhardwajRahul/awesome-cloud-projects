AWSTemplateFormatVersion: '2010-09-09'
Description: 'S3 Disaster Recovery Solutions - Complete infrastructure for implementing robust disaster recovery using S3 Cross-Region Replication (CRR) with monitoring and alerting'

# =============================================================================
# METADATA
# =============================================================================
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Basic Configuration"
        Parameters:
          - Environment
          - ProjectName
          - PrimaryRegion
          - SecondaryRegion
      - Label:
          default: "S3 Configuration"
        Parameters:
          - SourceBucketName
          - ReplicaBucketName
          - EnableVersioning
          - EnableServerSideEncryption
      - Label:
          default: "Lifecycle Configuration"
        Parameters:
          - StandardDataTransitionDays
          - GlacierTransitionDays
          - EnableLifecycleManagement
      - Label:
          default: "Monitoring & Alerting"
        Parameters:
          - EnableCloudWatchMonitoring
          - ReplicationLatencyThreshold
          - AlertEmailAddress
          - EnableCloudTrailLogging
      - Label:
          default: "Advanced Configuration"
        Parameters:
          - ReplicationPriority
          - DeleteMarkerReplication
          - ReplicationTimeControl
    ParameterLabels:
      Environment:
        default: "Deployment Environment"
      ProjectName:
        default: "Project Name"
      PrimaryRegion:
        default: "Primary Region"
      SecondaryRegion:
        default: "Secondary Region"
      SourceBucketName:
        default: "Source Bucket Name"
      ReplicaBucketName:
        default: "Replica Bucket Name"
      EnableVersioning:
        default: "Enable Versioning"
      EnableServerSideEncryption:
        default: "Enable Server-Side Encryption"
      StandardDataTransitionDays:
        default: "Standard-IA Transition Days"
      GlacierTransitionDays:
        default: "Glacier Transition Days"
      EnableLifecycleManagement:
        default: "Enable Lifecycle Management"
      EnableCloudWatchMonitoring:
        default: "Enable CloudWatch Monitoring"
      ReplicationLatencyThreshold:
        default: "Replication Latency Threshold (seconds)"
      AlertEmailAddress:
        default: "Alert Email Address"
      EnableCloudTrailLogging:
        default: "Enable CloudTrail Logging"
      ReplicationPriority:
        default: "Replication Priority"
      DeleteMarkerReplication:
        default: "Delete Marker Replication"
      ReplicationTimeControl:
        default: "Replication Time Control"

# =============================================================================
# PARAMETERS
# =============================================================================
Parameters:
  Environment:
    Type: String
    Default: Production
    AllowedValues:
      - Development
      - Staging
      - Production
    Description: Deployment environment for resource tagging and configuration

  ProjectName:
    Type: String
    Default: DisasterRecovery
    Description: Project name for resource naming and tagging
    MinLength: 3
    MaxLength: 20
    AllowedPattern: '[a-zA-Z0-9\-]*'
    ConstraintDescription: Must contain only alphanumeric characters and hyphens

  PrimaryRegion:
    Type: String
    Default: us-east-1
    Description: Primary AWS region for source bucket
    AllowedValues:
      - us-east-1
      - us-west-1
      - us-west-2
      - eu-west-1
      - eu-central-1
      - ap-southeast-1
      - ap-northeast-1

  SecondaryRegion:
    Type: String
    Default: us-west-2
    Description: Secondary AWS region for replica bucket
    AllowedValues:
      - us-east-1
      - us-west-1
      - us-west-2
      - eu-west-1
      - eu-central-1
      - ap-southeast-1
      - ap-northeast-1

  SourceBucketName:
    Type: String
    Description: Name for the source S3 bucket (leave empty to auto-generate)
    Default: ''
    AllowedPattern: '^$|^[a-z0-9][a-z0-9\-]*[a-z0-9]$'
    ConstraintDescription: Must be a valid S3 bucket name (lowercase, alphanumeric, hyphens)

  ReplicaBucketName:
    Type: String
    Description: Name for the replica S3 bucket (leave empty to auto-generate)
    Default: ''
    AllowedPattern: '^$|^[a-z0-9][a-z0-9\-]*[a-z0-9]$'
    ConstraintDescription: Must be a valid S3 bucket name (lowercase, alphanumeric, hyphens)

  EnableVersioning:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Enable versioning on S3 buckets (required for replication)

  EnableServerSideEncryption:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Enable server-side encryption with S3 managed keys (SSE-S3)

  StandardDataTransitionDays:
    Type: Number
    Default: 30
    MinValue: 1
    MaxValue: 365
    Description: Number of days after which objects transition to Standard-IA

  GlacierTransitionDays:
    Type: Number
    Default: 90
    MinValue: 1
    MaxValue: 365
    Description: Number of days after which objects transition to Glacier

  EnableLifecycleManagement:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Enable lifecycle management for cost optimization

  EnableCloudWatchMonitoring:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Enable CloudWatch monitoring and alarms

  ReplicationLatencyThreshold:
    Type: Number
    Default: 900
    MinValue: 300
    MaxValue: 3600
    Description: Threshold in seconds for replication latency alarm

  AlertEmailAddress:
    Type: String
    Description: Email address for CloudWatch alarms and notifications
    AllowedPattern: '^[^\s@]+@[^\s@]+\.[^\s@]+$'
    ConstraintDescription: Must be a valid email address

  EnableCloudTrailLogging:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Enable CloudTrail logging for audit purposes

  ReplicationPriority:
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 1000
    Description: Priority for replication rule processing

  DeleteMarkerReplication:
    Type: String
    Default: Enabled
    AllowedValues:
      - Enabled
      - Disabled
    Description: Enable replication of delete markers

  ReplicationTimeControl:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Enable S3 Replication Time Control (RTC) for guaranteed 15-minute replication

# =============================================================================
# CONDITIONS
# =============================================================================
Conditions:
  CreateSourceBucketName: !Equals [!Ref SourceBucketName, '']
  CreateReplicaBucketName: !Equals [!Ref ReplicaBucketName, '']
  EnableVersioningCondition: !Equals [!Ref EnableVersioning, 'true']
  EnableServerSideEncryptionCondition: !Equals [!Ref EnableServerSideEncryption, 'true']
  EnableLifecycleManagementCondition: !Equals [!Ref EnableLifecycleManagement, 'true']
  EnableCloudWatchMonitoringCondition: !Equals [!Ref EnableCloudWatchMonitoring, 'true']
  EnableCloudTrailLoggingCondition: !Equals [!Ref EnableCloudTrailLogging, 'true']
  EnableReplicationTimeControlCondition: !Equals [!Ref ReplicationTimeControl, 'true']
  IsPrimaryRegion: !Equals [!Ref 'AWS::Region', !Ref PrimaryRegion]
  IsSecondaryRegion: !Equals [!Ref 'AWS::Region', !Ref SecondaryRegion]

# =============================================================================
# MAPPINGS
# =============================================================================
Mappings:
  RegionMap:
    us-east-1:
      RegionName: 'us-east-1'
      ShortName: 'use1'
    us-west-1:
      RegionName: 'us-west-1'
      ShortName: 'usw1'
    us-west-2:
      RegionName: 'us-west-2'
      ShortName: 'usw2'
    eu-west-1:
      RegionName: 'eu-west-1'
      ShortName: 'euw1'
    eu-central-1:
      RegionName: 'eu-central-1'
      ShortName: 'euc1'
    ap-southeast-1:
      RegionName: 'ap-southeast-1'
      ShortName: 'apse1'
    ap-northeast-1:
      RegionName: 'ap-northeast-1'
      ShortName: 'apne1'

# =============================================================================
# RESOURCES
# =============================================================================
Resources:
  # -----------------------------------------------------------------------------
  # S3 SOURCE BUCKET (Primary Region)
  # -----------------------------------------------------------------------------
  SourceBucket:
    Type: AWS::S3::Bucket
    Condition: IsPrimaryRegion
    Properties:
      BucketName: !If
        - CreateSourceBucketName
        - !Sub '${ProjectName}-source-${AWS::AccountId}-${AWS::Region}'
        - !Ref SourceBucketName
      VersioningConfiguration:
        Status: !If [EnableVersioningCondition, Enabled, Suspended]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !If [EnableServerSideEncryptionCondition, 'AES256', 'aws:kms']
            BucketKeyEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: CostOptimizationRule
            Status: !If [EnableLifecycleManagementCondition, Enabled, Disabled]
            Filter:
              Prefix: 'standard/'
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: !Ref StandardDataTransitionDays
              - StorageClass: GLACIER
                TransitionInDays: !Ref GlacierTransitionDays
          - Id: CriticalDataRule
            Status: !If [EnableLifecycleManagementCondition, Enabled, Disabled]
            Filter:
              And:
                Prefix: 'critical/'
                TagFilters:
                  - Key: Classification
                    Value: Critical
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: !Ref StandardDataTransitionDays
      ReplicationConfiguration:
        Role: !GetAtt ReplicationRole.Arn
        Rules:
          - Id: ReplicateEverything
            Status: Enabled
            Priority: !Ref ReplicationPriority
            Filter:
              Prefix: ''
            DeleteMarkerReplication:
              Status: !Ref DeleteMarkerReplication
            Destination:
              Bucket: !Sub 'arn:aws:s3:::${ReplicaBucket}'
              StorageClass: STANDARD_IA
              ReplicationTime: !If
                - EnableReplicationTimeControlCondition
                - Status: Enabled
                  Time:
                    Minutes: 15
                - !Ref 'AWS::NoValue'
              Metrics: !If
                - EnableReplicationTimeControlCondition
                - Status: Enabled
                  EventThreshold:
                    Minutes: 15
                - !Ref 'AWS::NoValue'
          - Id: ReplicateCriticalData
            Status: Enabled
            Priority: !Ref ReplicationPriority
            Filter:
              And:
                Prefix: 'critical/'
                TagFilters:
                  - Key: Classification
                    Value: Critical
            DeleteMarkerReplication:
              Status: !Ref DeleteMarkerReplication
            Destination:
              Bucket: !Sub 'arn:aws:s3:::${ReplicaBucket}'
              StorageClass: STANDARD
              ReplicationTime: !If
                - EnableReplicationTimeControlCondition
                - Status: Enabled
                  Time:
                    Minutes: 15
                - !Ref 'AWS::NoValue'
              Metrics: !If
                - EnableReplicationTimeControlCondition
                - Status: Enabled
                  EventThreshold:
                    Minutes: 15
                - !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-source-bucket'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: DisasterRecovery
        - Key: Type
          Value: SourceBucket
        - Key: Region
          Value: !Ref 'AWS::Region'
        - Key: CostCenter
          Value: IT-DR

  # -----------------------------------------------------------------------------
  # S3 REPLICA BUCKET (Secondary Region)
  # -----------------------------------------------------------------------------
  ReplicaBucket:
    Type: AWS::S3::Bucket
    Condition: IsSecondaryRegion
    Properties:
      BucketName: !If
        - CreateReplicaBucketName
        - !Sub '${ProjectName}-replica-${AWS::AccountId}-${AWS::Region}'
        - !Ref ReplicaBucketName
      VersioningConfiguration:
        Status: !If [EnableVersioningCondition, Enabled, Suspended]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !If [EnableServerSideEncryptionCondition, 'AES256', 'aws:kms']
            BucketKeyEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: CostOptimizationRule
            Status: !If [EnableLifecycleManagementCondition, Enabled, Disabled]
            Filter:
              Prefix: 'standard/'
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: !Ref StandardDataTransitionDays
              - StorageClass: GLACIER
                TransitionInDays: !Ref GlacierTransitionDays
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-replica-bucket'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: DisasterRecovery
        - Key: Type
          Value: ReplicaBucket
        - Key: Region
          Value: !Ref 'AWS::Region'
        - Key: CostCenter
          Value: IT-DR

  # -----------------------------------------------------------------------------
  # IAM ROLE FOR CROSS-REGION REPLICATION
  # -----------------------------------------------------------------------------
  ReplicationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-s3-replication-role-${AWS::Region}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3ReplicationPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # Source bucket permissions
              - Effect: Allow
                Action:
                  - s3:GetReplicationConfiguration
                  - s3:ListBucket
                Resource: !Sub 'arn:aws:s3:::${SourceBucket}'
              # Source object permissions
              - Effect: Allow
                Action:
                  - s3:GetObjectVersionForReplication
                  - s3:GetObjectVersionAcl
                  - s3:GetObjectVersionTagging
                Resource: !Sub 'arn:aws:s3:::${SourceBucket}/*'
              # Destination bucket permissions
              - Effect: Allow
                Action:
                  - s3:ReplicateObject
                  - s3:ReplicateDelete
                  - s3:ReplicateTags
                Resource: !Sub 'arn:aws:s3:::${ReplicaBucket}/*'
              # Replication Time Control permissions (if enabled)
              - !If
                - EnableReplicationTimeControlCondition
                - Effect: Allow
                  Action:
                    - s3:GetObjectVersionForReplication
                    - s3:GetObjectVersionAcl
                    - s3:ReplicateObject
                    - s3:ReplicateDelete
                    - s3:ReplicateTags
                  Resource: 
                    - !Sub 'arn:aws:s3:::${SourceBucket}/*'
                    - !Sub 'arn:aws:s3:::${ReplicaBucket}/*'
                - !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-s3-replication-role'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: DisasterRecovery

  # -----------------------------------------------------------------------------
  # CLOUDWATCH ALARMS AND MONITORING
  # -----------------------------------------------------------------------------
  ReplicationLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: EnableCloudWatchMonitoringCondition
    Properties:
      AlarmName: !Sub '${ProjectName}-S3-Replication-Latency-Alarm'
      AlarmDescription: 'S3 replication latency exceeds threshold'
      MetricName: ReplicationLatency
      Namespace: AWS/S3
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: !Ref ReplicationLatencyThreshold
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: SourceBucket
          Value: !Ref SourceBucket
        - Name: DestinationBucket
          Value: !Ref ReplicaBucket
      AlarmActions:
        - !Ref AlertTopic
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-replication-latency-alarm'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  ReplicationFailureAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: EnableCloudWatchMonitoringCondition
    Properties:
      AlarmName: !Sub '${ProjectName}-S3-Replication-Failure-Alarm'
      AlarmDescription: 'S3 replication failures detected'
      MetricName: ReplicationFailureCount
      Namespace: AWS/S3
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: SourceBucket
          Value: !Ref SourceBucket
        - Name: DestinationBucket
          Value: !Ref ReplicaBucket
      AlarmActions:
        - !Ref AlertTopic
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-replication-failure-alarm'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # -----------------------------------------------------------------------------
  # CLOUDWATCH DASHBOARD
  # -----------------------------------------------------------------------------
  S3ReplicationDashboard:
    Type: AWS::CloudWatch::Dashboard
    Condition: EnableCloudWatchMonitoringCondition
    Properties:
      DashboardName: !Sub '${ProjectName}-S3-DR-Dashboard'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/S3", "ReplicationLatency", "SourceBucket", "${SourceBucket}", "DestinationBucket", "${ReplicaBucket}" ],
                  [ ".", "ReplicationFailureCount", ".", ".", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "S3 Replication Metrics",
                "period": 300,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/S3", "BucketSizeBytes", "BucketName", "${SourceBucket}", "StorageType", "StandardStorage" ],
                  [ "...", "${ReplicaBucket}", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Bucket Size Comparison",
                "period": 86400,
                "stat": "Average"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 24,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/S3", "NumberOfObjects", "BucketName", "${SourceBucket}", "StorageType", "AllStorageTypes" ],
                  [ "...", "${ReplicaBucket}", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Object Count Comparison",
                "period": 86400,
                "stat": "Average"
              }
            }
          ]
        }

  # -----------------------------------------------------------------------------
  # SNS TOPIC FOR NOTIFICATIONS
  # -----------------------------------------------------------------------------
  AlertTopic:
    Type: AWS::SNS::Topic
    Condition: EnableCloudWatchMonitoringCondition
    Properties:
      TopicName: !Sub '${ProjectName}-s3-dr-alerts'
      DisplayName: !Sub '${ProjectName} S3 DR Alerts'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-s3-dr-alerts'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  AlertTopicSubscription:
    Type: AWS::SNS::Subscription
    Condition: EnableCloudWatchMonitoringCondition
    Properties:
      Protocol: email
      TopicArn: !Ref AlertTopic
      Endpoint: !Ref AlertEmailAddress

  # -----------------------------------------------------------------------------
  # CLOUDTRAIL FOR AUDIT LOGGING
  # -----------------------------------------------------------------------------
  S3AuditTrail:
    Type: AWS::CloudTrail::Trail
    Condition: EnableCloudTrailLoggingCondition
    Properties:
      TrailName: !Sub '${ProjectName}-s3-dr-audit-trail'
      S3BucketName: !Ref SourceBucket
      S3KeyPrefix: 'cloudtrail-logs/'
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      EventSelectors:
        - ReadWriteType: All
          IncludeManagementEvents: true
          DataResources:
            - Type: AWS::S3::Object
              Values:
                - !Sub '${SourceBucket}/*'
                - !Sub '${ReplicaBucket}/*'
            - Type: AWS::S3::Bucket
              Values:
                - !Ref SourceBucket
                - !Ref ReplicaBucket
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-s3-dr-audit-trail'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # -----------------------------------------------------------------------------
  # LAMBDA FUNCTION FOR DISASTER RECOVERY AUTOMATION
  # -----------------------------------------------------------------------------
  DisasterRecoveryLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-disaster-recovery-automation'
      Runtime: python3.9
      Handler: index.lambda_handler
      Role: !GetAtt DisasterRecoveryLambdaRole.Arn
      Timeout: 300
      Environment:
        Variables:
          SOURCE_BUCKET: !Ref SourceBucket
          REPLICA_BUCKET: !Ref ReplicaBucket
          SNS_TOPIC_ARN: !Ref AlertTopic
          PRIMARY_REGION: !Ref PrimaryRegion
          SECONDARY_REGION: !Ref SecondaryRegion
      Code:
        ZipFile: |
          import boto3
          import json
          import os
          import logging
          
          # Set up logging
          logger = logging.getLogger()
          logger.setLevel(logging.INFO)
          
          def lambda_handler(event, context):
              """
              Lambda function for disaster recovery automation
              """
              try:
                  # Initialize AWS clients
                  s3 = boto3.client('s3')
                  sns = boto3.client('sns')
                  
                  # Get environment variables
                  source_bucket = os.environ['SOURCE_BUCKET']
                  replica_bucket = os.environ['REPLICA_BUCKET']
                  sns_topic_arn = os.environ['SNS_TOPIC_ARN']
                  primary_region = os.environ['PRIMARY_REGION']
                  secondary_region = os.environ['SECONDARY_REGION']
                  
                  # Check bucket accessibility
                  source_accessible = check_bucket_accessibility(s3, source_bucket)
                  replica_accessible = check_bucket_accessibility(s3, replica_bucket)
                  
                  # Generate health report
                  health_report = {
                      'source_bucket': source_bucket,
                      'replica_bucket': replica_bucket,
                      'source_accessible': source_accessible,
                      'replica_accessible': replica_accessible,
                      'timestamp': context.aws_request_id
                  }
                  
                  # Send notification if there are issues
                  if not source_accessible or not replica_accessible:
                      send_alert(sns, sns_topic_arn, health_report)
                  
                  return {
                      'statusCode': 200,
                      'body': json.dumps(health_report)
                  }
                  
              except Exception as e:
                  logger.error(f"Error in disaster recovery check: {str(e)}")
                  return {
                      'statusCode': 500,
                      'body': json.dumps({'error': str(e)})
                  }
          
          def check_bucket_accessibility(s3, bucket_name):
              """
              Check if S3 bucket is accessible
              """
              try:
                  s3.head_bucket(Bucket=bucket_name)
                  return True
              except Exception as e:
                  logger.error(f"Bucket {bucket_name} not accessible: {str(e)}")
                  return False
          
          def send_alert(sns, topic_arn, health_report):
              """
              Send SNS alert for DR issues
              """
              try:
                  message = f"""
                  Disaster Recovery Alert
                  
                  Source Bucket: {health_report['source_bucket']}
                  Source Accessible: {health_report['source_accessible']}
                  
                  Replica Bucket: {health_report['replica_bucket']}
                  Replica Accessible: {health_report['replica_accessible']}
                  
                  Timestamp: {health_report['timestamp']}
                  """
                  
                  sns.publish(
                      TopicArn=topic_arn,
                      Message=message,
                      Subject='S3 Disaster Recovery Alert'
                  )
                  
              except Exception as e:
                  logger.error(f"Error sending SNS alert: {str(e)}")
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-disaster-recovery-automation'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  DisasterRecoveryLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-disaster-recovery-lambda-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DisasterRecoveryLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:HeadBucket
                  - s3:ListBucket
                  - s3:GetBucketLocation
                Resource:
                  - !Sub 'arn:aws:s3:::${SourceBucket}'
                  - !Sub 'arn:aws:s3:::${ReplicaBucket}'
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref AlertTopic
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'

  # -----------------------------------------------------------------------------
  # EVENTBRIDGE RULE FOR PERIODIC HEALTH CHECKS
  # -----------------------------------------------------------------------------
  DisasterRecoverySchedule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub '${ProjectName}-disaster-recovery-schedule'
      Description: 'Schedule for periodic disaster recovery health checks'
      ScheduleExpression: 'rate(5 minutes)'
      State: ENABLED
      Targets:
        - Arn: !GetAtt DisasterRecoveryLambda.Arn
          Id: DisasterRecoveryLambdaTarget

  DisasterRecoveryLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DisasterRecoveryLambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt DisasterRecoverySchedule.Arn

# =============================================================================
# OUTPUTS
# =============================================================================
Outputs:
  SourceBucketName:
    Description: Name of the source S3 bucket
    Value: !Ref SourceBucket
    Export:
      Name: !Sub '${AWS::StackName}-SourceBucketName'

  SourceBucketArn:
    Description: ARN of the source S3 bucket
    Value: !GetAtt SourceBucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-SourceBucketArn'

  ReplicaBucketName:
    Description: Name of the replica S3 bucket
    Value: !Ref ReplicaBucket
    Export:
      Name: !Sub '${AWS::StackName}-ReplicaBucketName'

  ReplicaBucketArn:
    Description: ARN of the replica S3 bucket
    Value: !GetAtt ReplicaBucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ReplicaBucketArn'

  ReplicationRoleArn:
    Description: ARN of the IAM role for cross-region replication
    Value: !GetAtt ReplicationRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ReplicationRoleArn'

  CloudWatchDashboardURL:
    Condition: EnableCloudWatchMonitoringCondition
    Description: URL to the CloudWatch dashboard for monitoring
    Value: !Sub 'https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${ProjectName}-S3-DR-Dashboard'

  AlertTopicArn:
    Condition: EnableCloudWatchMonitoringCondition
    Description: ARN of the SNS topic for alerts
    Value: !Ref AlertTopic
    Export:
      Name: !Sub '${AWS::StackName}-AlertTopicArn'

  DisasterRecoveryLambdaArn:
    Description: ARN of the disaster recovery Lambda function
    Value: !GetAtt DisasterRecoveryLambda.Arn
    Export:
      Name: !Sub '${AWS::StackName}-DisasterRecoveryLambdaArn'

  CloudTrailArn:
    Condition: EnableCloudTrailLoggingCondition
    Description: ARN of the CloudTrail for audit logging
    Value: !GetAtt S3AuditTrail.Arn
    Export:
      Name: !Sub '${AWS::StackName}-CloudTrailArn'

  DeploymentRegion:
    Description: Region where this stack is deployed
    Value: !Ref 'AWS::Region'
    Export:
      Name: !Sub '${AWS::StackName}-DeploymentRegion'

  PrimaryRegion:
    Description: Primary region for disaster recovery
    Value: !Ref PrimaryRegion
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryRegion'

  SecondaryRegion:
    Description: Secondary region for disaster recovery
    Value: !Ref SecondaryRegion
    Export:
      Name: !Sub '${AWS::StackName}-SecondaryRegion'

  EstimatedMonthlyCost:
    Description: Estimated monthly cost for 1TB of data with replication
    Value: 'Approximately $50-100 USD for 1TB including storage, replication, and monitoring'

  DisasterRecoveryRTO:
    Description: Estimated Recovery Time Objective
    Value: '5-15 minutes (depending on replication latency and failover procedures)'

  DisasterRecoveryRPO:
    Description: Estimated Recovery Point Objective
    Value: '15 minutes (standard replication) or guaranteed with RTC enabled'

  ReplicationStatus:
    Description: Current replication configuration status
    Value: 'Cross-region replication enabled with monitoring and alerting'

  SecurityFeatures:
    Description: Implemented security features
    Value: 'Server-side encryption, bucket versioning, public access blocking, IAM least privilege, audit logging'

  ComplianceFeatures:
    Description: Compliance and governance features
    Value: 'CloudTrail audit logging, lifecycle policies, cost optimization, monitoring dashboards'