# Terraform Variables Configuration Example
# Copy this file to terraform.tfvars and customize the values for your deployment

#------------------------------------------------------------------------------
# BASIC CONFIGURATION
#------------------------------------------------------------------------------

# Project and environment settings
project_name = "retail-events"
environment  = "dev"
region      = "us-east-1"

#------------------------------------------------------------------------------
# KINESIS DATA STREAM CONFIGURATION
#------------------------------------------------------------------------------

# Number of shards (impacts throughput and cost)
# 1 shard = 1MB/sec write, 2MB/sec read capacity
kinesis_shard_count = 1

# Data retention period in hours (24-8760)
kinesis_retention_period = 24

# Shard-level metrics to enable (impacts cost)
kinesis_shard_level_metrics = [
  "IncomingRecords",
  "OutgoingRecords"
]

#------------------------------------------------------------------------------
# LAMBDA FUNCTION CONFIGURATION
#------------------------------------------------------------------------------

# Memory allocation (128-10240 MB)
# Higher memory = faster processing but higher cost
lambda_memory_size = 256

# Function timeout in seconds (1-900)
lambda_timeout = 120

# Reserved concurrency (-1 for unreserved)
# Set to positive number to limit concurrent executions
lambda_reserved_concurrency = -1

# Event source mapping configuration
lambda_batch_size                            = 100
lambda_maximum_batching_window_in_seconds    = 5
lambda_starting_position                     = "LATEST"

#------------------------------------------------------------------------------
# DYNAMODB CONFIGURATION
#------------------------------------------------------------------------------

# Billing mode: PAY_PER_REQUEST (variable cost) or PROVISIONED (fixed cost)
dynamodb_billing_mode = "PAY_PER_REQUEST"

# Capacity settings (only used with PROVISIONED billing mode)
dynamodb_read_capacity  = 5
dynamodb_write_capacity = 5

# Backup and security settings
dynamodb_point_in_time_recovery_enabled = true
dynamodb_server_side_encryption_enabled = true

#------------------------------------------------------------------------------
# SQS DEAD LETTER QUEUE CONFIGURATION
#------------------------------------------------------------------------------

# Message retention period in seconds (60-1209600)
sqs_message_retention_seconds = 1209600  # 14 days

# Visibility timeout in seconds
sqs_visibility_timeout_seconds = 30

#------------------------------------------------------------------------------
# CLOUDWATCH MONITORING CONFIGURATION
#------------------------------------------------------------------------------

# CloudWatch alarm settings
cloudwatch_alarm_threshold         = 10
cloudwatch_alarm_evaluation_periods = 1
cloudwatch_alarm_period_seconds    = 60

#------------------------------------------------------------------------------
# NOTIFICATION CONFIGURATION (OPTIONAL)
#------------------------------------------------------------------------------

# Email address for alarm notifications (leave empty to disable)
sns_email_endpoint = ""
# sns_email_endpoint = "alerts@your-company.com"

#------------------------------------------------------------------------------
# ADDITIONAL TAGS
#------------------------------------------------------------------------------

# Additional tags to apply to all resources
additional_tags = {
  Owner       = "data-engineering-team"
  CostCenter  = "engineering"
  Compliance  = "gdpr"
}

#------------------------------------------------------------------------------
# EXAMPLE CONFIGURATIONS FOR DIFFERENT SCENARIOS
#------------------------------------------------------------------------------

# HIGH-THROUGHPUT PRODUCTION CONFIGURATION
# Uncomment and modify for high-volume production workloads
#
# project_name                = "retail-events"
# environment                = "prod"
# kinesis_shard_count        = 5
# lambda_memory_size         = 512
# lambda_batch_size          = 500
# lambda_reserved_concurrency = 100
# dynamodb_billing_mode      = "PROVISIONED"
# dynamodb_read_capacity     = 100
# dynamodb_write_capacity    = 100
# sns_email_endpoint         = "production-alerts@company.com"

# COST-OPTIMIZED DEVELOPMENT CONFIGURATION
# Uncomment and modify for cost-conscious development environments
#
# project_name                = "retail-events"
# environment                = "dev"
# kinesis_shard_count        = 1
# kinesis_retention_period   = 24
# lambda_memory_size         = 128
# lambda_timeout             = 60
# dynamodb_billing_mode      = "PAY_PER_REQUEST"
# cloudwatch_alarm_threshold = 20

# TESTING CONFIGURATION
# Uncomment and modify for testing environments
#
# project_name                = "retail-events"
# environment                = "test"
# kinesis_shard_count        = 1
# lambda_memory_size         = 256
# lambda_batch_size          = 50
# lambda_starting_position   = "TRIM_HORIZON"  # Process all data from beginning
# sns_email_endpoint         = "test-alerts@company.com"