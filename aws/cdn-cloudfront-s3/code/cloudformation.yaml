AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for Content Delivery Networks with CloudFront S3'

# Template Metadata
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Basic Configuration"
        Parameters:
          - ProjectName
          - Environment
      - Label:
          default: "S3 Configuration"
        Parameters:
          - ContentBucketName
          - LogsBucketName
          - EnableS3Transfer
      - Label:
          default: "CloudFront Configuration"
        Parameters:
          - PriceClass
          - HttpVersion
          - EnableIPv6
          - DefaultTTL
          - MaxTTL
          - MinTTL
          - CompressionEnabled
      - Label:
          default: "Security Configuration"
        Parameters:
          - ViewerProtocolPolicy
          - MinimumProtocolVersion
          - EnableGeoRestriction
          - GeoRestrictionType
          - GeoRestrictionCountries
      - Label:
          default: "Monitoring Configuration"
        Parameters:
          - EnableLogging
          - EnableRealtimeMetrics
          - CreateCloudWatchAlarms
          - ErrorRateThreshold
          - LatencyThreshold
    ParameterLabels:
      ProjectName:
        default: "Project Name"
      Environment:
        default: "Environment"
      ContentBucketName:
        default: "Content Bucket Name"
      LogsBucketName:
        default: "Logs Bucket Name"
      PriceClass:
        default: "CloudFront Price Class"
      ViewerProtocolPolicy:
        default: "Viewer Protocol Policy"

# Parameters for customization
Parameters:
  ProjectName:
    Type: String
    Description: Name of the project for resource tagging
    Default: "cdn-project"
    MinLength: 3
    MaxLength: 30
    AllowedPattern: '^[a-zA-Z0-9-]+$'
    ConstraintDescription: Must contain only alphanumeric characters and hyphens

  Environment:
    Type: String
    Description: Environment name for resource tagging
    Default: "dev"
    AllowedValues:
      - dev
      - staging
      - prod
    ConstraintDescription: Must be one of dev, staging, or prod

  ContentBucketName:
    Type: String
    Description: Name for the S3 bucket storing content (leave empty for auto-generated)
    Default: ""
    AllowedPattern: '^$|^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$'
    ConstraintDescription: Must be empty or a valid S3 bucket name

  LogsBucketName:
    Type: String
    Description: Name for the S3 bucket storing CloudFront logs (leave empty for auto-generated)
    Default: ""
    AllowedPattern: '^$|^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$'
    ConstraintDescription: Must be empty or a valid S3 bucket name

  EnableS3Transfer:
    Type: String
    Description: Enable S3 Transfer Acceleration for faster uploads
    Default: "false"
    AllowedValues:
      - "true"
      - "false"

  PriceClass:
    Type: String
    Description: CloudFront price class (controls which edge locations are used)
    Default: "PriceClass_100"
    AllowedValues:
      - "PriceClass_All"
      - "PriceClass_200"
      - "PriceClass_100"
    ConstraintDescription: Must be a valid CloudFront price class

  HttpVersion:
    Type: String
    Description: HTTP version supported by CloudFront
    Default: "http2"
    AllowedValues:
      - "http1.1"
      - "http2"
      - "http2and3"

  EnableIPv6:
    Type: String
    Description: Enable IPv6 support for CloudFront
    Default: "true"
    AllowedValues:
      - "true"
      - "false"

  DefaultTTL:
    Type: Number
    Description: Default TTL for cached objects (in seconds)
    Default: 86400
    MinValue: 0
    MaxValue: 31536000

  MaxTTL:
    Type: Number
    Description: Maximum TTL for cached objects (in seconds)
    Default: 31536000
    MinValue: 0
    MaxValue: 31536000

  MinTTL:
    Type: Number
    Description: Minimum TTL for cached objects (in seconds)
    Default: 0
    MinValue: 0
    MaxValue: 31536000

  CompressionEnabled:
    Type: String
    Description: Enable automatic compression for CloudFront
    Default: "true"
    AllowedValues:
      - "true"
      - "false"

  ViewerProtocolPolicy:
    Type: String
    Description: Protocol policy for viewer requests
    Default: "redirect-to-https"
    AllowedValues:
      - "allow-all"
      - "https-only"
      - "redirect-to-https"

  MinimumProtocolVersion:
    Type: String
    Description: Minimum SSL/TLS protocol version
    Default: "TLSv1.2_2021"
    AllowedValues:
      - "TLSv1"
      - "TLSv1.1_2016"
      - "TLSv1.2_2018"
      - "TLSv1.2_2019"
      - "TLSv1.2_2021"

  EnableGeoRestriction:
    Type: String
    Description: Enable geographic restriction for content
    Default: "false"
    AllowedValues:
      - "true"
      - "false"

  GeoRestrictionType:
    Type: String
    Description: Type of geographic restriction
    Default: "none"
    AllowedValues:
      - "none"
      - "whitelist"
      - "blacklist"

  GeoRestrictionCountries:
    Type: CommaDelimitedList
    Description: List of country codes for geographic restriction (e.g., US,CA,GB)
    Default: ""

  EnableLogging:
    Type: String
    Description: Enable CloudFront access logging
    Default: "true"
    AllowedValues:
      - "true"
      - "false"

  EnableRealtimeMetrics:
    Type: String
    Description: Enable CloudFront real-time metrics
    Default: "false"
    AllowedValues:
      - "true"
      - "false"

  CreateCloudWatchAlarms:
    Type: String
    Description: Create CloudWatch alarms for monitoring
    Default: "true"
    AllowedValues:
      - "true"
      - "false"

  ErrorRateThreshold:
    Type: Number
    Description: Threshold for 4xx error rate alarm (percentage)
    Default: 5
    MinValue: 1
    MaxValue: 100

  LatencyThreshold:
    Type: Number
    Description: Threshold for origin latency alarm (milliseconds)
    Default: 1000
    MinValue: 100
    MaxValue: 10000

# Conditions for conditional resource creation
Conditions:
  CreateContentBucket: !Equals [!Ref ContentBucketName, ""]
  CreateLogsBucket: !Equals [!Ref LogsBucketName, ""]
  EnableS3TransferAcceleration: !Equals [!Ref EnableS3Transfer, "true"]
  EnableLoggingCondition: !Equals [!Ref EnableLogging, "true"]
  EnableRealtimeMetricsCondition: !Equals [!Ref EnableRealtimeMetrics, "true"]
  CreateAlarmsCondition: !Equals [!Ref CreateCloudWatchAlarms, "true"]
  EnableGeoRestrictionCondition: !Equals [!Ref EnableGeoRestriction, "true"]
  HasGeoRestrictionCountries: !Not [!Equals [!Join ["", !Ref GeoRestrictionCountries], ""]]
  IsProduction: !Equals [!Ref Environment, "prod"]

# Resources to be created
Resources:
  # S3 Bucket for content storage
  ContentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !If 
        - CreateContentBucket
        - !Sub "${ProjectName}-content-${Environment}-${AWS::AccountId}"
        - !Ref ContentBucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: !If [IsProduction, "Enabled", "Suspended"]
      AccelerateConfiguration:
        AccelerationStatus: !If [EnableS3TransferAcceleration, "Enabled", "Suspended"]
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-content-bucket-${Environment}"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: ManagedBy
          Value: CloudFormation

  # S3 Bucket for CloudFront logs
  LogsBucket:
    Type: AWS::S3::Bucket
    Condition: EnableLoggingCondition
    Properties:
      BucketName: !If 
        - CreateLogsBucket
        - !Sub "${ProjectName}-logs-${Environment}-${AWS::AccountId}"
        - !Ref LogsBucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldLogs
            Status: Enabled
            ExpirationInDays: 90
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
              - StorageClass: GLACIER
                TransitionInDays: 60
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-logs-bucket-${Environment}"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: ManagedBy
          Value: CloudFormation

  # Origin Access Control for secure S3 access
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "${ProjectName}-oac-${Environment}"
        Description: !Sub "Origin Access Control for ${ProjectName} CloudFront distribution"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub "CDN for ${ProjectName} ${Environment} environment"
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: !Ref HttpVersion
        IPV6Enabled: !Ref EnableIPv6
        PriceClass: !Ref PriceClass
        
        # Origins configuration
        Origins:
          - Id: !Sub "${ProjectName}-s3-origin"
            DomainName: !GetAtt ContentBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !Ref OriginAccessControl
            
        # Default cache behavior
        DefaultCacheBehavior:
          TargetOriginId: !Sub "${ProjectName}-s3-origin"
          ViewerProtocolPolicy: !Ref ViewerProtocolPolicy
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          DefaultTTL: !Ref DefaultTTL
          MaxTTL: !Ref MaxTTL
          MinTTL: !Ref MinTTL
          Compress: !Ref CompressionEnabled
          RealtimeLogConfigArn: !If
            - EnableRealtimeMetricsCondition
            - !GetAtt RealtimeLogConfig.Arn
            - !Ref AWS::NoValue

        # Additional cache behaviors for different content types
        CacheBehaviors:
          # CSS files - longer cache duration
          - PathPattern: "*.css"
            TargetOriginId: !Sub "${ProjectName}-s3-origin"
            ViewerProtocolPolicy: !Ref ViewerProtocolPolicy
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            DefaultTTL: 2592000  # 30 days
            MaxTTL: 31536000     # 1 year
            MinTTL: 0
            Compress: true
            
          # JavaScript files - longer cache duration
          - PathPattern: "*.js"
            TargetOriginId: !Sub "${ProjectName}-s3-origin"
            ViewerProtocolPolicy: !Ref ViewerProtocolPolicy
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            DefaultTTL: 2592000  # 30 days
            MaxTTL: 31536000     # 1 year
            MinTTL: 0
            Compress: true
            
          # Images - very long cache duration
          - PathPattern: "*.jpg"
            TargetOriginId: !Sub "${ProjectName}-s3-origin"
            ViewerProtocolPolicy: !Ref ViewerProtocolPolicy
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            DefaultTTL: 31536000  # 1 year
            MaxTTL: 31536000      # 1 year
            MinTTL: 0
            Compress: false
            
          # API responses - shorter cache duration
          - PathPattern: "/api/*"
            TargetOriginId: !Sub "${ProjectName}-s3-origin"
            ViewerProtocolPolicy: !Ref ViewerProtocolPolicy
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - GET
              - HEAD
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: none
            DefaultTTL: 3600     # 1 hour
            MaxTTL: 86400        # 1 day
            MinTTL: 0
            Compress: true

        # Custom error responses
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300

        # Logging configuration
        Logging: !If
          - EnableLoggingCondition
          - Bucket: !GetAtt LogsBucket.DomainName
            IncludeCookies: false
            Prefix: "cloudfront-logs/"
          - !Ref AWS::NoValue

        # Viewer certificate configuration
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
          MinimumProtocolVersion: !Ref MinimumProtocolVersion

        # Geographic restrictions
        Restrictions:
          GeoRestriction:
            RestrictionType: !If
              - EnableGeoRestrictionCondition
              - !Ref GeoRestrictionType
              - "none"
            Locations: !If
              - HasGeoRestrictionCountries
              - !Ref GeoRestrictionCountries
              - !Ref AWS::NoValue

      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-distribution-${Environment}"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: ManagedBy
          Value: CloudFormation

  # Real-time log configuration for detailed monitoring
  RealtimeLogConfig:
    Type: AWS::CloudFront::RealtimeLogConfig
    Condition: EnableRealtimeMetricsCondition
    Properties:
      Name: !Sub "${ProjectName}-realtime-logs-${Environment}"
      EndPoints:
        - StreamType: Kinesis
          KinesisStreamConfig:
            RoleArn: !GetAtt RealtimeLogRole.Arn
            StreamArn: !GetAtt RealtimeLogStream.Arn
      Fields:
        - timestamp
        - c-ip
        - sc-status
        - cs-method
        - cs-uri-stem
        - cs-bytes
        - sc-bytes
        - time-taken
        - cs-protocol-version
        - c-country
        - cs-referer
        - cs-user-agent
        - x-edge-location
        - x-edge-result-type
        - x-edge-response-result-type

  # Kinesis Stream for real-time logs
  RealtimeLogStream:
    Type: AWS::Kinesis::Stream
    Condition: EnableRealtimeMetricsCondition
    Properties:
      Name: !Sub "${ProjectName}-cloudfront-realtime-logs-${Environment}"
      ShardCount: 1
      StreamEncryption:
        EncryptionType: KMS
        KeyId: alias/aws/kinesis
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-realtime-logs-stream-${Environment}"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # IAM Role for real-time logs
  RealtimeLogRole:
    Type: AWS::IAM::Role
    Condition: EnableRealtimeMetricsCondition
    Properties:
      RoleName: !Sub "${ProjectName}-cloudfront-realtime-logs-role-${Environment}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: RealtimeLogPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - kinesis:PutRecord
                  - kinesis:PutRecords
                Resource: !GetAtt RealtimeLogStream.Arn
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-realtime-logs-role-${Environment}"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # S3 Bucket Policy for Origin Access Control
  ContentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ContentBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "${ContentBucket.Arn}/*"
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"

  # CloudWatch Alarms for monitoring
  HighErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateAlarmsCondition
    Properties:
      AlarmName: !Sub "${ProjectName}-CloudFront-HighErrorRate-${Environment}"
      AlarmDescription: "High error rate for CloudFront distribution"
      MetricName: 4xxErrorRate
      Namespace: AWS/CloudFront
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: !Ref ErrorRateThreshold
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-high-error-rate-alarm-${Environment}"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  HighOriginLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateAlarmsCondition
    Properties:
      AlarmName: !Sub "${ProjectName}-CloudFront-HighOriginLatency-${Environment}"
      AlarmDescription: "High origin latency for CloudFront distribution"
      MetricName: OriginLatency
      Namespace: AWS/CloudFront
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: !Ref LatencyThreshold
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DistributionId
          Value: !Ref CloudFrontDistribution
      TreatMissingData: notBreaching
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-high-latency-alarm-${Environment}"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # CloudWatch Dashboard for monitoring
  MonitoringDashboard:
    Type: AWS::CloudWatch::Dashboard
    Condition: CreateAlarmsCondition
    Properties:
      DashboardName: !Sub "${ProjectName}-CloudFront-Dashboard-${Environment}"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/CloudFront", "Requests", "DistributionId", "${CloudFrontDistribution}" ],
                  [ ".", "BytesDownloaded", ".", "." ],
                  [ ".", "4xxErrorRate", ".", "." ],
                  [ ".", "5xxErrorRate", ".", "." ]
                ],
                "period": 300,
                "stat": "Sum",
                "region": "us-east-1",
                "title": "CloudFront Performance Metrics",
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/CloudFront", "CacheHitRate", "DistributionId", "${CloudFrontDistribution}" ],
                  [ ".", "OriginLatency", ".", "." ]
                ],
                "period": 300,
                "stat": "Average",
                "region": "us-east-1",
                "title": "Cache Performance",
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                }
              }
            }
          ]
        }

# Outputs for reference and integration
Outputs:
  ContentBucketName:
    Description: Name of the S3 bucket for content storage
    Value: !Ref ContentBucket
    Export:
      Name: !Sub "${AWS::StackName}-ContentBucket"

  ContentBucketArn:
    Description: ARN of the S3 bucket for content storage
    Value: !GetAtt ContentBucket.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ContentBucketArn"

  LogsBucketName:
    Description: Name of the S3 bucket for CloudFront logs
    Value: !If [EnableLoggingCondition, !Ref LogsBucket, "Logging disabled"]
    Export:
      Name: !Sub "${AWS::StackName}-LogsBucket"

  CloudFrontDistributionId:
    Description: ID of the CloudFront distribution
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub "${AWS::StackName}-DistributionId"

  CloudFrontDistributionDomainName:
    Description: Domain name of the CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub "${AWS::StackName}-DistributionDomainName"

  CloudFrontDistributionURL:
    Description: URL of the CloudFront distribution
    Value: !Sub "https://${CloudFrontDistribution.DomainName}"
    Export:
      Name: !Sub "${AWS::StackName}-DistributionURL"

  OriginAccessControlId:
    Description: ID of the Origin Access Control
    Value: !Ref OriginAccessControl
    Export:
      Name: !Sub "${AWS::StackName}-OriginAccessControlId"

  RealtimeLogConfigArn:
    Description: ARN of the real-time log configuration
    Value: !If [EnableRealtimeMetricsCondition, !GetAtt RealtimeLogConfig.Arn, "Real-time metrics disabled"]
    Export:
      Name: !Sub "${AWS::StackName}-RealtimeLogConfigArn"

  MonitoringDashboardURL:
    Description: URL of the CloudWatch monitoring dashboard
    Value: !If 
      - CreateAlarmsCondition
      - !Sub "https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${ProjectName}-CloudFront-Dashboard-${Environment}"
      - "CloudWatch alarms disabled"
    Export:
      Name: !Sub "${AWS::StackName}-DashboardURL"

  # S3 Console URLs for easy access
  ContentBucketConsoleURL:
    Description: AWS Console URL for the content bucket
    Value: !Sub "https://s3.console.aws.amazon.com/s3/buckets/${ContentBucket}"
    Export:
      Name: !Sub "${AWS::StackName}-ContentBucketConsoleURL"

  LogsBucketConsoleURL:
    Description: AWS Console URL for the logs bucket
    Value: !If 
      - EnableLoggingCondition
      - !Sub "https://s3.console.aws.amazon.com/s3/buckets/${LogsBucket}"
      - "Logging disabled"
    Export:
      Name: !Sub "${AWS::StackName}-LogsBucketConsoleURL"

  # CloudFront Console URL
  CloudFrontConsoleURL:
    Description: AWS Console URL for the CloudFront distribution
    Value: !Sub "https://console.aws.amazon.com/cloudfront/home?region=${AWS::Region}#distribution-settings:${CloudFrontDistribution}"
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontConsoleURL"

  # Deployment information
  StackName:
    Description: Name of the CloudFormation stack
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub "${AWS::StackName}-StackName"

  DeploymentRegion:
    Description: AWS Region where the stack is deployed
    Value: !Ref AWS::Region
    Export:
      Name: !Sub "${AWS::StackName}-DeploymentRegion"

  ProjectName:
    Description: Project name used for resource naming
    Value: !Ref ProjectName
    Export:
      Name: !Sub "${AWS::StackName}-ProjectName"

  Environment:
    Description: Environment name used for resource naming
    Value: !Ref Environment
    Export:
      Name: !Sub "${AWS::StackName}-Environment"