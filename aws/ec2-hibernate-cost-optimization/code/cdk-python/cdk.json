{
  "app": "python3 app.py",
  "watch": {
    "include": [
      "**"
    ],
    "exclude": [
      "README.md",
      "cdk*.json",
      "requirements*.txt",
      "source.bat",
      "**/__pycache__",
      "**/.venv"
    ]
  },
  "context": {
    "@aws-cdk/aws-lambda:recognizeLayerVersion": true,
    "@aws-cdk/core:checkSecretUsage": true,
    "@aws-cdk/core:target-partitions": [
      "aws",
      "aws-cn"
    ],
    "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": true,
    "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": true,
    "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": true,
    "@aws-cdk/aws-iam:minimizePolicies": true,
    "@aws-cdk/core:validateSnapshotRemovalPolicy": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": true,
    "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
    "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
    "@aws-cdk/aws-apigateway:disableCloudWatchRole": true,
    "@aws-cdk/core:enablePartitionLiterals": true,
    "@aws-cdk/aws-events:eventsTargetQueueSameAccount": true,
    "@aws-cdk/aws-iam:standardizedServicePrincipals": true,
    "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": true,
    "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": true,
    "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
    "@aws-cdk/aws-route53-patters:useCertificate": true,
    "@aws-cdk/customresources:installLatestAwsSdkDefault": false,
    "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": true,
    "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": true,
    "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": true,
    "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": true,
    "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": true,
    "@aws-cdk/aws-redshift:columnId": true,
    "@aws-cdk/aws-stepfunctions-tasks:enableLogging": true,
    "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": true,
    "@aws-cdk/aws-apigateway:requestValidatorUniqueId": true,
    "@aws-cdk/aws-kms:aliasNameRef": true,
    "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": true,
    "@aws-cdk/core:includePrefixInUniqueNameGeneration": true,
    "@aws-cdk/aws-efs:denyAnonymousAccess": true,
    "@aws-cdk/aws-opensearchservice:enableLogging": true,
    "@aws-cdk/aws-nordicapis-routes:fitInternalDomains": true,
    "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": true,
    "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": true,
    "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": true,
    "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": true,
    "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": true,
    "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": true,
    "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": true,
    "@aws-cdk/aws-eks:nodegroupNameAttribute": true,
    "@aws-cdk/aws-ec2:attributeImdsv2TokensRequired": true,
    "@aws-cdk/aws-eks:defaultCapacityType": true,
    "@aws-cdk/aws-eks:inferClusterVersionForNodegroup": true,
    "@aws-cdk/aws-lambda:useEcrRepoChecksumValidator": true,
    "@aws-cdk/aws-s3:keepNotificationInImportedBucket": false,
    "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": true,
    "@aws-cdk/aws-ec2:ec2SumTDefaultToPrivateSubnets": true,
    "@aws-cdk/aws-autoscaling:defaultRollingUpdatePolicy": true,
    "@aws-cdk/aws-stepfunctions-tasks:useCurrentExecutionRoleForEcsTasksInRunTask": true,
    "@aws-cdk/aws-events:eventsTargetQueueSameAccountFix": true,
    "@aws-cdk/aws-ec2:ebsDefaultEncryption": true,
    "@aws-cdk/aws-batch:unfilteredTaskContainerPropertiesOverride": true,
    "@aws-cdk/aws-lambda:addDiscountServiceIdAttribute": true,
    "@aws-cdk/aws-cloudformation:crossRegionStackNotificationArns": true,
    "@aws-cdk/aws-ec2:restrictDefaultSecurityGroupRules": true,
    "@aws-cdk/aws-lambda:throwOnRequestReplyLimit": true,
    "@aws-cdk/aws-stepfunctions-tasks:enableOmitServiceNameInLambdaArn": true,
    "@aws-cdk/aws-apigateway:usingIdentitySourceHttpHeader": true,
    "@aws-cdk/aws-eks:managedNodeGroupInstanceTypes": true,
    "@aws-cdk/aws-events:eventsTargetQueueKeyPairProperty": true,
    "@aws-cdk/aws-ec2:ebsDefaultEncryptionCustomerManagedKey": true,
    "@aws-cdk/aws-lambda:httpApiFunctionResponseTypeUsed": true,
    "@aws-cdk/aws-ec2:instanceRequireImdsv2": true,
    "@aws-cdk/aws-lambda:addArchitectureToLambdaFunction": true,
    "@aws-cdk/aws-eks:spotInterruptionHandler": true,
    "@aws-cdk/aws-ec2:ebsDefaultEncryptionCustomerManagedKeySupport": true,
    "@aws-cdk/aws-lambda:usingNodeArrow": true,
    "@aws-cdk/aws-eks:terraformCompatibilityMode": true,
    "@aws-cdk/aws-lambda:requireNodeJsVersionNumber": true,
    "@aws-cdk/aws-lambda:providedRuntime": true,
    "@aws-cdk/aws-lambda:enableDeployTimeVersioning": true,
    "@aws-cdk/aws-ec2:ebsDefaultEncryptionSupport": true,
    "@aws-cdk/aws-lambda:ignoreArchitectureOption": true,
    "@aws-cdk/aws-ec2:ebsDefaultEncryption": true,
    "@aws-cdk/aws-stepfunctions-tasks:useEcsTaskRole": true,
    "@aws-cdk/aws-eks:waitForClusterReadyTimeout": true,
    "@aws-cdk/aws-batch:elbv2LoadBalancerTargetType": true,
    "notification_email": "admin@example.com",
    "stack_name": "EC2HibernationCostOptimization"
  },
  "lookups": [
    "ec2:describe-availability-zones:account=${AWS::AccountId}:region=${AWS::Region}",
    "ec2:describe-vpcs:account=${AWS::AccountId}:region=${AWS::Region}",
    "ec2:describe-vpcs:account=${AWS::AccountId}:region=${AWS::Region}:filter.group-id=sg-*",
    "ec2:describe-images:account=${AWS::AccountId}:region=${AWS::Region}:filter.name=amzn2-ami-hvm-*",
    "route53:list-hosted-zones:account=${AWS::AccountId}:region=${AWS::Region}",
    "ssm:get-parameters:account=${AWS::AccountId}:region=${AWS::Region}:parameterNames=/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  ],
  "build": {
    "commands": [
      "pip install -r requirements.txt"
    ]
  },
  "deploy": {
    "requireApproval": "never"
  }
}