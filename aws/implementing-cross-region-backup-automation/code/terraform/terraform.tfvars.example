# ==============================================================================
# Multi-Region Backup Strategies - Example Configuration
# ==============================================================================
# Copy this file to terraform.tfvars and customize the values for your
# environment. This example shows common configuration patterns for different
# organizational requirements.
# ==============================================================================

# ==============================================================================
# Organization and Environment Configuration
# ==============================================================================

# Organization name for resource naming and tagging
organization_name = "mycompany"

# Environment for this deployment (production, staging, development, test)
environment = "production"

# Project name for resource organization
project_name = "multi-region-backup"

# ==============================================================================
# Multi-Region Configuration
# ==============================================================================

# Primary AWS region for backup operations
primary_region = "us-east-1"

# Secondary AWS region for cross-region backup copies
secondary_region = "us-west-2"

# Tertiary AWS region for long-term archival
tertiary_region = "eu-west-1"

# ==============================================================================
# Backup Schedule Configuration
# ==============================================================================

# Daily backup schedule (UTC timezone)
# Default: Daily at 2:00 AM UTC
daily_backup_schedule = "cron(0 2 * * ? *)"

# Weekly backup schedule for long-term retention
# Default: Weekly on Sunday at 3:00 AM UTC
weekly_backup_schedule = "cron(0 3 ? * SUN *)"

# Backup window configuration (in minutes)
backup_start_window      = 480   # 8 hours to start backup
backup_completion_window = 10080 # 7 days to complete backup

# Timezone for backup schedules
backup_window_timezone = "UTC"

# ==============================================================================
# Backup Retention and Lifecycle Configuration
# ==============================================================================

# Daily backup retention and lifecycle
daily_retention_days   = 365  # 1 year retention
daily_cold_storage_days = 30  # Move to cold storage after 30 days

# Weekly backup retention and lifecycle  
weekly_retention_days   = 2555 # 7 years retention (compliance requirement)
weekly_cold_storage_days = 90  # Move to cold storage after 90 days

# ==============================================================================
# Security and Encryption Configuration
# ==============================================================================

# KMS key deletion window (7-30 days)
kms_deletion_window = 7

# Enable backup vault lock for compliance (immutable backups)
enable_backup_vault_lock = false

# Vault lock retention periods (only used if vault lock enabled)
vault_lock_min_retention_days = 365
vault_lock_max_retention_days = 36500

# ==============================================================================
# Resource Selection Configuration
# ==============================================================================

# Tags required for resources to be included in backups
backup_resource_tags = {
  Environment   = "production"
  BackupEnabled = "true"
  CriticalData  = "true"
}

# Tags that exclude resources from backups
exclude_resource_tags = {
  BackupEnabled = "false"
  Environment   = "test"
  Temporary     = "true"
}

# Specific resource types to backup (empty list = all supported types)
# Options: ["EC2", "EBS", "RDS", "DynamoDB", "EFS", "FSx", "Storage Gateway", "Redshift", "Neptune"]
resource_types_to_backup = []

# ==============================================================================
# Notification Configuration
# ==============================================================================

# Email address for backup notifications (optional)
notification_email = "backup-admin@mycompany.com"

# Enable Slack notifications
enable_slack_notifications = false

# Slack webhook URL (only used if Slack notifications enabled)
# slack_webhook_url = "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"

# Events that trigger notifications
notification_events = [
  "BACKUP_JOB_FAILED",
  "BACKUP_JOB_ABORTED", 
  "COPY_JOB_FAILED"
]

# ==============================================================================
# Lambda Function Configuration
# ==============================================================================

# Python runtime version for Lambda functions
lambda_runtime = "python3.12"

# Lambda function settings
lambda_timeout     = 300  # 5 minutes
lambda_memory_size = 256  # MB
lambda_log_level   = "INFO"

# ==============================================================================
# Monitoring and Logging Configuration
# ==============================================================================

# CloudWatch log retention (days)
log_retention_days = 30

# Enable detailed monitoring and dashboard
enable_detailed_monitoring    = true
create_cloudwatch_dashboard  = true
dashboard_refresh_interval   = 300  # 5 minutes

# ==============================================================================
# Cost Optimization Configuration
# ==============================================================================

# Enable cost allocation tags
enable_cost_allocation_tags = true

# Cost center for billing
cost_center = "IT-Infrastructure"

# Monthly budget alert threshold (USD, 0 to disable)
budget_alert_threshold = 500

# Enable intelligent tiering for cost optimization
enable_intelligent_tiering = true

# ==============================================================================
# Advanced Backup Configuration
# ==============================================================================

# Enable continuous backup (Point-in-Time Recovery) for supported resources
enable_continuous_backup = false

# Enable AWS Backup reporting for compliance
enable_backup_reports = true

# S3 bucket for backup reports (leave empty to auto-create)
report_delivery_s3_bucket = ""

# ==============================================================================
# Disaster Recovery Configuration
# ==============================================================================

# Business continuity targets
rpo_target_hours = 24  # Recovery Point Objective (hours)
rto_target_hours = 4   # Recovery Time Objective (hours)

# Cross-account backup sharing
enable_cross_account_backup = false
backup_destination_account_ids = [
  # "123456789012",  # Disaster recovery account
  # "210987654321"   # Compliance archive account
]

# ==============================================================================
# Feature Flags
# ==============================================================================

# Enable/disable specific features
enable_backup_notifications    = true
enable_lambda_validation       = true
enable_eventbridge_monitoring  = true
enable_multi_region_monitoring = true
enable_resource_tagging        = true

# ==============================================================================
# Additional Resource Tags
# ==============================================================================

# Additional tags applied to all resources
tags = {
  Owner           = "DataEngineering"
  CostCenter      = "IT-Infrastructure"
  ComplianceLevel = "SOC2"
  BackupStrategy  = "MultiRegion"
  DataClass       = "Confidential"
  BusinessUnit    = "Technology"
  Project         = "DisasterRecovery"
  
  # Example compliance tags
  # "compliance:pci-dss"    = "true"
  # "compliance:hipaa"      = "true"
  # "compliance:sox"        = "true"
  # "compliance:gdpr"       = "true"
  
  # Example operational tags
  # "ops:monitoring"        = "enabled"
  # "ops:auto-scaling"      = "disabled"
  # "ops:maintenance"       = "sunday-3am"
  
  # Example financial tags
  # "billing:department"    = "engineering"
  # "billing:team"         = "platform"
  # "billing:environment"  = "production"
}

# ==============================================================================
# Configuration Examples for Different Scenarios
# ==============================================================================

# Example 1: High-Frequency Backup for Critical Systems
# daily_backup_schedule = "cron(0 */6 * * ? *)"  # Every 6 hours
# daily_retention_days = 90
# daily_cold_storage_days = 7

# Example 2: Cost-Optimized Configuration
# daily_retention_days = 30
# daily_cold_storage_days = 7
# weekly_retention_days = 365
# weekly_cold_storage_days = 30

# Example 3: Compliance-Heavy Configuration
# enable_backup_vault_lock = true
# vault_lock_min_retention_days = 2555  # 7 years
# weekly_retention_days = 3650          # 10 years
# enable_backup_reports = true

# Example 4: Development Environment
# environment = "development"
# daily_retention_days = 7
# weekly_retention_days = 30
# enable_detailed_monitoring = false
# notification_email = null

# Example 5: Multi-Account Setup
# enable_cross_account_backup = true
# backup_destination_account_ids = ["123456789012", "210987654321"]

# ==============================================================================
# Notes and Best Practices
# ==============================================================================

# 1. Resource Tagging Strategy:
#    - Ensure all critical resources have Environment and BackupEnabled tags
#    - Use consistent tagging across your organization
#    - Regularly audit tags using AWS Config or custom scripts

# 2. Retention Policy Planning:
#    - Balance compliance requirements with storage costs
#    - Consider regulatory requirements (SOX, HIPAA, PCI-DSS, GDPR)
#    - Test restore procedures regularly

# 3. Cross-Region Considerations:
#    - Data transfer costs apply for cross-region copies
#    - Ensure target regions support required AWS services
#    - Consider data residency and sovereignty requirements

# 4. Cost Optimization:
#    - Use lifecycle policies to transition to cold storage
#    - Monitor backup storage costs with CloudWatch
#    - Consider intelligent tiering for variable access patterns

# 5. Security Best Practices:
#    - Use customer-managed KMS keys for sensitive data
#    - Enable backup vault lock for immutable backups
#    - Regularly rotate IAM credentials and KMS keys
#    - Monitor access patterns with CloudTrail

# 6. Operational Excellence:
#    - Set up CloudWatch alarms for backup failures
#    - Create runbooks for common backup scenarios
#    - Test disaster recovery procedures quarterly
#    - Document backup and restore procedures