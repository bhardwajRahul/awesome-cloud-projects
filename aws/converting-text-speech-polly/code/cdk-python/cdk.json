{
  "app": "python app.py",
  "watch": {
    "include": [
      "**"
    ],
    "exclude": [
      "README.md",
      "cdk*.json",
      "requirements*.txt",
      "source.bat",
      "**/__pycache__",
      "**/*.pyc"
    ]
  },
  "context": {
    "@aws-cdk/aws-lambda:recognizeLayerVersion": true,
    "@aws-cdk/core:checkSecretUsage": true,
    "@aws-cdk/core:target-partitions": [
      "aws",
      "aws-cn"
    ],
    "@aws-cdk-containers/ecs-service-extensions:enableLogging": true,
    "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": true,
    "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": true,
    "@aws-cdk/aws-iam:minimizePolicies": true,
    "@aws-cdk/core:validateSnapshotRemovalPolicy": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": true,
    "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
    "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
    "@aws-cdk/aws-apigateway:disableCloudWatchRole": false,
    "@aws-cdk/core:enablePartitionLiterals": true,
    "@aws-cdk/aws-events:eventsTargetQueueSameAccount": true,
    "@aws-cdk/aws-iam:standardizedServicePrincipals": true,
    "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": true,
    "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": true,
    "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
    "@aws-cdk/aws-route53-patters:useCertificate": true,
    "@aws-cdk/customresources:installLatestAwsSdkDefault": false,
    "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": true,
    "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": true,
    "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": true,
    "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": true,
    "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": true,
    "@aws-cdk/aws-redshift:columnId": true,
    "@aws-cdk/aws-stepfunctions-tasks:enableLogging": true,
    "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": true,
    "@aws-cdk/aws-apigateway:requestValidatorUniqueId": true,
    "@aws-cdk/aws-kms:aliasNameRef": true,
    "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": true,
    "@aws-cdk/core:includePrefixInUniqueNameGeneration": true,
    "@aws-cdk/aws-efs:denyAnonymousAccess": true,
    "@aws-cdk/aws-opensearchservice:enableLogging": true,
    "@aws-cdk/aws-norththamerica-logstream:enableLogging": true,
    "@aws-cdk/aws-lambda:codeMountDeploymentRole": true,
    "@aws-cdk/aws-s3deployment:useNewStyleStackSynthesis": true,
    "@aws-cdk/aws-s3:enforceSSL": true,
    "@aws-cdk/aws-ec2:vpnConnectionLogging": true,
    "@aws-cdk/aws-lambda:automaticallyCreateLayer": true
  },
  "build": {
    "commands": [
      "echo 'Building CDK application...'",
      "python -m pip install --upgrade pip",
      "python -m pip install -r requirements.txt"
    ]
  },
  "deploy": {
    "commands": [
      "echo 'Deploying Text-to-Speech Polly Stack...'",
      "cdk deploy --require-approval never"
    ]
  },
  "destroy": {
    "commands": [
      "echo 'Destroying Text-to-Speech Polly Stack...'",
      "cdk destroy --force"
    ]
  },
  "diff": {
    "commands": [
      "cdk diff"
    ]
  },
  "synth": {
    "commands": [
      "cdk synth"
    ]
  },
  "toolkit": {
    "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
    "bucketName": "cdktoolkit-stagingbucket-${Account}-${Region}",
    "bucketPrefix": "assets/",
    "roleArn": "arn:aws:iam::${Account}:role/cdk-hnb659fds-deploy-role-${Account}-${Region}",
    "cloudFormationExecutionRole": "arn:aws:iam::${Account}:role/cdk-hnb659fds-cfn-exec-role-${Account}-${Region}",
    "lookupRoleArn": "arn:aws:iam::${Account}:role/cdk-hnb659fds-lookup-role-${Account}-${Region}",
    "fileAssetsBucketName": "cdk-hnb659fds-assets-${Account}-${Region}",
    "imageAssetsRepositoryName": "cdk-hnb659fds-container-assets-${Account}-${Region}"
  },
  "featureFlags": {
    "@aws-cdk/core:newStyleStackSynthesis": true,
    "@aws-cdk/core:stackRelativeExports": true,
    "@aws-cdk/aws-ecr-assets:dockerIgnoreSupport": true,
    "@aws-cdk/aws-secretsmanager:parseOwnedSecretName": true,
    "@aws-cdk/aws-kms:defaultKeyPolicies": true,
    "@aws-cdk/aws-s3:grantWriteWithoutAcl": true,
    "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": true,
    "@aws-cdk/aws-rds:lowercaseDbIdentifier": true,
    "@aws-cdk/aws-efs:defaultEncryptionAtRest": true,
    "@aws-cdk/aws-lambda:recognizeVersionProps": true,
    "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": true,
    "@aws-cdk/aws-s3:defaultBucketEncryption": true
  },
  "profiles": {
    "development": {
      "context": {
        "environment": "dev",
        "cost_center": "engineering",
        "stack_name": "TextToSpeechPollyStack-Dev"
      }
    },
    "staging": {
      "context": {
        "environment": "staging",
        "cost_center": "engineering", 
        "stack_name": "TextToSpeechPollyStack-Staging"
      }
    },
    "production": {
      "context": {
        "environment": "prod",
        "cost_center": "operations",
        "stack_name": "TextToSpeechPollyStack-Prod"
      }
    }
  },
  "notices": false,
  "versionReporting": false,
  "pathMetadata": false,
  "assetMetadata": false,
  "bundlingStacks": [
    "*"
  ],
  "rollback": false,
  "stackTags": {
    "Project": "TextToSpeechSolutions",
    "Stack": "PollyTTS",
    "Owner": "CDK",
    "Repository": "recipes"
  },
  "environmentVariables": {
    "CDK_DEFAULT_REGION": "us-east-1",
    "CDK_DEFAULT_ACCOUNT": "123456789012"
  },
  "outputs": {
    "versioned": false,
    "file": "cdk-outputs.json"
  },
  "lookups": true,
  "checksums": true,
  "assetPublishingOptions": {
    "buildArgs": {},
    "target": ".",
    "dockerOutputs": []
  },
  "tags": {
    "Application": "TextToSpeechPolly",
    "Environment": "${environment}",
    "CostCenter": "${cost_center}"
  },
  "metadata": {
    "analytics": false,
    "version": "2.162.1",
    "description": "Text-to-Speech Solutions with Amazon Polly CDK Application",
    "keywords": [
      "aws",
      "cdk", 
      "polly",
      "text-to-speech",
      "neural-voices",
      "serverless"
    ]
  }
}