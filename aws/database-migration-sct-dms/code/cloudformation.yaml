AWSTemplateFormatVersion: '2010-09-09'
Description: 'Infrastructure as Code for Database Migration Strategies with AWS DMS and Schema Conversion Tool'

# ==============================================================================
# PARAMETERS
# ==============================================================================
Parameters:
  ProjectName:
    Type: String
    Default: 'dms-migration'
    Description: 'Name prefix for all resources'
    AllowedPattern: '^[a-zA-Z][a-zA-Z0-9-]*$'
    ConstraintDescription: 'Must start with a letter and contain only alphanumeric characters and hyphens'
  
  Environment:
    Type: String
    Default: 'dev'
    AllowedValues: ['dev', 'staging', 'prod']
    Description: 'Environment name for resource tagging'
  
  # VPC Configuration
  VpcCidr:
    Type: String
    Default: '10.0.0.0/16'
    Description: 'CIDR block for VPC'
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$'
    ConstraintDescription: 'Must be a valid CIDR range'
  
  Subnet1Cidr:
    Type: String
    Default: '10.0.1.0/24'
    Description: 'CIDR block for first subnet'
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$'
  
  Subnet2Cidr:
    Type: String
    Default: '10.0.2.0/24'
    Description: 'CIDR block for second subnet'
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$'
  
  # DMS Configuration
  DmsInstanceClass:
    Type: String
    Default: 'dms.t3.medium'
    AllowedValues: 
      - 'dms.t3.micro'
      - 'dms.t3.small'
      - 'dms.t3.medium'
      - 'dms.t3.large'
      - 'dms.c5.large'
      - 'dms.c5.xlarge'
      - 'dms.c5.2xlarge'
      - 'dms.c5.4xlarge'
    Description: 'DMS replication instance class'
  
  DmsAllocatedStorage:
    Type: Number
    Default: 100
    MinValue: 20
    MaxValue: 6144
    Description: 'DMS replication instance storage size in GB'
  
  DmsEngineVersion:
    Type: String
    Default: '3.5.2'
    Description: 'DMS engine version'
  
  DmsMultiAZ:
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    Description: 'Enable Multi-AZ deployment for DMS replication instance'
  
  DmsPubliclyAccessible:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: 'Make DMS replication instance publicly accessible'
  
  # Source Database Configuration
  SourceDatabaseEngine:
    Type: String
    Default: 'oracle'
    AllowedValues: ['oracle', 'sqlserver', 'mysql', 'postgres', 'db2', 'sybase', 'mongodb']
    Description: 'Source database engine type'
  
  SourceDatabaseHost:
    Type: String
    Default: 'your-source-database-host'
    Description: 'Source database hostname or IP address'
  
  SourceDatabasePort:
    Type: Number
    Default: 1521
    MinValue: 1
    MaxValue: 65535
    Description: 'Source database port number'
  
  SourceDatabaseName:
    Type: String
    Default: 'your-source-database'
    Description: 'Source database name'
  
  SourceDatabaseUsername:
    Type: String
    Default: 'your-source-username'
    Description: 'Source database username'
  
  SourceDatabasePassword:
    Type: String
    NoEcho: true
    Default: 'your-source-password'
    Description: 'Source database password'
    MinLength: 8
    MaxLength: 128
  
  # Target Database Configuration
  TargetDatabaseEngine:
    Type: String
    Default: 'postgres'
    AllowedValues: ['postgres', 'mysql', 'aurora-postgresql', 'aurora-mysql', 'oracle', 'sqlserver']
    Description: 'Target database engine type'
  
  TargetDbInstanceClass:
    Type: String
    Default: 'db.t3.medium'
    AllowedValues:
      - 'db.t3.micro'
      - 'db.t3.small'
      - 'db.t3.medium'
      - 'db.t3.large'
      - 'db.r5.large'
      - 'db.r5.xlarge'
      - 'db.r5.2xlarge'
    Description: 'Target RDS instance class'
  
  TargetDbAllocatedStorage:
    Type: Number
    Default: 100
    MinValue: 20
    MaxValue: 65536
    Description: 'Target RDS allocated storage in GB'
  
  TargetDbEngineVersion:
    Type: String
    Default: '14.9'
    Description: 'Target database engine version'
  
  TargetDbUsername:
    Type: String
    Default: 'dbadmin'
    Description: 'Target database master username'
    AllowedPattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    ConstraintDescription: 'Must start with a letter and contain only alphanumeric characters and underscores'
  
  TargetDbBackupRetentionPeriod:
    Type: Number
    Default: 7
    MinValue: 0
    MaxValue: 35
    Description: 'Target database backup retention period in days'
  
  # Migration Task Configuration
  MigrationTaskType:
    Type: String
    Default: 'full-load-and-cdc'
    AllowedValues: ['full-load', 'cdc', 'full-load-and-cdc']
    Description: 'Migration task type'
  
  # Monitoring Configuration
  EnableCloudWatchLogs:
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: 'Enable CloudWatch logs for DMS tasks'
  
  CloudWatchLogRetentionDays:
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
    Description: 'CloudWatch log retention period in days'

# ==============================================================================
# CONDITIONS
# ==============================================================================
Conditions:
  IsProduction: !Equals [!Ref Environment, 'prod']
  EnableMultiAZ: !Equals [!Ref DmsMultiAZ, 'true']
  EnableCloudWatch: !Equals [!Ref EnableCloudWatchLogs, 'true']
  IsOracleSource: !Equals [!Ref SourceDatabaseEngine, 'oracle']
  IsPostgresTarget: !Equals [!Ref TargetDatabaseEngine, 'postgres']

# ==============================================================================
# RESOURCES
# ==============================================================================
Resources:
  # ==============================================================================
  # VPC AND NETWORKING
  # ==============================================================================
  
  # VPC for DMS and RDS resources
  MigrationVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-vpc'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # Internet Gateway for public access
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-igw'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # Attach Internet Gateway to VPC
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref MigrationVPC
  
  # First subnet for multi-AZ deployment
  MigrationSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MigrationVPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref Subnet1Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-subnet-1'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # Second subnet for multi-AZ deployment
  MigrationSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MigrationVPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref Subnet2Cidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-subnet-2'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # Route table for public subnets
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MigrationVPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-public-rt'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # Route to Internet Gateway
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  
  # Associate subnet 1 with route table
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref MigrationSubnet1
  
  # Associate subnet 2 with route table
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref MigrationSubnet2
  
  # ==============================================================================
  # SECURITY GROUPS
  # ==============================================================================
  
  # Security group for DMS replication instance
  DmsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for DMS replication instance'
      VpcId: !Ref MigrationVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: '0.0.0.0/0'
          Description: 'HTTPS access for DMS management'
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: '0.0.0.0/0'
          Description: 'All outbound traffic'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-dms-sg'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # Security group for RDS target database
  RdsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for RDS target database'
      VpcId: !Ref MigrationVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref DmsSecurityGroup
          Description: 'PostgreSQL access from DMS'
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: '0.0.0.0/0'
          Description: 'PostgreSQL access for testing (remove in production)'
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: '0.0.0.0/0'
          Description: 'All outbound traffic'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-rds-sg'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # ==============================================================================
  # SECRETS MANAGER
  # ==============================================================================
  
  # Secret for target database password
  TargetDatabaseSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${ProjectName}-${Environment}-target-db-password'
      Description: 'Target database password for migration'
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${TargetDbUsername}"}'
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # ==============================================================================
  # CLOUDWATCH LOGS
  # ==============================================================================
  
  # Log group for DMS tasks
  DmsLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: EnableCloudWatch
    Properties:
      LogGroupName: !Sub '/aws/dms/tasks/${ProjectName}-${Environment}'
      RetentionInDays: !Ref CloudWatchLogRetentionDays
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # ==============================================================================
  # IAM ROLES AND POLICIES
  # ==============================================================================
  
  # DMS VPC Role (if it doesn't exist)
  DmsVpcRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'dms-vpc-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: dms.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # DMS CloudWatch Logs Role
  DmsCloudWatchLogsRole:
    Type: AWS::IAM::Role
    Condition: EnableCloudWatch
    Properties:
      RoleName: !Sub '${ProjectName}-${Environment}-dms-cloudwatch-logs-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: dms.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # ==============================================================================
  # DMS RESOURCES
  # ==============================================================================
  
  # DMS Subnet Group
  DmsSubnetGroup:
    Type: AWS::DMS::ReplicationSubnetGroup
    Properties:
      ReplicationSubnetGroupIdentifier: !Sub '${ProjectName}-${Environment}-dms-subnet-group'
      ReplicationSubnetGroupDescription: 'Subnet group for DMS replication instance'
      SubnetIds:
        - !Ref MigrationSubnet1
        - !Ref MigrationSubnet2
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-dms-subnet-group'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # DMS Replication Instance
  DmsReplicationInstance:
    Type: AWS::DMS::ReplicationInstance
    Properties:
      ReplicationInstanceIdentifier: !Sub '${ProjectName}-${Environment}-dms-instance'
      ReplicationInstanceClass: !Ref DmsInstanceClass
      AllocatedStorage: !Ref DmsAllocatedStorage
      EngineVersion: !Ref DmsEngineVersion
      MultiAZ: !If [EnableMultiAZ, true, false]
      PubliclyAccessible: !Ref DmsPubliclyAccessible
      ReplicationSubnetGroupIdentifier: !Ref DmsSubnetGroup
      VpcSecurityGroupIds:
        - !Ref DmsSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-dms-instance'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # DMS Source Endpoint
  DmsSourceEndpoint:
    Type: AWS::DMS::Endpoint
    Properties:
      EndpointIdentifier: !Sub '${ProjectName}-${Environment}-source-endpoint'
      EndpointType: source
      EngineName: !Ref SourceDatabaseEngine
      ServerName: !Ref SourceDatabaseHost
      Port: !Ref SourceDatabasePort
      DatabaseName: !Ref SourceDatabaseName
      Username: !Ref SourceDatabaseUsername
      Password: !Ref SourceDatabasePassword
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-source-endpoint'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: EndpointType
          Value: 'Source'
  
  # ==============================================================================
  # RDS RESOURCES
  # ==============================================================================
  
  # RDS Subnet Group
  RdsSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub '${ProjectName}-${Environment}-rds-subnet-group'
      DBSubnetGroupDescription: 'Subnet group for RDS target database'
      SubnetIds:
        - !Ref MigrationSubnet1
        - !Ref MigrationSubnet2
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-rds-subnet-group'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # RDS Target Database Instance
  RdsTargetInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub '${ProjectName}-${Environment}-target-db'
      DBInstanceClass: !Ref TargetDbInstanceClass
      Engine: !Ref TargetDatabaseEngine
      EngineVersion: !Ref TargetDbEngineVersion
      AllocatedStorage: !Ref TargetDbAllocatedStorage
      MasterUsername: !Ref TargetDbUsername
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${TargetDatabaseSecret}:SecretString:password}}'
      VPCSecurityGroups:
        - !Ref RdsSecurityGroup
      DBSubnetGroupName: !Ref RdsSubnetGroup
      PubliclyAccessible: true
      BackupRetentionPeriod: !Ref TargetDbBackupRetentionPeriod
      MultiAZ: !If [IsProduction, true, false]
      StorageType: 'gp2'
      StorageEncrypted: true
      DeletionProtection: !If [IsProduction, true, false]
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-target-db'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
  
  # DMS Target Endpoint
  DmsTargetEndpoint:
    Type: AWS::DMS::Endpoint
    Properties:
      EndpointIdentifier: !Sub '${ProjectName}-${Environment}-target-endpoint'
      EndpointType: target
      EngineName: !Ref TargetDatabaseEngine
      ServerName: !GetAtt RdsTargetInstance.Endpoint.Address
      Port: !GetAtt RdsTargetInstance.Endpoint.Port
      DatabaseName: !If [IsPostgresTarget, 'postgres', 'mysql']
      Username: !Ref TargetDbUsername
      Password: !Sub '{{resolve:secretsmanager:${TargetDatabaseSecret}:SecretString:password}}'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-target-endpoint'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: EndpointType
          Value: 'Target'
  
  # ==============================================================================
  # CLOUDWATCH DASHBOARD
  # ==============================================================================
  
  # CloudWatch Dashboard for monitoring migration
  MigrationDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${ProjectName}-${Environment}-migration-dashboard'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/DMS", "FreeableMemory", "ReplicationInstanceIdentifier", "${DmsReplicationInstance}" ],
                  [ ".", "CPUUtilization", ".", "." ],
                  [ ".", "NetworkTransmitThroughput", ".", "." ],
                  [ ".", "NetworkReceiveThroughput", ".", "." ]
                ],
                "period": 300,
                "stat": "Average",
                "region": "${AWS::Region}",
                "title": "DMS Replication Instance Metrics",
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/RDS", "CPUUtilization", "DBInstanceIdentifier", "${RdsTargetInstance}" ],
                  [ ".", "DatabaseConnections", ".", "." ],
                  [ ".", "FreeableMemory", ".", "." ],
                  [ ".", "FreeStorageSpace", ".", "." ]
                ],
                "period": 300,
                "stat": "Average",
                "region": "${AWS::Region}",
                "title": "RDS Target Database Metrics",
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                }
              }
            }
          ]
        }

# ==============================================================================
# OUTPUTS
# ==============================================================================
Outputs:
  VpcId:
    Description: 'VPC ID for the migration infrastructure'
    Value: !Ref MigrationVPC
    Export:
      Name: !Sub '${ProjectName}-${Environment}-vpc-id'
  
  DmsReplicationInstanceId:
    Description: 'DMS Replication Instance Identifier'
    Value: !Ref DmsReplicationInstance
    Export:
      Name: !Sub '${ProjectName}-${Environment}-dms-instance-id'
  
  DmsReplicationInstanceArn:
    Description: 'DMS Replication Instance ARN'
    Value: !Sub 'arn:aws:dms:${AWS::Region}:${AWS::AccountId}:rep:${DmsReplicationInstance}'
    Export:
      Name: !Sub '${ProjectName}-${Environment}-dms-instance-arn'
  
  DmsSourceEndpointArn:
    Description: 'DMS Source Endpoint ARN'
    Value: !Sub 'arn:aws:dms:${AWS::Region}:${AWS::AccountId}:endpoint:${DmsSourceEndpoint}'
    Export:
      Name: !Sub '${ProjectName}-${Environment}-source-endpoint-arn'
  
  DmsTargetEndpointArn:
    Description: 'DMS Target Endpoint ARN'
    Value: !Sub 'arn:aws:dms:${AWS::Region}:${AWS::AccountId}:endpoint:${DmsTargetEndpoint}'
    Export:
      Name: !Sub '${ProjectName}-${Environment}-target-endpoint-arn'
  
  TargetDatabaseEndpoint:
    Description: 'Target RDS Database Endpoint'
    Value: !GetAtt RdsTargetInstance.Endpoint.Address
    Export:
      Name: !Sub '${ProjectName}-${Environment}-target-db-endpoint'
  
  TargetDatabasePort:
    Description: 'Target RDS Database Port'
    Value: !GetAtt RdsTargetInstance.Endpoint.Port
    Export:
      Name: !Sub '${ProjectName}-${Environment}-target-db-port'
  
  TargetDatabaseSecretArn:
    Description: 'Target Database Secret ARN'
    Value: !Ref TargetDatabaseSecret
    Export:
      Name: !Sub '${ProjectName}-${Environment}-target-db-secret-arn'
  
  DashboardUrl:
    Description: 'CloudWatch Dashboard URL'
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${ProjectName}-${Environment}-migration-dashboard'
  
  DmsConsoleUrl:
    Description: 'DMS Console URL'
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/dms/v2/home?region=${AWS::Region}#replicationInstances'
  
  NextSteps:
    Description: 'Next steps for migration setup'
    Value: |
      1. Test connectivity between DMS endpoints
      2. Create migration task with appropriate table mappings
      3. Use AWS Schema Conversion Tool (SCT) for schema analysis
      4. Start migration task and monitor progress
      5. Validate data integrity after migration
  
  MigrationTaskCommand:
    Description: 'AWS CLI command to create migration task'
    Value: !Sub |
      aws dms create-replication-task \
        --replication-task-identifier ${ProjectName}-${Environment}-migration-task \
        --source-endpoint-arn arn:aws:dms:${AWS::Region}:${AWS::AccountId}:endpoint:${DmsSourceEndpoint} \
        --target-endpoint-arn arn:aws:dms:${AWS::Region}:${AWS::AccountId}:endpoint:${DmsTargetEndpoint} \
        --replication-instance-arn arn:aws:dms:${AWS::Region}:${AWS::AccountId}:rep:${DmsReplicationInstance} \
        --migration-type ${MigrationTaskType} \
        --table-mappings file://table-mappings.json
  
  ValidationCommands:
    Description: 'Commands to validate the migration setup'
    Value: !Sub |
      # Test source endpoint connectivity
      aws dms test-connection --replication-instance-arn arn:aws:dms:${AWS::Region}:${AWS::AccountId}:rep:${DmsReplicationInstance} --endpoint-arn arn:aws:dms:${AWS::Region}:${AWS::AccountId}:endpoint:${DmsSourceEndpoint}
      
      # Test target endpoint connectivity  
      aws dms test-connection --replication-instance-arn arn:aws:dms:${AWS::Region}:${AWS::AccountId}:rep:${DmsReplicationInstance} --endpoint-arn arn:aws:dms:${AWS::Region}:${AWS::AccountId}:endpoint:${DmsTargetEndpoint}
      
      # Monitor replication instance
      aws dms describe-replication-instances --replication-instance-identifier ${DmsReplicationInstance}