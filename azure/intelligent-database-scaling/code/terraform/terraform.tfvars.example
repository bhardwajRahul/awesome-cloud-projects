# Terraform Variables Example
# Copy this file to terraform.tfvars and customize the values for your deployment

# Basic Configuration
resource_group_name = "rg-intelligent-scaling-demo"
location           = "East US"
environment        = "dev"
project_name       = "intelligent-scaling"

# SQL Database Configuration
sql_server_admin_username = "sqladmin"
# sql_server_admin_password = "YourSecurePassword123!"  # Optional - will be generated if not provided
sql_database_name         = "hyperscale-db"
sql_database_initial_sku  = "HS_Gen5_2"
sql_database_max_size_gb  = 100

# Scaling Configuration
cpu_scale_up_threshold              = 80
cpu_scale_down_threshold            = 30
scale_up_evaluation_window_minutes  = 5
scale_down_evaluation_window_minutes = 15
max_vcores                          = 40
min_vcores                          = 2
scaling_step_size                   = 2

# Monitoring Configuration
log_analytics_retention_days = 30
enable_detailed_monitoring   = true
alert_email_recipients       = [
  "admin@example.com",
  "dba@example.com"
]

# Security Configuration
enable_key_vault_rbac              = true
key_vault_sku                      = "standard"
sql_server_public_access_enabled   = true
allowed_ip_ranges = [
  {
    name     = "office-network"
    start_ip = "203.0.113.0"
    end_ip   = "203.0.113.255"
  }
]

# Logic Apps Configuration
logic_app_consumption_plan = true
workflow_trigger_frequency = 5

# Cost Management
enable_cost_alerts    = true
monthly_budget_limit  = 500

# Common Tags
common_tags = {
  Solution    = "Intelligent Database Scaling"
  Environment = "Development"
  CreatedBy   = "Terraform"
  Owner       = "Database Team"
  CostCenter  = "IT-Database"
}

# Advanced Configuration
enable_zone_redundancy           = false
backup_retention_days            = 7
enable_threat_detection          = true
storage_account_replication_type = "LRS"