# Resource Group Variables
variable "resource_group_name" {
  description = "Name of the resource group for container security resources"
  type        = string
  default     = "rg-container-security"
}

variable "location" {
  description = "Azure region where resources will be created"
  type        = string
  default     = "East US"
  
  validation {
    condition = can(regex("^[A-Za-z0-9 ]+$", var.location))
    error_message = "Location must be a valid Azure region name."
  }
}

# Container Registry Variables
variable "acr_name" {
  description = "Name of the Azure Container Registry (must be globally unique)"
  type        = string
  default     = "acrcontainersec"
  
  validation {
    condition = can(regex("^[a-zA-Z0-9]+$", var.acr_name)) && length(var.acr_name) >= 5 && length(var.acr_name) <= 50
    error_message = "ACR name must be alphanumeric, between 5-50 characters, and globally unique."
  }
}

variable "acr_sku" {
  description = "SKU for the Azure Container Registry"
  type        = string
  default     = "Premium"
  
  validation {
    condition = contains(["Basic", "Standard", "Premium"], var.acr_sku)
    error_message = "ACR SKU must be Basic, Standard, or Premium. Premium is required for advanced security features."
  }
}

# Key Vault Variables
variable "keyvault_name" {
  description = "Name of the Azure Key Vault for storing secrets"
  type        = string
  default     = "kv-containersec"
  
  validation {
    condition = can(regex("^[a-zA-Z0-9-]+$", var.keyvault_name)) && length(var.keyvault_name) >= 3 && length(var.keyvault_name) <= 24
    error_message = "Key Vault name must be alphanumeric with hyphens, between 3-24 characters."
  }
}

variable "keyvault_sku" {
  description = "SKU for the Azure Key Vault"
  type        = string
  default     = "standard"
  
  validation {
    condition = contains(["standard", "premium"], var.keyvault_sku)
    error_message = "Key Vault SKU must be standard or premium."
  }
}

# Log Analytics Variables
variable "log_analytics_workspace_name" {
  description = "Name of the Log Analytics workspace for monitoring"
  type        = string
  default     = "law-container-security"
}

variable "log_analytics_sku" {
  description = "SKU for the Log Analytics workspace"
  type        = string
  default     = "PerGB2018"
  
  validation {
    condition = contains(["Free", "PerNode", "PerGB2018", "Standalone", "Standard", "Premium"], var.log_analytics_sku)
    error_message = "Log Analytics SKU must be one of: Free, PerNode, PerGB2018, Standalone, Standard, Premium."
  }
}

variable "log_analytics_retention_days" {
  description = "Retention period for Log Analytics workspace in days"
  type        = number
  default     = 30
  
  validation {
    condition = var.log_analytics_retention_days >= 7 && var.log_analytics_retention_days <= 730
    error_message = "Log Analytics retention must be between 7 and 730 days."
  }
}

# Azure DevOps Variables
variable "azdo_project_name" {
  description = "Name of the Azure DevOps project"
  type        = string
  default     = "container-security-automation"
}

variable "azdo_project_description" {
  description = "Description of the Azure DevOps project"
  type        = string
  default     = "Automated container vulnerability remediation with Azure Container Registry and Azure DevOps"
}

variable "azdo_project_visibility" {
  description = "Visibility of the Azure DevOps project"
  type        = string
  default     = "private"
  
  validation {
    condition = contains(["private", "public"], var.azdo_project_visibility)
    error_message = "Azure DevOps project visibility must be private or public."
  }
}

# Service Principal Variables
variable "service_principal_name" {
  description = "Name of the service principal for Azure DevOps authentication"
  type        = string
  default     = "sp-devops-container-security"
}

# Policy Variables
variable "enable_vulnerability_policy" {
  description = "Enable Azure Policy for container vulnerability assessment"
  type        = bool
  default     = true
}

variable "enable_image_age_policy" {
  description = "Enable Azure Policy for container image age limits"
  type        = bool
  default     = true
}

variable "image_age_limit_days" {
  description = "Maximum age for container images in days"
  type        = number
  default     = 30
  
  validation {
    condition = var.image_age_limit_days > 0 && var.image_age_limit_days <= 365
    error_message = "Image age limit must be between 1 and 365 days."
  }
}

# Monitoring Variables
variable "enable_security_alerts" {
  description = "Enable security alerts for vulnerability detection"
  type        = bool
  default     = true
}

variable "alert_severity" {
  description = "Severity level for security alerts (0-4, where 0 is critical)"
  type        = number
  default     = 1
  
  validation {
    condition = var.alert_severity >= 0 && var.alert_severity <= 4
    error_message = "Alert severity must be between 0 (critical) and 4 (informational)."
  }
}

variable "vulnerability_threshold" {
  description = "Minimum number of high/critical vulnerabilities to trigger alerts"
  type        = number
  default     = 1
  
  validation {
    condition = var.vulnerability_threshold >= 0
    error_message = "Vulnerability threshold must be a non-negative number."
  }
}

# Common Tags
variable "common_tags" {
  description = "Common tags to apply to all resources"
  type        = map(string)
  default = {
    Environment = "demo"
    Purpose     = "container-security"
    ManagedBy   = "terraform"
  }
}

# Random Suffix Configuration
variable "use_random_suffix" {
  description = "Whether to append a random suffix to globally unique resource names"
  type        = bool
  default     = true
}

variable "random_suffix_length" {
  description = "Length of the random suffix for resource names"
  type        = number
  default     = 6
  
  validation {
    condition = var.random_suffix_length >= 3 && var.random_suffix_length <= 10
    error_message = "Random suffix length must be between 3 and 10 characters."
  }
}

# Defender for Cloud Variables
variable "enable_defender_for_containers" {
  description = "Enable Microsoft Defender for Container Registries"
  type        = bool
  default     = true
}

variable "defender_pricing_tier" {
  description = "Pricing tier for Microsoft Defender for Container Registries"
  type        = string
  default     = "Standard"
  
  validation {
    condition = contains(["Free", "Standard"], var.defender_pricing_tier)
    error_message = "Defender pricing tier must be Free or Standard."
  }
}