{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "value": "eastus"
    },
    "resourcePrefix": {
      "value": "qa-pipeline"
    },
    "environmentSuffix": {
      "value": "demo001"
    },
    "tags": {
      "value": {
        "purpose": "qa-pipeline",
        "environment": "demo",
        "recipe": "implementing-automated-quality-assurance-pipelines",
        "owner": "devops-team",
        "project": "automated-testing"
      }
    },
    "containerAppsEnvironment": {
      "value": {
        "name": "qa-pipeline-cae-demo001",
        "workloadProfiles": [
          {
            "name": "Consumption",
            "workloadProfileType": "Consumption"
          }
        ]
      }
    },
    "logAnalyticsWorkspace": {
      "value": {
        "name": "qa-pipeline-law-demo001",
        "sku": "PerGB2018",
        "retentionInDays": 30
      }
    },
    "storageAccount": {
      "value": {
        "name": "qapipelinestdemo001",
        "sku": "Standard_LRS",
        "kind": "StorageV2",
        "containers": [
          "load-test-scripts",
          "monitoring-templates",
          "test-results",
          "test-artifacts"
        ]
      }
    },
    "loadTesting": {
      "value": {
        "name": "qa-pipeline-lt-demo001"
      }
    },
    "containerAppsJobs": {
      "value": {
        "unitTest": {
          "name": "unit-test-job",
          "triggerType": "Manual",
          "replicaTimeout": 1800,
          "replicaRetryLimit": 3,
          "parallelism": 3,
          "replicaCompletionCount": 1,
          "image": "mcr.microsoft.com/dotnet/sdk:7.0",
          "cpu": "1.0",
          "memory": "2Gi",
          "command": [
            "/bin/bash"
          ],
          "args": [
            "-c",
            "echo 'Running unit tests...'; sleep 10; echo 'Unit tests completed successfully'"
          ]
        },
        "integrationTest": {
          "name": "integration-test-job",
          "triggerType": "Manual",
          "replicaTimeout": 3600,
          "replicaRetryLimit": 2,
          "parallelism": 2,
          "replicaCompletionCount": 1,
          "image": "mcr.microsoft.com/dotnet/sdk:7.0",
          "cpu": "1.5",
          "memory": "3Gi",
          "command": [
            "/bin/bash"
          ],
          "args": [
            "-c",
            "echo 'Running integration tests with timeout: $TIMEOUT'; sleep 15; echo 'Integration tests completed'"
          ],
          "environmentVariables": [
            {
              "name": "TEST_TYPE",
              "value": "integration"
            },
            {
              "name": "TIMEOUT",
              "value": "3600"
            }
          ]
        },
        "performanceTest": {
          "name": "performance-test-job",
          "triggerType": "Manual",
          "replicaTimeout": 7200,
          "replicaRetryLimit": 1,
          "parallelism": 1,
          "replicaCompletionCount": 1,
          "image": "mcr.microsoft.com/azure-cli:latest",
          "cpu": "0.5",
          "memory": "1Gi",
          "command": [
            "/bin/bash"
          ],
          "args": [
            "-c",
            "echo 'Starting load test orchestration'; echo 'Load test: $LOAD_TEST_NAME'; sleep 30; echo 'Performance test orchestration completed'"
          ],
          "environmentVariables": [
            {
              "name": "LOAD_TEST_NAME",
              "value": "qa-pipeline-lt-demo001"
            },
            {
              "name": "RESOURCE_GROUP",
              "value": "rg-qa-pipeline-demo"
            }
          ]
        },
        "securityTest": {
          "name": "security-test-job",
          "triggerType": "Manual",
          "replicaTimeout": 2400,
          "replicaRetryLimit": 2,
          "parallelism": 1,
          "replicaCompletionCount": 1,
          "image": "mcr.microsoft.com/dotnet/sdk:7.0",
          "cpu": "1.0",
          "memory": "2Gi",
          "command": [
            "/bin/bash"
          ],
          "args": [
            "-c",
            "echo 'Starting security scan: $SECURITY_SCAN_TYPE'; sleep 20; echo 'Security scan completed - format: $REPORT_FORMAT'"
          ],
          "environmentVariables": [
            {
              "name": "SECURITY_SCAN_TYPE",
              "value": "full"
            },
            {
              "name": "REPORT_FORMAT",
              "value": "json"
            }
          ]
        }
      }
    },
    "applicationInsights": {
      "value": {
        "name": "qa-pipeline-ai-demo001",
        "applicationType": "web"
      }
    }
  }
}